apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.4-gke.1
    creationTimestamp: "2025-08-31T15:33:20Z"
    generateName: collector-
    generation: 1
    labels:
      app: managed-prometheus-collector
      app.kubernetes.io/name: collector
      app.kubernetes.io/version: 0.15.4
      controller-revision-hash: 5b87bff5ff
      pod-template-generation: "1"
    name: collector-nbn47
    namespace: gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: collector
      uid: 9555cc7c-14b4-4a76-847a-6fc335d4523f
    resourceVersion: "1756654450110511015"
    uid: 5d964b94-9585-405a-9028-f1ccd6775cd1
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    automountServiceAccountToken: true
    containers:
    - args:
      - --config.file=/prometheus/config_out/config.yaml
      - --enable-feature=exemplar-storage
      - --enable-feature=google-kubernetes-secret-provider
      - --storage.tsdb.path=/prometheus/data
      - --storage.tsdb.no-lockfile
      - --gmp.storage.delete-data-on-start
      - --storage.tsdb.retention.time=30m
      - --storage.tsdb.wal-compression
      - --storage.tsdb.min-block-duration=10m
      - --storage.tsdb.max-block-duration=10m
      - --web.listen-address=:19090
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --export.user-agent-mode=gke
      - --log.format=json
      env:
      - name: GOGC
        value: "25"
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/prometheus:v2.45.3-gmp.13-gke.0@sha256:c824f205eb0d9f790bbb8ffbb8ee88b59b886bd6af160d17cd416d8e3143413f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/healthy
          port: 19090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: prometheus
      ports:
      - containerPort: 19090
        name: prom-metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/ready
          port: 19090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 3G
        requests:
          cpu: 4m
          memory: 32M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /prometheus/data
        name: storage
      - mountPath: /prometheus/config_out
        name: config-out
        readOnly: true
      - mountPath: /etc/secrets
        name: collection-secret
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q699h
        readOnly: true
    - args:
      - --config-file=/prometheus/config/config.yaml
      - --config-file-output=/prometheus/config_out/config.yaml
      - --reload-url=http://127.0.0.1:19090/-/reload
      - --ready-url=http://127.0.0.1:19090/-/ready
      - --listen-address=:19091
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.4-gke.0@sha256:d829f291c33fd8eb83073047903ffcc1afa4fce7dea146ad6ed1f409f788d298
      imagePullPolicy: IfNotPresent
      name: config-reloader
      ports:
      - containerPort: 19091
        name: cfg-rel-metrics
        protocol: TCP
      resources:
        limits:
          memory: 32M
        requests:
          cpu: 1m
          memory: 4M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /prometheus/config
        name: config
        readOnly: true
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q699h
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - touch /prometheus/config_out/config.yaml
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
      imagePullPolicy: IfNotPresent
      name: config-init
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q699h
        readOnly: true
    nodeName: gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: gmp-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: collector
    serviceAccountName: collector
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: storage
    - configMap:
        defaultMode: 420
        name: collector
      name: config
    - emptyDir: {}
      name: config-out
    - name: collection-secret
      secret:
        defaultMode: 420
        secretName: collection
    - name: kube-api-access-q699h
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:44Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:34:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:34:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 1m
        memory: 4M
      containerID: containerd://c0b9547af2cff9613b00851312732a5b21e7cb0783c59010e58a1ea1b27ec687
      image: sha256:f8a081f430fdd094de5513b63b22477c5ac35efb0508d3bed40232c4cb2b480c
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader@sha256:d829f291c33fd8eb83073047903ffcc1afa4fce7dea146ad6ed1f409f788d298
      lastState: {}
      name: config-reloader
      ready: true
      resources:
        limits:
          memory: 31250Ki
        requests:
          cpu: 1m
          memory: 4M
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:34:09Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /prometheus/config
        name: config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q699h
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 4m
        memory: 32M
      containerID: containerd://a75f742319e5e3780f26da3ad4fd7cc2fa05dbd1890f15fa53756d6da5bb8378
      image: sha256:d17d7c93e5dd67d59402e791e14e34a54e2c37c234513ee82404c47373b6319c
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/prometheus@sha256:c824f205eb0d9f790bbb8ffbb8ee88b59b886bd6af160d17cd416d8e3143413f
      lastState: {}
      name: prometheus
      ready: true
      resources:
        limits:
          memory: 3G
        requests:
          cpu: 4m
          memory: 32M
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:34:05Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /prometheus/data
        name: storage
      - mountPath: /prometheus/config_out
        name: config-out
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/secrets
        name: collection-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q699h
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.7
    hostIPs:
    - ip: 10.128.0.7
    initContainerStatuses:
    - containerID: containerd://c033b756e7bc706a0d238472373f387a66fac1e25719cff76bc7e37021dbcd65
      image: sha256:26f589b13a33794b4fd48445f1bf4d111b7b2200aca281ff858721fc6e1b1133
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
      lastState: {}
      name: config-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c033b756e7bc706a0d238472373f387a66fac1e25719cff76bc7e37021dbcd65
          exitCode: 0
          finishedAt: "2025-08-31T15:33:43Z"
          reason: Completed
          startedAt: "2025-08-31T15:33:43Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q699h
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.60.2.12
    podIPs:
    - ip: 10.60.2.12
    qosClass: Burstable
    startTime: "2025-08-31T15:33:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.4-gke.1
    creationTimestamp: "2025-08-31T15:32:15Z"
    generateName: gmp-operator-769978865b-
    generation: 1
    labels:
      app: managed-prometheus-operator
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
      app.kubernetes.io/version: 0.15.4
      pod-template-hash: 769978865b
    name: gmp-operator-769978865b-j4rhg
    namespace: gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: gmp-operator-769978865b
      uid: bc40f3cb-f2c4-4cc6-8221-be20f76f5435
    resourceVersion: "1756654424747231001"
    uid: c3cd9b9a-54fd-4d5b-ba43-18d17fb1f308
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
              - arm64
              - amd64
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    automountServiceAccountToken: true
    containers:
    - args:
      - --operator-namespace=gmp-system
      - --public-namespace=gmp-public
      - --webhook-addr=:10250
      - --tls-cert-base64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVIekNDQW9lZ0F3SUJBZ0lSQUpkSVJmd0VHZHJnUmZySE9McGRUTk13RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa05XWTRaamcxTnpZdE1XSXlNUzAwTUdNM0xUazRZalV0TURabE5ETm1aV0k0TURFegpNQjRYRFRJMU1EZ3pNVEV6TWprME5Wb1hEVE13TURnek1ERXpNekUwTlZvd05ERXlNREFHQTFVRUF4TXBaMjF3CkxXOXdaWEpoZEc5eUxtZHRjQzF6ZVhOMFpXMHVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXd3dnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREJKcDlGRDNnaXAremZvTG5mTXN5SENCd0ViR1V5ellMRQo1U3RYeVlXK3FGMnVIdGlhTjNaaDFHSWlHQlUxdkh6RnVZeFVnYjJIUlRjOW9yZ3B1Y0dTYnVuSjRzODJld0c0CjZnZVV4clBidTFNbk45SjliVks1TEJKTCt0WjYxQkZHY2t1TDhvaWFvSUwvRGtWZ0JDZ2Zsa2JnOUNFVWU4Mm8KcEgvNnNGcnAxMko1aWsrMXZQSXVaSVNPeGs1M3czR1JVaWxna3QyRDdiMTJ1TmduRjJzTzg3RjAxQ2FYcVJPWgpxVGE1ZUVmaFVkNTB6cjdweDhvMXRmelBvcHhIblNYSFF3eGY4NDFGdDFuOFlBSkhJNUVMV1poWGROKzh6NDBwCnpnb2RCcjgzaitySDllMHZEbDdHQTNSL0VHbG9QMThReFlheXRCQnZ3RndNcEpvMjJPWkZBZ01CQUFHamdiQXcKZ2Ewd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjRApBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGR00rdlRmWm9yZVhKWDFqWW5lRWhPUGRJTm5rCk1FMEdBMVVkRVFSR01FU0NER2R0Y0MxdmNHVnlZWFJ2Y29JWFoyMXdMVzl3WlhKaGRHOXlMbWR0Y0MxemVYTjAKWlcyQ0cyZHRjQzF2Y0dWeVlYUnZjaTVuYlhBdGMzbHpkR1Z0TG5OMll6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBWUVBbkp2SWpCczBpaGFKK0g1Yi9FUkhwU21USXBLR1lyVUNVRVpwN09ZSk9wNFVLQlhzMVo2NDZ4ZmliRnJzCmE0aVRJM2Y2OGRTQ3BMK3JmMmE0QlEzYzV5eUhYZ0Q2WjdRdTdkMklIMHVaa0kyK1B5Rm1WKzBGMk0zYXZxL1AKNTBQZC9ZMDlTOWdXZE45TVBRY2dDaWNoTlpoOUhCajV4MHhuNzVySjZVNG5VenlTSFJiUHhvNWYwNEZHblI0eApDWnBvd0NEMkRhUS9NU3JLclJPWEVPQVZwNW1WMkhJd1pONFNjQzg5TmVrTGZLTU45OSs5ZElyOXVWd0FURlRmCmZ4VFIrc0FML3NKT0pNVlRITGJYT3ZkOWx5QXh2bk5HcXkyb3pYRUdTNjZkZkN0M1J6SGViYVlDUFRFSis0ZmkKbHZOQmlqTG5qdUpDQWZLNzlhYjhxd3d2QUlTd1ZrUXZwaHFkZjFwOEllOHVldjdJT2hNeU5XaGluMnZXTStubwpkN1FrU1hlVTZjMlpNVC9WcnU1enZwbmZJeDBuQ0ZBNEd1KzF1RDFYRHo4NjkyQmxMaERsYlRuZjk5Z3lVQ0UrCk5GWVQzSGNDVEMyNmlBOVBLUFdqdkdYa1FqbEZyaC9NcDN4WGRER3Y5MW0rOXlNdHVWMU9sYkFoSU1KQm9TSnEKTzlGMgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      - --tls-key-base64=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd1NhZlJROTRJcWZzMzZDNTN6TE1od2djQkd4bE1zMkN4T1VyVjhtRnZxaGRyaDdZCm1qZDJZZFJpSWhnVk5ieDh4Ym1NVklHOWgwVTNQYUs0S2JuQmttN3B5ZUxQTm5zQnVPb0hsTWF6Mjd0VEp6ZlMKZlcxU3VTd1NTL3JXZXRRUlJuSkxpL0tJbXFDQy93NUZZQVFvSDVaRzRQUWhGSHZOcUtSLytyQmE2ZGRpZVlwUAp0Ynp5TG1TRWpzWk9kOE54a1ZJcFlKTGRnKzI5ZHJqWUp4ZHJEdk94ZE5RbWw2a1RtYWsydVhoSDRWSGVkTTYrCjZjZktOYlg4ejZLY1I1MGx4ME1NWC9PTlJiZFovR0FDUnlPUkMxbVlWM1Rmdk0rTktjNEtIUWEvTjQvcXgvWHQKTHc1ZXhnTjBmeEJwYUQ5ZkVNV0dzclFRYjhCY0RLU2FOdGptUlFJREFRQUJBb0lCQUFTdUh1WFpmaHU0M2ZCOQpRSU84QTJDeVBadU4xTlhxVE9UZ2VMQmozYTNFL3FBZGR6b2xaZVR3OUgvRy9aeVR1S0pCNExpYmZEQXU2U3ZCCktaMDVOd3VKVEhqcjJnR0Q4WUs5aVBsOTV4WEg4RGZmRG1ham80R0JJK0JiYjU4Q1RIamNoQ0FiL0Z0aTBFbkYKMnNCODJVd0twQ1VIUlZYdHVnb0FFbW5NcENkT1dmaDFBZEZiVG95aWx1VlhXck50SWNqc2pPVzZOb1pYWGlXNgpjZ2JBRUVzWkdTaTNaRExySEZ3NW4rUEU5SmEyYjBaQ3RvTnJIcDJkbHdHMXYwV2JuUlNHenNhZjZrZEhwN2dVCklmQVh2UnZlWmZvNFlhYkY0R2IyTXdGN1lEcFFZSE4yZTR1QlR4NWkzUWZyVWFCRyt2MFBRRSs4T1RHYjJCckgKMHpCQ3NRRUNnWUVBNVZhenVWMXN3Y2kzYWlSS2dJNlFISVZKbU1XRUF0c1F0QnpCdU0rVmpiU2FWb0VzRHBUaAo3TGFyV3d5cXBpcE1pSzRGYUw5QUhteE91NmRkNSthRnBpL1NZM2E1bmxqS3A3eFZFMThpTThvKzBuRWMvREJFCk9sbUdweDVPWHFLYnVZV2U4WkhaMzZ1MUhORmxCTFZ0UExNc2FuMzdwQTYwc1dZY1d1L3RGWFVDZ1lFQTE1cngKVGI0RUhRKzZ1R2w1M1BCU0ZzK3Y3YjFndFN0MXlMRHNNeU9WWFNwb0pTTkpKOEpuMVJsN2xTbkQ1c1FUTTN6MAphblVSVm96QmJtaWhaeHBXNTJNNTlnOTdqNTZXY3hsZ1h4SkxVNlVpTnFWNnV3K0ZweWJwa1htQUFEcVVUNWVoClRJc0RFT0tIMDY3bkhTL1NRS3FlREQrWXJUWlJyWE9aL0RORjQ1RUNnWUVBdWdYODNDT2F2d2ozTllKZ2FDeTcKV2xjSEhvTkFGQ3pyUEoyQ3lVeWdDNFJ1R0RMSXNMODFEcFFSSkZaKzZTK3dTc0dWSTZUVjlwZDF1YU1GZWNBegpzbHhoOUVudVFESFhsLzBjcVF6bXFrbW5jWDFNdkliT0lPSlRaYVVnZm9TNWVkK1gwR3kwNUVmY0xaYnZzTVVVCjZVS1FpWVROSkFMRnNJdVovbTFVeXEwQ2dZQXpFankra1pnZjJpMzhxTjk0K21RM2l4SzlXZktpZDV6NjRRM1MKUDBlT1BoRlZXcnBsZEtOcjB4RjNEK0didEM1b0w5MGxxbjFrNXdxYXdLWWE2aDVUeVNsZG8rVTg2Ky92YTc5cwpSY1VhRnkrM2loTThaRHpnajFNY1pvOXZmbkRMT2J1M2llWThCYXp1ODZ0RE9xU3ZOTHNqWTUwaXlvOG1hdys2CnNkcUlRUUtCZ1FDdkxnSnJoaWd4QnZLc0Q0clpNWUJiOTlmOWM5NUNiTnljY3J0c1hDaVpDNEdmSC9keU9XenYKV0NsaEtwL0hFQ2FOZjBtVU0vemxzMFpKa0JmeWgwUkgrTWhYTHl3VTU5bHJUQlFhc2NIK085ellQK25RRkR5UgpmaHV0S2pkZE1aR3FQVFhEOThTdEpPYVpTYThscU4rWThRV2NsVUNMVEpwbmNaM0F2L29nVGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
      - --project-id=gke-hackathon-0831-6943
      - --location=us-central1-a
      - --cluster=gke-turns-10-hackathon
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator:v0.15.4-gke.0@sha256:6208d08a2ee884e7d72669b32f2eb9c24386bfb050e3035b5ef16663fd5e4d1d
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 18081
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: operator
      ports:
      - containerPort: 10250
        name: web
        protocol: TCP
      - containerPort: 18080
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: 18081
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 2G
        requests:
          cpu: 1m
          memory: 16M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/tls/private
        name: certs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z4ttb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: gmp-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: operator
    serviceAccountName: operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: amd64
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: certs
    - name: kube-api-access-z4ttb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:44Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 1m
        memory: 16M
      containerID: containerd://1fcaeea0215ea6508169e47a167336c528726bf82c2ee1a8076b04990f581b8e
      image: sha256:51e8ff58d0d2fcf44b8190c8bd4a48c97d522380623ae93b241fa250327d939f
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator@sha256:6208d08a2ee884e7d72669b32f2eb9c24386bfb050e3035b5ef16663fd5e4d1d
      lastState: {}
      name: operator
      ready: true
      resources:
        limits:
          memory: 1953125Ki
        requests:
          cpu: 1m
          memory: 16M
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:33:43Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /etc/tls/private
        name: certs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z4ttb
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.7
    hostIPs:
    - ip: 10.128.0.7
    phase: Running
    podIP: 10.60.2.8
    podIPs:
    - ip: 10.60.2.8
    qosClass: Burstable
    startTime: "2025-08-31T15:33:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: event-exporter
      components.gke.io/component-version: 1.33.6-gke.0
    creationTimestamp: "2025-08-31T15:32:15Z"
    generateName: event-exporter-gke-746f74dd4c-
    generation: 1
    labels:
      k8s-app: event-exporter
      pod-template-hash: 746f74dd4c
      version: v0.4.0
    name: event-exporter-gke-746f74dd4c-jxhm9
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: event-exporter-gke-746f74dd4c
      uid: 4c296f18-5aac-473e-920f-43cd157e9919
    resourceVersion: "1756654443746815006"
    uid: b7f226e6-0450-4ea2-bdd0-1be9986e438d
  spec:
    containers:
    - command:
      - /event-exporter
      - -sink-opts=-stackdriver-resource-model=new -endpoint=https://logging.googleapis.com
      - -prometheus-endpoint=:8080
      - -enable-pod-owner-label=true
      - -system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/event-exporter:v0.5.2-gke.1@sha256:f0f730bfa9f3a396374100063d5770be28c1283d0a5a100886bd36ac7b6ef474
      imagePullPolicy: IfNotPresent
      name: event-exporter
      resources:
        requests:
          cpu: 3m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2mlh5
        readOnly: true
    - command:
      - /monitor
      - --api-override=https://monitoring.googleapis.com/
      - --source=event_exporter:http://localhost:8080?metricsPrefix=container.googleapis.com/internal/addons&whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
      - --source=event_exporter:http://localhost:8080?metricsPrefix=kubernetes.io/internal/addons&customResourceType=k8s_container&customLabels[project_id]&customLabels[location]&customLabels[cluster_name]&customLabels[namespace_name]=kube-system&customLabels[pod_name]=event-exporter-$NODE_NAME&customLabels[container_name]=event-exporter&whitelisted=stackdriver_sink_records_latency_seconds,podlabel_cache_ops_count,podlabel_get_count,podlabel_nolabel_pod_cache_ops_count
      - --pod-id=$(POD_NAME)
      - --namespace-id=$(POD_NAMESPACE)
      - --node-name=$(NODE_NAME)
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-to-sd:v0.12.1-gke.24@sha256:4e76d5f407e7a072f1f26dd1d8b019950d1c7632ed96fdd19315f664413c9b82
      imagePullPolicy: IfNotPresent
      name: prometheus-to-sd-exporter
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2mlh5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: event-exporter-sa
    serviceAccountName: event-exporter-sa
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: Directory
      name: ssl-certs
    - name: kube-api-access-2mlh5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:34:03Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:34:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:34:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 3m
        memory: 100Mi
      containerID: containerd://468ada98ba6878f2f39acbe730ac1b01004f85ae63e5f396db2924d9ed96c420
      image: sha256:7656d349be40723324cf1f8ac03347421c62da7c636e236e642a63b6e6cc1d53
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/event-exporter@sha256:f0f730bfa9f3a396374100063d5770be28c1283d0a5a100886bd36ac7b6ef474
      lastState: {}
      name: event-exporter
      ready: true
      resources:
        requests:
          cpu: 3m
          memory: 100Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:33:43Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2mlh5
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://1710716d694f4a9ab98cf4ac6615de5f68ff16693656b0998f992b8a62ef9396
      image: sha256:113f994e40b0e2e5c648610729487c14cf3814c08108d93c1703f38a942fef30
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-to-sd@sha256:4e76d5f407e7a072f1f26dd1d8b019950d1c7632ed96fdd19315f664413c9b82
      lastState: {}
      name: prometheus-to-sd-exporter
      ready: true
      resources: {}
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:34:02Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2mlh5
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.7
    hostIPs:
    - ip: 10.128.0.7
    phase: Running
    podIP: 10.60.2.10
    podIPs:
    - ip: 10.60.2.10
    qosClass: Burstable
    startTime: "2025-08-31T15:33:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      EnableNodeJournal: "false"
      EnablePodSecurityPolicy: "false"
      SystemOnlyLogging: "true"
      components.gke.io/component-name: fluentbit
      components.gke.io/component-version: 1.33.5-gke.3
      monitoring.gke.io/path: /api/v1/metrics/prometheus
    creationTimestamp: "2025-08-31T15:33:20Z"
    generateName: fluentbit-gke-
    generation: 1
    labels:
      component: fluentbit-gke
      controller-revision-hash: 55486f4cfc
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
      pod-template-generation: "1"
    name: fluentbit-gke-bjlqw
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: fluentbit-gke
      uid: 1d38d017-6de2-4750-ac7f-978f229519da
    resourceVersion: "1756654450190975003"
    uid: 1398087c-4097-4d7c-8cbc-20da1131eb18
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    containers:
    - image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.1200-gke.14@sha256:fe028dfcf00bdaded6770720de8df8f3d24e841f41a968138ae00d699003aa0f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 2020
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 5
      name: fluentbit
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/docker/containers
        name: varlibdockercontainers
        readOnly: true
      - mountPath: /var/lib/google-fluentbit/pos-files
        name: varlibgooglefluentbitpos
      - mountPath: /fluent-bit/etc/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jrfqk
        readOnly: true
    - command:
      - /fluent-bit-gke-exporter
      - --kubernetes-separator=_
      - --stackdriver-resource-model=k8s
      - --enable-pod-label-discovery
      - --pod-label-dot-replacement=_
      - --split-stdout-stderr
      - --stackdriver-timeout=60s
      - --max-inactivity-duration=600s
      - --stackdriver-address=logging.googleapis.com:443
      - --pool-size=2
      - --max-log-connections=2
      - --logtostderr
      - --node-name=$(NODE_NAME)
      - --pod-cache-size=1024
      - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.13-gke.4@sha256:6632976b59b83d20c58bbe391483c45ec2eb8244fb68c71eee0a269fa95031d0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 2021
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: fluentbit-gke
      ports:
      - containerPort: 2021
        hostPort: 2021
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jrfqk
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/fluentbit-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "128459335788"
      - name: LOCATION
        value: us-central1-a
      - name: CLUSTER_NAME
        value: gke-turns-10-hackathon
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: fluentbit-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250724_2300_RC0@sha256:42875f6f4a2a79ad1f409fb5624eb66709738568e2d1da02f141493dd7ad216f
      imagePullPolicy: IfNotPresent
      name: fluentbit-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: fluentbit-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jrfqk
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |-
        set -e;
        if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
          exit 0;
        fi;
        if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
          rm -rf /var/lib/google-fluentbit/pos-files.staged;
          rm -rf /var/lib/google-fluentbit/pos-files;
          cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
          mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
          rm -rf /var/run/google-fluentbit/pos-files;
        fi
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
      imagePullPolicy: IfNotPresent
      name: fluentbit-gke-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/google-fluentbit
        name: varlibgooglefluentbit
      - mountPath: /var/run/google-fluentbit
        name: varrungooglefluentbit
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jrfqk
        readOnly: true
    nodeName: gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: fluentbit-gke
    serviceAccountName: fluentbit-gke
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/run/google-fluentbit
        type: DirectoryOrCreate
      name: varrungooglefluentbit
    - hostPath:
        path: /var/log
        type: Directory
      name: varlog
    - hostPath:
        path: /var/lib/docker/containers
        type: Directory
      name: varlibdockercontainers
    - hostPath:
        path: /var/lib/google-fluentbit
        type: DirectoryOrCreate
      name: varlibgooglefluentbit
    - hostPath:
        path: /var/lib/google-fluentbit/pos-files
        type: DirectoryOrCreate
      name: varlibgooglefluentbitpos
    - configMap:
        defaultMode: 420
        name: fluentbit-gke-config-v1.4.0
      name: config-volume
    - configMap:
        defaultMode: 420
        items:
        - key: fluentbit-metrics-collector-config-data
          path: fluentbit-metrics-collector-config-data.textproto
        name: fluentbit-metrics-collector-config-map
      name: fluentbit-metrics-collector-config-map-vol
    - name: kube-api-access-jrfqk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:31Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:32Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:34:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:34:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 50m
        memory: 100Mi
      containerID: containerd://2e29ec0a8b1858516ff4e8408df5d4a82cec5477d39ceb6d9eb08664e1741135
      image: sha256:fbb57da790096c4b53b9662c60eb8842adcd329247dbb7b0bced3569c0f927f3
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit@sha256:fe028dfcf00bdaded6770720de8df8f3d24e841f41a968138ae00d699003aa0f
      lastState: {}
      name: fluentbit
      ready: true
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:34:00Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/docker/containers
        name: varlibdockercontainers
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/google-fluentbit/pos-files
        name: varlibgooglefluentbitpos
      - mountPath: /fluent-bit/etc/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jrfqk
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 50m
        memory: 100Mi
      containerID: containerd://1efa929eaa14f32f30141995b02e3909f1d655fba5e8628d0edc4ddb5818c24b
      image: sha256:4e2ee5c133af291b8551e51c71cab8947086adf99923cafcfc20e0cce1065e9e
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter@sha256:6632976b59b83d20c58bbe391483c45ec2eb8244fb68c71eee0a269fa95031d0
      lastState: {}
      name: fluentbit-gke
      ready: true
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:34:06Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jrfqk
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 5m
        memory: 30Mi
      containerID: containerd://b46f2c28c37f166d3b2bbb2e5a4f336bb3759b4ab0a33b91bc4ebfc2c769d726
      image: sha256:8994440bb2d1c2e7b00555512c6c6bd3a8a4e428db328a9fd87a76b86c22938d
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:42875f6f4a2a79ad1f409fb5624eb66709738568e2d1da02f141493dd7ad216f
      lastState: {}
      name: fluentbit-metrics-collector
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:34:09Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          uid: 1001
      volumeMounts:
      - mountPath: /conf
        name: fluentbit-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jrfqk
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.7
    hostIPs:
    - ip: 10.128.0.7
    initContainerStatuses:
    - containerID: containerd://1544829010cafc1e259342d8ed820d7bb1f234bfcb494e06ec09fc4cdfdc87ec
      image: sha256:26f589b13a33794b4fd48445f1bf4d111b7b2200aca281ff858721fc6e1b1133
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
      lastState: {}
      name: fluentbit-gke-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://1544829010cafc1e259342d8ed820d7bb1f234bfcb494e06ec09fc4cdfdc87ec
          exitCode: 0
          finishedAt: "2025-08-31T15:33:30Z"
          reason: Completed
          startedAt: "2025-08-31T15:33:30Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/lib/google-fluentbit
        name: varlibgooglefluentbit
      - mountPath: /var/run/google-fluentbit
        name: varrungooglefluentbit
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jrfqk
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.128.0.7
    podIPs:
    - ip: 10.128.0.7
    qosClass: Burstable
    startTime: "2025-08-31T15:33:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: gke-metadata-server
      components.gke.io/component-version: 1.33.9
      monitoring.gke.io/path: /metricz
    creationTimestamp: "2025-08-31T15:33:19Z"
    generateName: gke-metadata-server-
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      controller-revision-hash: ff9c7bf8d
      k8s-app: gke-metadata-server
      pod-template-generation: "1"
    name: gke-metadata-server-9h86k
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: gke-metadata-server
      uid: 51bd6116-bfee-45de-9b30-95e2358edd28
    resourceVersion: "1756654407872959005"
    uid: 0785cf37-e027-41b2-a6be-c316c2d679e5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    containers:
    - command:
      - /gke-metadata-server
      - --logtostderr
      - --token-exchange-endpoint=https://securetoken.googleapis.com/v1/identitybindingtoken
      - --workload-pool=gke-hackathon-0831-6943.svc.id.goog
      - --alts-service-suffixes-using-node-identity=storage.googleapis.com,bigtable.googleapis.com,bigtable2.googleapis.com,bigtablerls.googleapis.com,spanner.googleapis.com,spanner2.googleapis.com,spanner-rls.googleapis.com,grpclb.directpath.google.internal,grpclb-dualstack.directpath.google.internal,grpc-directpath-dualstack.googleapis.com,staging-wrenchworks.sandbox.googleapis.com,preprod-spanner.sandbox.googleapis.com,wrenchworks-loadtest.googleapis.com,wrenchworks-nonprod.googleapis.com
      - --identity-provider=https://container.googleapis.com/v1/projects/gke-hackathon-0831-6943/locations/us-central1-a/clusters/gke-turns-10-hackathon
      - --passthrough-ksa-list=anthos-identity-service:gke-oidc-envoy-sa,anthos-identity-service:gke-oidc-service-sa,gke-managed-dpv2-observability:hubble-relay,kube-system:antrea-controller,kube-system:container-watcher-pod-reader,kube-system:coredns,kube-system:egress-nat-controller,kube-system:event-exporter-sa,kube-system:filestore-lockrelease-controller-sa,kube-system:fluentd-gcp-scaler,kube-system:gke-metrics-agent,kube-system:gke-spiffe-node-agent,kube-system:heapster,kube-system:konnectivity-agent,kube-system:kube-dns,kube-system:maintenance-handler,kube-system:metadata-agent,kube-system:network-metering-agent,kube-system:node-local-dns,kube-system:pkgextract-service,kube-system:pkgextract-cleanup-service,kube-system:securityprofile-controller,istio-system:istio-ingressgateway-service-account,istio-system:cluster-local-gateway-service-account,csm:csm-sync-agent,knative-serving:controller,kube-system:pdcsi-node-sa,kube-system:gcsfusecsi-node-sa,gmp-system:collector,gke-gmp-system:collector,gke-managed-cim:kube-state-metrics,gke-mcs:gke-mcs-importer
      - --attributes=cluster-name=gke-turns-10-hackathon,cluster-uid=9d68c8a25faa4e8fbb3d9f5cc7c0e02609a187451c7e43f7b654cc72d0cdce13,cluster-location=us-central1-a
      - --cluster-uid=9d68c8a25faa4e8fbb3d9f5cc7c0e02609a187451c7e43f7b654cc72d0cdce13
      - --pod-namespace=kube-system
      - --sts-endpoint=https://sts.googleapis.com
      - --token-exchange-mode=sts
      - --cloud-monitoring-endpoint=monitoring.googleapis.com:443
      - --iam-cred-service-endpoint=https://iamcredentials.googleapis.com
      - --cluster-location=us-central1-a
      - --cluster-name=gke-turns-10-hackathon
      - --component-version=1.33.9
      - --ksa-cache-mode=watchchecker
      - --kcp-allow-watch-checker=true
      - --enable-mds-csi-driver=true
      - --enable-alts-bound-token=true
      - --sts-regional-endpoint=https://sts.us-central1.rep.googleapis.com
      - --enable-sts-regional-dark-launch=true
      - --addr=169.254.169.252:988
      - --csi-socket=/csi/csi.sock
      - --volumes-db=/var/run/gkemds.gke.io/csi/volumes.boltdb
      - --write-trust-map=true
      env:
      - name: GOMEMLIMIT
        value: "94371840"
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONTAINER_NAME
        value: gke-metadata-server
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metadata-server:gke_metadata_server_20250617.00_p0@sha256:b136c75032e99c2923ff088abeed425a0098a00f0a73f66afce7f3267d00652f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 989
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: gke-metadata-server
      ports:
      - containerPort: 987
        hostPort: 987
        name: alts
        protocol: TCP
      - containerPort: 988
        hostPort: 988
        name: metadata-server
        protocol: TCP
      - containerPort: 989
        hostPort: 989
        name: debug-port
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 989
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/kubeconfig
        name: kubelet-credentials
        readOnly: true
      - mountPath: /var/lib/kubelet/pki/
        name: kubelet-certs
        readOnly: true
      - mountPath: /var/run/
        name: container-runtime-interface
      - mountPath: /etc/srv/kubernetes/pki
        name: kubelet-pki
        readOnly: true
      - mountPath: /etc/ssl/certs/
        name: ca-certificates
        readOnly: true
      - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
        name: gke-exec-auth-plugin
        readOnly: true
      - mountPath: /sys/firmware/efi/efivars/
        name: efivars
        readOnly: true
      - mountPath: /dev/tpm0
        name: vtpm
        readOnly: true
      - mountPath: /csi
        name: csi-socket-dir
      - mountPath: /var/run/gkemds.gke.io/csi
        name: state-dir
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: pods-dir
      - mountPath: /registration
        name: kubelet-registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hj9sz
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    nodeSelector:
      iam.gke.io/gke-metadata-server-enabled: "true"
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: gke-metadata-server
    serviceAccountName: gke-metadata-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/pki/
        type: Directory
      name: kubelet-certs
    - hostPath:
        path: /var/lib/kubelet/kubeconfig
        type: File
      name: kubelet-credentials
    - hostPath:
        path: /var/run/
        type: Directory
      name: container-runtime-interface
    - hostPath:
        path: /etc/srv/kubernetes/pki/
        type: Directory
      name: kubelet-pki
    - hostPath:
        path: /etc/ssl/certs/
        type: Directory
      name: ca-certificates
    - hostPath:
        path: /home/kubernetes/bin/gke-exec-auth-plugin
        type: File
      name: gke-exec-auth-plugin
    - hostPath:
        path: /sys/firmware/efi/efivars/
        type: Directory
      name: efivars
    - hostPath:
        path: /dev/tpm0
        type: CharDevice
      name: vtpm
    - hostPath:
        path: /var/lib/kubelet/plugins/gkemds.gke.io
        type: DirectoryOrCreate
      name: csi-socket-dir
    - hostPath:
        path: /var/lib/kubelet/pods
        type: Directory
      name: pods-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry
        type: Directory
      name: kubelet-registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins
        type: Directory
      name: kubelet-plugins-dir
    - hostPath:
        path: /var/run/gkemds.gke.io/csi
        type: DirectoryOrCreate
      name: state-dir
    - name: kube-api-access-hj9sz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:26Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 100Mi
      containerID: containerd://15d685c2011eec6ef4fdbd6a36cdde60a1a53a7ca10421046b389f6d08e7260f
      image: sha256:e0fdc59bc750a7cfc0d8a2b2b30521f8392c81c64fc56bcc6881a1efa25c5c3c
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metadata-server@sha256:b136c75032e99c2923ff088abeed425a0098a00f0a73f66afce7f3267d00652f
      lastState: {}
      name: gke-metadata-server
      ready: true
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 100m
          memory: 100Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:33:26Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/lib/kubelet/kubeconfig
        name: kubelet-credentials
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/kubelet/pki/
        name: kubelet-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/
        name: container-runtime-interface
      - mountPath: /etc/srv/kubernetes/pki
        name: kubelet-pki
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/ssl/certs/
        name: ca-certificates
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
        name: gke-exec-auth-plugin
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /sys/firmware/efi/efivars/
        name: efivars
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /dev/tpm0
        name: vtpm
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /csi
        name: csi-socket-dir
      - mountPath: /var/run/gkemds.gke.io/csi
        name: state-dir
      - mountPath: /var/lib/kubelet/pods
        name: pods-dir
      - mountPath: /registration
        name: kubelet-registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hj9sz
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.7
    hostIPs:
    - ip: 10.128.0.7
    phase: Running
    podIP: 10.128.0.7
    podIPs:
    - ip: 10.128.0.7
    qosClass: Burstable
    startTime: "2025-08-31T15:33:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: gke-metrics-agent
      components.gke.io/component-version: 2.133.19-gke.0
      configHash: Q6MOZFCC5KYM/0pHYO8VOi4Bk8RTp5RRhR8JtsOGQoc=
    creationTimestamp: "2025-08-31T15:33:20Z"
    generateName: gke-metrics-agent-
    generation: 1
    labels:
      component: gke-metrics-agent
      controller-revision-hash: 5fbdf5db
      k8s-app: gke-metrics-agent
      pod-template-generation: "1"
    name: gke-metrics-agent-pkvdn
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: gke-metrics-agent
      uid: ec74fa96-3098-4083-bdb2-0a4c1d19e2ee
    resourceVersion: "1756654436559759022"
    uid: ce2e38e4-8388-40cc-a12d-91b79aa7fae4
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    containers:
    - command:
      - /otelsvc
      - --config=/conf/core-metrics-exporter-config.yaml
      - --metrics-prefix=
      - --log-profile=prod
      - --log-format=json
      - --metrics-addr=localhost:8202
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: HOST_LOOPBACK
        value: 127.0.0.1
      - name: GKE_COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: GKE_COMPONENT_NAME
        value: core-metrics-exporter
      - name: GOMAXPROCS
        value: "1"
      - name: GODEBUG
        value: memprofilerate=0
      - name: ARG1
        value: ${1}
      - name: ARG2
        value: ${2}
      - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /
          port: 8203
          scheme: HTTP
        initialDelaySeconds: 50
        periodSeconds: 50
        successThreshold: 1
        timeoutSeconds: 3
      name: core-metrics-exporter
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 6m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: core-metrics-exporter-config-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zc4s2
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kubelet-resource-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "128459335788"
      - name: LOCATION
        value: us-central1-a
      - name: CLUSTER_NAME
        value: gke-turns-10-hackathon
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: prometheus-metrics-collector
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: HOST_LOOPBACK
        value: 127.0.0.1
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      - name: TOKEN_SOURCE_MODE
        value: MODE_TOKEN_BROKER_WITH_FALLBACK
      - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      - name: GKE_HOSTNAME
        value: container.googleapis.com
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
      imagePullPolicy: IfNotPresent
      name: prometheus-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 80Mi
        requests:
          cpu: 10m
          memory: 45Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: prometheus-metrics-collector-config-map-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zc4s2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /node_token_broker_init
      - --audience=https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
      - --token_url=https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
      - --token_file=/var/run/token_broker/ksa/token
      - --output_path=/var/run/token_broker/adc/google-application-credentials.json
      - --project_id=gke-hackathon-0831-6943
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
      imagePullPolicy: IfNotPresent
      name: token-broker-adc-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zc4s2
        readOnly: true
    nodeName: gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: gke-metrics-agent
    serviceAccountName: gke-metrics-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: core-metrics-exporter-config
          path: core-metrics-exporter-config.yaml
        name: core-metrics-exporter-conf
      name: core-metrics-exporter-config-vol
    - configMap:
        defaultMode: 420
        items:
        - key: kubelet-metrics-collector-config-data
          path: kubelet-metrics-collector-config-data.textproto
        - key: containerd-metrics-collector-config-data
          path: containerd-metrics-collector-config-data.textproto
        - key: kubelet-prober-metrics-collector-config-data
          path: kubelet-prober-metrics-collector-config-data.textproto
        - key: kube-proxy-metrics-collector-config-data
          path: kube-proxy-metrics-collector-config-data.textproto
        - key: node-problem-detector-metrics-collector-config-data
          path: node-problem-detector-metrics-collector-config-data.textproto
        - key: kubelet-resource-metrics-collector-config-data
          path: kubelet-resource-metrics-collector-config-data.textproto
        name: prometheus-metrics-collector-config-map
      name: prometheus-metrics-collector-config-map-vol
    - name: token-broker-ksa
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: token-broker-adc
    - name: kube-api-access-zc4s2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 6m
        memory: 50Mi
      containerID: containerd://5d1792250ea7a8edb3175e3e1d07f72843ee7769fcde53df7430ac44103d7879
      image: sha256:af5f2ac9b9ed98e410eb73523f33c80e36e9104a86c3c33aea2d09f582d97637
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
      lastState: {}
      name: core-metrics-exporter
      ready: true
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 6m
          memory: 50Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:33:34Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /conf
        name: core-metrics-exporter-config-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zc4s2
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 45Mi
      containerID: containerd://8855feff41f7835d73c29d9c0701a152937b4cb685d6d1e20d72ec29c370da32
      image: sha256:a33254ae736a81fcd0296ac7c550c65738c1f6a3fe0a0d09cd56e3299c692b36
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
      lastState: {}
      name: prometheus-metrics-collector
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 80Mi
        requests:
          cpu: 10m
          memory: 45Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:33:55Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /conf
        name: prometheus-metrics-collector-config-map-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zc4s2
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.7
    hostIPs:
    - ip: 10.128.0.7
    initContainerStatuses:
    - containerID: containerd://1b9fcb75e47146c343013b1cfaf6a681d0e77947731c1d6f32acb672d0b51ce7
      image: sha256:b0bb950012f9e98eb20d0324b07fd0104999d7ed24f86a4ec67b96021502f42e
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
      lastState: {}
      name: token-broker-adc-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://1b9fcb75e47146c343013b1cfaf6a681d0e77947731c1d6f32acb672d0b51ce7
          exitCode: 0
          finishedAt: "2025-08-31T15:33:24Z"
          reason: Completed
          startedAt: "2025-08-31T15:33:24Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zc4s2
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.128.0.7
    podIPs:
    - ip: 10.128.0.7
    qosClass: Burstable
    startTime: "2025-08-31T15:33:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      components.gke.io/component-name: konnectivitynetworkproxy-combined
      components.gke.io/component-version: 1.15.5
    creationTimestamp: "2025-08-31T15:32:14Z"
    generateName: konnectivity-agent-67d7687977-
    generation: 1
    labels:
      k8s-app: konnectivity-agent
      pod-template-hash: 67d7687977
    name: konnectivity-agent-67d7687977-9pfvh
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-67d7687977
      uid: fdd62947-a974-4fa4-9b5d-3bc7f0de4bf4
    resourceVersion: "1756654439632575016"
    uid: e714e0be-2768-43fd-8663-4bdeea94d8c4
  spec:
    containers:
    - args:
      - --logtostderr=true
      - --ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      - --proxy-server-host=10.128.0.2
      - --proxy-server-port=8132
      - --health-server-port=8093
      - --admin-server-port=8094
      - --sync-interval=5s
      - --sync-interval-cap=30s
      - --sync-forever=true
      - --probe-interval=5s
      - --keepalive-time=60s
      - --service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token
      - --enable-profiling
      - --count-server-leases
      - --server-count-source=max
      - --v=3
      command:
      - /proxy-agent
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent:v0.31.3-gke.1@sha256:aa89e06b001dd7ef9e9082de3da7ef4b7995c6c857e905d3810eb9901664158f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8093
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: konnectivity-agent
      resources:
        limits:
          memory: 125Mi
        requests:
          cpu: 10m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/tokens
        name: konnectivity-agent-token
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q4wk6
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/konnectivity-agent-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "128459335788"
      - name: LOCATION
        value: us-central1-a
      - name: CLUSTER_NAME
        value: gke-turns-10-hackathon
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: konnectivity-agent-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
      imagePullPolicy: IfNotPresent
      name: konnectivity-agent-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 30Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: konnectivity-agent-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q4wk6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    nodeSelector:
      beta.kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: konnectivity-agent
    serviceAccountName: konnectivity-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: sandbox.gke.io/runtime
      operator: Equal
      value: gvisor
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: konnectivity-agent
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          k8s-app: konnectivity-agent
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - name: konnectivity-agent-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: system:konnectivity-server
            expirationSeconds: 3600
            path: konnectivity-agent-token
    - configMap:
        defaultMode: 420
        items:
        - key: konnectivity-agent-metrics-collector-config-data
          path: konnectivity-agent-metrics-collector-config-data.textproto
        name: konnectivity-agent-metrics-collector-config-map
      name: konnectivity-agent-metrics-collector-config-map-vol
    - name: kube-api-access-q4wk6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:59Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 30Mi
      containerID: containerd://8d9fa4056cd95e4dac38a46f5f329b482e1e3353e0e19a402c02c2805428513b
      image: sha256:772a355da43e12d19bc39d1ef94c6893576a0ba4a47d3b1df5b4ba4dd7bc5dbe
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent@sha256:aa89e06b001dd7ef9e9082de3da7ef4b7995c6c857e905d3810eb9901664158f
      lastState: {}
      name: konnectivity-agent
      ready: true
      resources:
        limits:
          memory: 125Mi
        requests:
          cpu: 10m
          memory: 30Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:33:40Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/secrets/tokens
        name: konnectivity-agent-token
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q4wk6
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 5m
        memory: 30Mi
      containerID: containerd://3da763836bc268b2a6a2dc246051118a24c32483f5fa7d57ba9b8725a2456eaa
      image: sha256:a33254ae736a81fcd0296ac7c550c65738c1f6a3fe0a0d09cd56e3299c692b36
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
      lastState: {}
      name: konnectivity-agent-metrics-collector
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 30Mi
        requests:
          cpu: 5m
          memory: 30Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:33:59Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /conf
        name: konnectivity-agent-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q4wk6
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.7
    hostIPs:
    - ip: 10.128.0.7
    phase: Running
    podIP: 10.60.2.4
    podIPs:
    - ip: 10.60.2.4
    qosClass: Burstable
    startTime: "2025-08-31T15:33:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      components.gke.io/component-name: konnectivitynetworkproxy-combined
      components.gke.io/component-version: 1.15.5
    creationTimestamp: "2025-08-31T15:32:16Z"
    generateName: konnectivity-agent-autoscaler-77dfdd8f5b-
    generation: 1
    labels:
      k8s-app: konnectivity-agent-autoscaler
      pod-template-hash: 77dfdd8f5b
    name: konnectivity-agent-autoscaler-77dfdd8f5b-q5h7w
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-autoscaler-77dfdd8f5b
      uid: 7f226584-f486-49a2-a5bb-8e9515e32d7b
    resourceVersion: "1756654422327311024"
    uid: c23586ac-b98d-4063-9382-4b11c8baf57a
  spec:
    containers:
    - command:
      - /cluster-proportional-autoscaler
      - --namespace=kube-system
      - --configmap=konnectivity-agent-autoscaler-config
      - --target=deployment/konnectivity-agent
      - --logtostderr=true
      - --v=2
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.9.1-gke.12@sha256:7a77e5a8e643a7211f9f93727e2a58cee0b4c90f9571c390add18fbc87eb530e
      imagePullPolicy: IfNotPresent
      name: autoscaler
      resources:
        requests:
          cpu: 10m
          memory: 10M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mc9lp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    nodeSelector:
      beta.kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: konnectivity-agent-cpha
    serviceAccountName: konnectivity-agent-cpha
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-mc9lp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:42Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 10M
      containerID: containerd://be4edcafcde5f9b843f75b32ea16c1a6fa3189178a76189b65465e00ef5bef84
      image: sha256:e9d948e68c78656ad768ce75a6f7cc92d9a1218b52cc9e50481ef50cfd740f17
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler@sha256:7a77e5a8e643a7211f9f93727e2a58cee0b4c90f9571c390add18fbc87eb530e
      lastState: {}
      name: autoscaler
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 10M
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:33:41Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mc9lp
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.7
    hostIPs:
    - ip: 10.128.0.7
    phase: Running
    podIP: 10.60.2.6
    podIPs:
    - ip: 10.60.2.6
    qosClass: Burstable
    startTime: "2025-08-31T15:33:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: kubedns
      components.gke.io/component-version: 33.2.3
      prometheus.io/port: "10054"
      prometheus.io/scrape: "true"
      scheduler.alpha.kubernetes.io/critical-pod: ""
    creationTimestamp: "2025-08-31T15:32:15Z"
    generateName: kube-dns-8574985644-
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: "8574985644"
    name: kube-dns-8574985644-sxz6g
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kube-dns-8574985644
      uid: 02f29ee6-8642-4dcf-be95-b058bdfb518d
    resourceVersion: "1756654448027247007"
    uid: f7b3feae-1d67-4129-90b3-961167149e2c
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - --domain=cluster.local.
      - --dns-port=10053
      - --config-dir=/kube-dns-config
      - --v=2
      env:
      - name: PROMETHEUS_PORT
        value: "10055"
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns:1.26.4-gke.1@sha256:eaac37b53169bc558d2d2bf21cf0e07554efd5f05816291839e1701746679465
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthcheck/kubedns
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kubedns
      ports:
      - containerPort: 10053
        name: dns-local
        protocol: UDP
      - containerPort: 10053
        name: dns-tcp-local
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readiness
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          memory: 210Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /kube-dns-config
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gkwnt
        readOnly: true
    - args:
      - -v=2
      - -logtostderr
      - -configDir=/etc/k8s/dns/dnsmasq-nanny
      - -restartDnsmasq=true
      - --
      - -k
      - --cache-size=1000
      - --no-negcache
      - --dns-forward-max=1500
      - --log-facility=-
      - --server=/cluster.local/127.0.0.1#10053
      - --server=/in-addr.arpa/127.0.0.1#10053
      - --server=/ip6.arpa/127.0.0.1#10053
      - --max-ttl=30
      - --max-cache-ttl=30
      - --max-tcp-connections=200
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny:1.26.4-gke.1@sha256:96384c974ede71f9b6e04428ef4e7e404c27399e665b6efaf99fe4f649e42dfb
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthcheck/dnsmasq
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: dnsmasq
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      resources:
        requests:
          cpu: 150m
          memory: 20Mi
      securityContext:
        capabilities:
          add:
          - NET_BIND_SERVICE
          - SETGID
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/k8s/dns/dnsmasq-nanny
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gkwnt
        readOnly: true
    - args:
      - --v=2
      - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV
      - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar:1.26.4-gke.1@sha256:94e9c72300d31fc1745a34e1e8a2dbef6b0cc32512552034de177b320d0390a4
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /metrics
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: sidecar
      ports:
      - containerPort: 10054
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gkwnt
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/kubedns-metrics-collector-config-data.textproto,/conf/sidecar-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "128459335788"
      - name: LOCATION
        value: us-central1-a
      - name: CLUSTER_NAME
        value: gke-turns-10-hackathon
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: kubedns-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250708_2300_RC0@sha256:ec164c7e60389f0cdb257acc313034f20335ab67be10b0d3b55a30094e678389
      imagePullPolicy: IfNotPresent
      name: kubedns-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 45Mi
        requests:
          cpu: 10m
          memory: 45Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: kubedns-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gkwnt
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      seccompProfile:
        type: RuntimeDefault
      supplementalGroups:
      - 65534
    serviceAccount: kube-dns
    serviceAccountName: kube-dns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-dns
        optional: true
      name: kube-dns-config
    - configMap:
        defaultMode: 420
        items:
        - key: kubedns-metrics-collector-config-data
          path: kubedns-metrics-collector-config-data.textproto
        - key: sidecar-metrics-collector-config-data
          path: sidecar-metrics-collector-config-data.textproto
        name: kubedns-metrics-collector-config-map
      name: kubedns-metrics-collector-config-map-vol
    - name: kube-api-access-gkwnt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:34:07Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:34:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:34:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 150m
        memory: 20Mi
      containerID: containerd://76fed4699c941b7cdc54a53cdfe83dffa5418ea8da9979b2023a9aede41ea746
      image: sha256:742c7c3edb842345982cdc16ccc1c7f92e5ce437e74a5a54eb363ef402c6d44e
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny@sha256:96384c974ede71f9b6e04428ef4e7e404c27399e665b6efaf99fe4f649e42dfb
      lastState: {}
      name: dnsmasq
      ready: true
      resources:
        requests:
          cpu: 150m
          memory: 20Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:33:59Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          - 65534
          uid: 0
      volumeMounts:
      - mountPath: /etc/k8s/dns/dnsmasq-nanny
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gkwnt
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 100m
        memory: 70Mi
      containerID: containerd://012e6d59d0c5afaa40de8f72b24bb855f40a48545f337ff77752b8ef2aa3b039
      image: sha256:a291922dd2e2c5ad1dec9466703ac199dc3d786d7dfcdc7b6a545d1f36bb58f4
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns@sha256:eaac37b53169bc558d2d2bf21cf0e07554efd5f05816291839e1701746679465
      lastState: {}
      name: kubedns
      ready: true
      resources:
        limits:
          memory: 210Mi
        requests:
          cpu: 100m
          memory: 70Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:33:41Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          - 65534
          uid: 1001
      volumeMounts:
      - mountPath: /kube-dns-config
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gkwnt
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 45Mi
      containerID: containerd://e18cd89b136c7668c716b7e948ffc5824c3fd2d5b3232b0e6a62d9d2dd0ac6b5
      image: sha256:a7040194e91b8adcf3456b54b6b275fdb62ac95906768456384cae60f41da389
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:ec164c7e60389f0cdb257acc313034f20335ab67be10b0d3b55a30094e678389
      lastState: {}
      name: kubedns-metrics-collector
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 45Mi
        requests:
          cpu: 10m
          memory: 45Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:34:07Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          - 65534
          uid: 1001
      volumeMounts:
      - mountPath: /conf
        name: kubedns-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gkwnt
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 20Mi
      containerID: containerd://6aabd6f3e51bfbe7fcd85afdf73b2a3705790e0d706ebe224e5a439a65fc0b97
      image: sha256:d1702054d85bedbf9163978999ff849e3970dc3f38da39fbd81afcaea3c3090d
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar@sha256:94e9c72300d31fc1745a34e1e8a2dbef6b0cc32512552034de177b320d0390a4
      lastState: {}
      name: sidecar
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:34:04Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          - 65534
          uid: 1001
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gkwnt
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.7
    hostIPs:
    - ip: 10.128.0.7
    phase: Running
    podIP: 10.60.2.11
    podIPs:
    - ip: 10.60.2.11
    qosClass: Burstable
    startTime: "2025-08-31T15:33:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: kubedns
      components.gke.io/component-version: 33.2.3
    creationTimestamp: "2025-08-31T15:32:17Z"
    generateName: kube-dns-autoscaler-84dc5fd76f-
    generation: 1
    labels:
      k8s-app: kube-dns-autoscaler
      pod-template-hash: 84dc5fd76f
    name: kube-dns-autoscaler-84dc5fd76f-b4h7q
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kube-dns-autoscaler-84dc5fd76f
      uid: 6ef99159-1982-4fac-8f69-401045eab1c3
    resourceVersion: "1756654420301023023"
    uid: 03c260ed-9dde-47be-9e8d-6a261b1a7cd7
  spec:
    containers:
    - command:
      - /cluster-proportional-autoscaler
      - --namespace=kube-system
      - --configmap=kube-dns-autoscaler
      - --target=Deployment/kube-dns
      - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true,"includeUnschedulableNodes":true}}
      - --logtostderr=true
      - --v=2
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.10.2-gke.9@sha256:846387ce49a668562e359340dd8f40b4e6e3d3439bbc77ffe1a1599ecfe8f22a
      imagePullPolicy: IfNotPresent
      name: autoscaler
      resources:
        requests:
          cpu: 20m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4cb6h
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 1000
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
      supplementalGroups:
      - 65534
    serviceAccount: kube-dns-autoscaler
    serviceAccountName: kube-dns-autoscaler
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-4cb6h
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 20m
        memory: 10Mi
      containerID: containerd://7fcbc4b670458d23c8950d1dbe218ef2c7c5588eab707e76cc3e22a96fa07721
      image: sha256:c38d28867cb8f5efcfc667086164cd9a61e695dcb845732fcce143f038793591
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler@sha256:846387ce49a668562e359340dd8f40b4e6e3d3439bbc77ffe1a1599ecfe8f22a
      lastState: {}
      name: autoscaler
      ready: true
      resources:
        requests:
          cpu: 20m
          memory: 10Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:33:39Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          - 65534
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4cb6h
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.7
    hostIPs:
    - ip: 10.128.0.7
    phase: Running
    podIP: 10.60.2.5
    podIPs:
    - ip: 10.60.2.5
    qosClass: Burstable
    startTime: "2025-08-31T15:33:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: a839a16605ed920f1f88e099da4e7895
      kubernetes.io/config.mirror: a839a16605ed920f1f88e099da4e7895
      kubernetes.io/config.seen: "2025-08-31T15:33:16.587257381Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2025-08-31T15:33:19Z"
    generation: 1
    labels:
      component: kube-proxy
      tier: node
    name: kube-proxy-gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
      uid: 94200a4c-ac84-4c37-a622-242084496b7f
    resourceVersion: "1756654401217055013"
    uid: 8486861a-f1d1-434b-9964-a2cba9e59a98
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: cloud.google.com/autopilot-managed-node
              operator: DoesNotExist
    containers:
    - command:
      - /bin/sh
      - -c
      - exec kube-proxy --master=https://10.128.0.2 --kubeconfig=/var/lib/kube-proxy/kubeconfig
        --cluster-cidr=10.60.0.0/14 --oom-score-adj=-998 --v=2 --feature-gates=RotateKubeletServerCertificate=true,ExecProbeTimeout=false
        --iptables-sync-period=1m --iptables-min-sync-period=10s --ipvs-sync-period=1m
        --ipvs-min-sync-period=10s --detect-local-mode=NodeCIDR 1>>/var/log/kube-proxy.log
        2>&1
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/kube-proxy-amd64:v1.33.3-gke.1136000
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: etc-ssl-certs
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-ca-certs
        readOnly: true
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/kube-proxy/kubeconfig
        name: kubeconfig
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /usr/share/ca-certificates
        type: ""
      name: usr-ca-certs
    - hostPath:
        path: /etc/ssl/certs
        type: ""
      name: etc-ssl-certs
    - hostPath:
        path: /var/lib/kube-proxy/kubeconfig
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:18Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
      containerID: containerd://04ee3308ac7a65cf61962d6aa107a69127c073d62613c40595e672bb3f67a97e
      image: gke.gcr.io/kube-proxy-amd64:v1.33.3-gke.1136000
      imageID: sha256:e8e4fab6995dd2a1568db8217e515d20be8b7724d2387835bac698b67a9c0fe3
      lastState: {}
      name: kube-proxy
      ready: true
      resources:
        requests:
          cpu: 100m
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:33:18Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: etc-ssl-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /usr/share/ca-certificates
        name: usr-ca-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/kube-proxy/kubeconfig
        name: kubeconfig
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.7
    hostIPs:
    - ip: 10.128.0.7
    phase: Running
    podIP: 10.128.0.7
    podIPs:
    - ip: 10.128.0.7
    qosClass: Burstable
    startTime: "2025-08-31T15:33:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: l7-lb-controller-combined
      components.gke.io/component-version: 1.36.2-gke.1
    creationTimestamp: "2025-08-31T15:32:18Z"
    generateName: l7-default-backend-557469886d-
    generation: 1
    labels:
      k8s-app: glbc
      name: glbc
      pod-template-hash: 557469886d
    name: l7-default-backend-557469886d-q2mcd
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: l7-default-backend-557469886d
      uid: 3bebcb5a-95f9-44e9-9a39-56ef0d43b3cb
    resourceVersion: "1756654415234399021"
    uid: 0e2b0b22-8666-4e95-894f-912b5e42a808
  spec:
    automountServiceAccountToken: false
    containers:
    - image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/ingress-gce-404-server-with-metrics:v1.36.2@sha256:2e2ff60c96f67592b6fa403ec192ad9e4064ec9a9589e2774e6f78eeb1804497
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: default-http-backend
      ports:
      - containerPort: 8080
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:35Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 20Mi
      containerID: containerd://0923ea495a770fa4955ee93bc9122931992570ae5fa4886e0c08aa264fef29ea
      image: sha256:00e03a4483b713e6cfce669c3e5a2233b14a732c41cc9c870c5045cabb704b5a
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/ingress-gce-404-server-with-metrics@sha256:2e2ff60c96f67592b6fa403ec192ad9e4064ec9a9589e2774e6f78eeb1804497
      lastState: {}
      name: default-http-backend
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:33:34Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
    hostIP: 10.128.0.7
    hostIPs:
    - ip: 10.128.0.7
    phase: Running
    podIP: 10.60.2.2
    podIPs:
    - ip: 10.60.2.2
    qosClass: Burstable
    startTime: "2025-08-31T15:33:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: metrics-server
      components.gke.io/component-version: 1.33.0-gke.1
    creationTimestamp: "2025-08-31T15:32:19Z"
    generateName: metrics-server-v1.33.0-7896ccd9f5-
    generation: 1
    labels:
      k8s-app: metrics-server
      pod-template-hash: 7896ccd9f5
      version: v1.33.0
    name: metrics-server-v1.33.0-7896ccd9f5-8mskc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-v1.33.0-7896ccd9f5
      uid: fa2b2276-1b0d-4e6b-a6f5-2fa28390ea04
    resourceVersion: "1756654495617519007"
    uid: fc34242b-ce38-465b-8bef-c7fabd3214fe
  spec:
    containers:
    - command:
      - /metrics-server
      - --metric-resolution=30s
      - --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP
      - --cert-dir=/tmp
      - --secure-port=10250
      - --kubelet-allow-working-set-bytes-zero=false
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/metrics-server:v0.7.1-gke.42@sha256:69a21e428966f9369b5594aa07a2beceb046269d3c7c5b0a0e66ea757dc3c662
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        initialDelaySeconds: 50
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 10250
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        initialDelaySeconds: 50
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 43m
          memory: 55Mi
        requests:
          cpu: 43m
          memory: 55Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gh6n8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: metrics-server-config
      name: metrics-server-config-volume
    - emptyDir: {}
      name: tmp-dir
    - name: kube-api-access-gh6n8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:54Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:34:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:34:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 43m
        memory: 55Mi
      containerID: containerd://364d669b8b2acce34b1704fe307a84d7df374fcb8270f87212c0a9b60b453389
      image: sha256:26bb703f5944be2f66f0bcde48f0e78fea6ca0f46b1c228c650d5e32d76a5571
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/metrics-server@sha256:69a21e428966f9369b5594aa07a2beceb046269d3c7c5b0a0e66ea757dc3c662
      lastState: {}
      name: metrics-server
      ready: true
      resources:
        limits:
          cpu: 43m
          memory: 55Mi
        requests:
          cpu: 43m
          memory: 55Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:33:54Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gh6n8
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.7
    hostIPs:
    - ip: 10.128.0.7
    phase: Running
    podIP: 10.60.2.9
    podIPs:
    - ip: 10.60.2.9
    qosClass: Guaranteed
    startTime: "2025-08-31T15:33:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: netd-combined
      components.gke.io/component-version: 13.3.1
    creationTimestamp: "2025-08-31T15:33:20Z"
    generateName: netd-
    generation: 1
    labels:
      controller-revision-hash: 859b75f595
      k8s-app: netd
      pod-template-generation: "1"
    name: netd-ld64w
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: netd
      uid: b728c8fd-48f2-48ec-8f49-cae723ca2965
    resourceVersion: "1756654425379039003"
    uid: b88e04f7-eaec-43b4-932b-047124863dff
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    containers:
    - args:
      - --enable-policy-routing=$(ENABLE_POLICY_ROUTING)
      - --enable-source-valid-mark=$(ENABLE_SOURCE_VALID_MARK)
      - --exclude-dns=$(EXCLUDE_DNS)
      - --logtostderr
      - --reconcile-interval-seconds=$(RECONCILE_INTERVAL_SECONDS)
      - --metrics-collectors=$(METRICS_COLLECTORS)
      - --metrics-address=$(METRICS_ADDRESS)
      - --stack-type=$(STACK_TYPE)
      env:
      - name: ENABLE_POLICY_ROUTING
        value: "false"
      - name: ENABLE_SOURCE_VALID_MARK
        value: "true"
      - name: EXCLUDE_DNS
        value: "true"
      - name: RECONCILE_INTERVAL_SECONDS
        valueFrom:
          configMapKeyRef:
            key: reconcile_interval_seconds
            name: netd-config
      - name: METRICS_COLLECTORS
        valueFrom:
          configMapKeyRef:
            key: metrics_collectors
            name: networking-metrics-config
      - name: METRICS_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: metrics_address
            name: networking-metrics-config
      - name: STACK_TYPE
        valueFrom:
          configMapKeyRef:
            key: stack_type
            name: networking-metrics-config
      - name: CURRENT_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/netd:v0.9.8-gke.2@sha256:d85ae485d899b509bc1b44e1668842ee4ab6b84de620026f2801e2fb160175a2
      imagePullPolicy: IfNotPresent
      name: netd
      resources:
        requests:
          cpu: 2m
          memory: 30Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/var/lib/cni/networks/gke-pod-network
        name: gke-pod-network
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gm4zx
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/netd-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "128459335788"
      - name: LOCATION
        value: us-central1-a
      - name: CLUSTER_NAME
        value: gke-turns-10-hackathon
      - name: METRICS_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: metrics_address
            name: networking-metrics-config
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: netd-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250512_2300_RC0@sha256:ad81886895944477ad09efb8bf41fe8e3258c3d42efa1c9c49482d65c2ecd3fa
      imagePullPolicy: IfNotPresent
      name: netd-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: netd-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gm4zx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - env:
      - name: MIGRATE_TO_DPV2
        value: "false"
      - name: CNI_SPEC_TEMPLATE
        valueFrom:
          configMapKeyRef:
            key: cni_spec_template
            name: netd-config
      - name: CNI_SPEC_NAME
        valueFrom:
          configMapKeyRef:
            key: cni_spec_name
            name: netd-config
      - name: CNI_SPEC_IPV6_ROUTE
        valueFrom:
          configMapKeyRef:
            key: cni_spec_ipv6_route
            name: netd-config
      - name: ENABLE_CALICO_NETWORK_POLICY
        valueFrom:
          configMapKeyRef:
            key: enable_calico_network_policy
            name: netd-config
      - name: WRITE_CALICO_CONFIG_FILE
        value: "false"
      - name: ENABLE_IPV6
        valueFrom:
          configMapKeyRef:
            key: enable_ipv6
            name: netd-config
      - name: ENABLE_CILIUM_PLUGIN
        valueFrom:
          configMapKeyRef:
            key: enable_cilium_plugin
            name: netd-config
      - name: ISTIO_CNI_CONFIG
        valueFrom:
          configMapKeyRef:
            key: cni_network_config
            name: istio-cni-plugin-config
            optional: true
      - name: KUBERNETES_SERVICE_HOST
        valueFrom:
          configMapKeyRef:
            key: master_ip
            name: netd-config
      - name: CILIUM_CHAINING_MODE
        valueFrom:
          configMapKeyRef:
            key: cilium_chaining_mode
            name: netd-config
      - name: CURRENT_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CILIUM_FAST_START_NAMESPACES
        valueFrom:
          configMapKeyRef:
            key: fast-start-namespaces
            name: dpv2-fast-start-config
            optional: true
      - name: RUN_CNI_WATCHDOG
        value: "true"
      - name: CILIUM_WATCHDOG_SUCCESS_WAIT
        valueFrom:
          configMapKeyRef:
            key: cilium_watchdog_success_wait_seconds
            name: netd-config
      - name: CILIUM_WATCHDOG_FAILURE_RETRY
        valueFrom:
          configMapKeyRef:
            key: cilium_watchdog_failure_retry_seconds
            name: netd-config
      - name: CILIUM_WATCHDOG_FAST_START_WAIT
        valueFrom:
          configMapKeyRef:
            key: cilium_watchdog_fast_start_wait_seconds
            name: netd-config
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/netd-init:v0.9.8-gke.2@sha256:a4c515e0950a49e9afded17a84c3fc3859e34c4017d22184a6c1ca5d139a61a4
      imagePullPolicy: IfNotPresent
      name: install-cni
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
      restartPolicy: Always
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/home/kubernetes/bin
        name: kubernetes-bin
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gm4zx
        readOnly: true
    nodeName: gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    nodeSelector:
      cloud.google.com/gke-netd-ready: "true"
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: netd
    serviceAccountName: netd
    terminationGracePeriodSeconds: 0
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/cni/net.d
        type: Directory
      name: cni-net-dir
    - hostPath:
        path: /home/kubernetes/bin
        type: Directory
      name: kubernetes-bin
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /var/lib/cni/networks/gke-pod-network
        type: DirectoryOrCreate
      name: gke-pod-network
    - configMap:
        defaultMode: 420
        items:
        - key: netd-metrics-collector-config-data
          path: netd-metrics-collector-config-data.textproto
        name: netd-metrics-collector-config-map
      name: netd-metrics-collector-config-map-vol
    - name: kube-api-access-gm4zx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:23Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 2m
        memory: 30Mi
      containerID: containerd://c060b5b6b61e28f18dac56db95e1091939a6e757711d3f817a2d63e193c82bbf
      image: asia.gke.gcr.io/netd:v0.9.8-gke.2
      imageID: asia.gcr.io/gke-release-staging/netd:v0.9.8-gke.2@sha256:d85ae485d899b509bc1b44e1668842ee4ab6b84de620026f2801e2fb160175a2
      lastState: {}
      name: netd
      ready: true
      resources:
        requests:
          cpu: 2m
          memory: 30Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:33:30Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /host/var/lib/cni/networks/gke-pod-network
        name: gke-pod-network
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gm4zx
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 5m
        memory: 30Mi
      containerID: containerd://f002a8ec0426a282dd360fe6bec6d1bab1f6b2b98559bce58f55ad7066edfa7d
      image: asia.gke.gcr.io/gke-metrics-collector:20250512_2300_RC0
      imageID: asia.gcr.io/gke-release-staging/gke-metrics-collector:20250512_2300_RC0@sha256:ad81886895944477ad09efb8bf41fe8e3258c3d42efa1c9c49482d65c2ecd3fa
      lastState: {}
      name: netd-metrics-collector
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:33:44Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /conf
        name: netd-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gm4zx
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.7
    hostIPs:
    - ip: 10.128.0.7
    initContainerStatuses:
    - allocatedResources:
        cpu: 1m
        memory: 5Mi
      containerID: containerd://8099e82b15a55264f99fe8b90d714f94d003976b909b85234717e731604eac55
      image: asia.gke.gcr.io/netd-init:v0.9.8-gke.2
      imageID: asia.gcr.io/gke-release-staging/netd-init:v0.9.8-gke.2@sha256:a4c515e0950a49e9afded17a84c3fc3859e34c4017d22184a6c1ca5d139a61a4
      lastState: {}
      name: install-cni
      ready: true
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:33:23Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/home/kubernetes/bin
        name: kubernetes-bin
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gm4zx
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.128.0.7
    podIPs:
    - ip: 10.128.0.7
    qosClass: Burstable
    startTime: "2025-08-31T15:33:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: pdcsi
      components.gke.io/component-version: 0.22.30
    creationTimestamp: "2025-08-31T15:33:20Z"
    generateName: pdcsi-node-
    generation: 1
    labels:
      controller-revision-hash: 7d5947c598
      k8s-app: gcp-compute-persistent-disk-csi-driver
      pod-template-generation: "1"
    name: pdcsi-node-8x59x
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: pdcsi-node
      uid: 058f30e4-3e55-48a9-929e-8bd9add278d5
    resourceVersion: "1756654420387375007"
    uid: 805a3bf0-dfab-4e02-9257-b6598c00633d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    containers:
    - args:
      - --v=5
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.42@sha256:7394b701866d6f10296dd1652ca6f29ab690ea528d75327076d8a4ca5a9f5ca7
      imagePullPolicy: IfNotPresent
      name: csi-driver-registrar
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-642r5
        readOnly: true
    - args:
      - --v=5
      - --endpoint=unix:/csi/csi.sock
      - --run-controller-service=false
      - --run-node-service=true
      - --enable-data-cache=true
      - --node-name=$(KUBE_NODE_NAME)
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver:v1.20.3-gke.0@sha256:d31b6a003254a3f9b01ccea4cd748320d49320feda5f41d5b90165508c05b9c5
      imagePullPolicy: IfNotPresent
      name: gce-pd-driver
      resources:
        limits:
          memory: 450Mi
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /etc/udev
        name: udev-rules-etc
      - mountPath: /lib/udev
        name: udev-rules-lib
      - mountPath: /run/udev
        name: udev-socket
      - mountPath: /sys
        name: sys
      - mountPath: /tmp
        name: tmp
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /etc/lvm
        name: lvm-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-642r5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gke-gke-turns-10-hac-gke-turns-10-nod-1381c37f-m8g4
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: pdcsi-node-sa
    serviceAccountName: pdcsi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/pd.csi.storage.gke.io/
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /etc/udev
        type: Directory
      name: udev-rules-etc
    - hostPath:
        path: /lib/udev
        type: Directory
      name: udev-rules-lib
    - hostPath:
        path: /run/udev
        type: Directory
      name: udev-socket
    - hostPath:
        path: /sys
        type: Directory
      name: sys
    - emptyDir:
        sizeLimit: 5Mi
      name: tmp
    - emptyDir:
        sizeLimit: 5Mi
      name: lvm-dir
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - name: kube-api-access-642r5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-08-31T15:33:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 5m
        memory: 10Mi
      containerID: containerd://f1afc01f83afc82f938c940d1e87c1c23dcbe9417e8bf62858988bfd1c9587dc
      image: sha256:c92a92df4ad0976e1cab7c5ae90fd5f3e00fdbd983f5665d486555671041487c
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar@sha256:7394b701866d6f10296dd1652ca6f29ab690ea528d75327076d8a4ca5a9f5ca7
      lastState: {}
      name: csi-driver-registrar
      ready: true
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 10Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:33:23Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-642r5
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 5m
        memory: 10Mi
      containerID: containerd://f876e8c59bf23d76a80c3c72e2503eed016d333a7eb91cbb5e612850a8685b67
      image: sha256:7ec7a3aaae561e32c208a11e279e4cead7b868680294ed9f0c07c97020fff39b
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver@sha256:d31b6a003254a3f9b01ccea4cd748320d49320feda5f41d5b90165508c05b9c5
      lastState: {}
      name: gce-pd-driver
      ready: true
      resources:
        limits:
          memory: 450Mi
        requests:
          cpu: 5m
          memory: 10Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-31T15:33:39Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/lib/kubelet
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /etc/udev
        name: udev-rules-etc
      - mountPath: /lib/udev
        name: udev-rules-lib
      - mountPath: /run/udev
        name: udev-socket
      - mountPath: /sys
        name: sys
      - mountPath: /tmp
        name: tmp
      - mountPath: /lib/modules
        name: modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/lvm
        name: lvm-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-642r5
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.7
    hostIPs:
    - ip: 10.128.0.7
    phase: Running
    podIP: 10.128.0.7
    podIPs:
    - ip: 10.128.0.7
    qosClass: Burstable
    startTime: "2025-08-31T15:33:20Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"adk-agents-service","namespace":"default"},"spec":{"ports":[{"port":8000,"targetPort":8000}],"selector":{"app":"adk-agents"},"type":"ClusterIP"}}
    creationTimestamp: "2025-08-31T14:08:03Z"
    name: adk-agents-service
    namespace: default
    resourceVersion: "1756649283748943013"
    uid: 4d27a682-191e-4e8d-b210-b23ec55cd30a
  spec:
    clusterIP: 34.118.226.150
    clusterIPs:
    - 34.118.226.150
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      app: adk-agents
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"adservice"},"name":"adservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":9555,"targetPort":9555}],"selector":{"app":"adservice"},"type":"ClusterIP"}}
    creationTimestamp: "2025-08-31T13:44:59Z"
    labels:
      app: adservice
    name: adservice
    namespace: default
    resourceVersion: "1756647899713423013"
    uid: 9d330f8e-47dc-4f49-a42e-e56ddb6ba4fd
  spec:
    clusterIP: 34.118.230.192
    clusterIPs:
    - 34.118.230.192
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 9555
      protocol: TCP
      targetPort: 9555
    selector:
      app: adservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"cartservice"},"name":"cartservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":7070,"targetPort":7070}],"selector":{"app":"cartservice"},"type":"ClusterIP"}}
    creationTimestamp: "2025-08-31T13:44:55Z"
    labels:
      app: cartservice
    name: cartservice
    namespace: default
    resourceVersion: "1756647895957519018"
    uid: 540c91a6-667a-4de0-bb39-b525126b605f
  spec:
    clusterIP: 34.118.230.191
    clusterIPs:
    - 34.118.230.191
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 7070
      protocol: TCP
      targetPort: 7070
    selector:
      app: cartservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"checkoutservice"},"name":"checkoutservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":5050,"targetPort":5050}],"selector":{"app":"checkoutservice"},"type":"ClusterIP"}}
    creationTimestamp: "2025-08-31T13:44:51Z"
    labels:
      app: checkoutservice
    name: checkoutservice
    namespace: default
    resourceVersion: "1756647891623919020"
    uid: 4fa1674e-6122-4968-bf9c-58408f721cd7
  spec:
    clusterIP: 34.118.238.174
    clusterIPs:
    - 34.118.238.174
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 5050
      protocol: TCP
      targetPort: 5050
    selector:
      app: checkoutservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"currencyservice"},"name":"currencyservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":7000,"targetPort":7000}],"selector":{"app":"currencyservice"},"type":"ClusterIP"}}
    creationTimestamp: "2025-08-31T13:44:57Z"
    labels:
      app: currencyservice
    name: currencyservice
    namespace: default
    resourceVersion: "1756647897734687012"
    uid: 5e8982c6-2b91-4180-88de-79c7eb641866
  spec:
    clusterIP: 34.118.232.220
    clusterIPs:
    - 34.118.232.220
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 7000
      protocol: TCP
      targetPort: 7000
    selector:
      app: currencyservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"emailservice"},"name":"emailservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":5000,"targetPort":8080}],"selector":{"app":"emailservice"},"type":"ClusterIP"}}
    creationTimestamp: "2025-08-31T13:44:50Z"
    labels:
      app: emailservice
    name: emailservice
    namespace: default
    resourceVersion: "1756647890931151001"
    uid: ab7fe6be-6b00-4c82-9e47-53693b4e6217
  spec:
    clusterIP: 34.118.227.10
    clusterIPs:
    - 34.118.227.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 5000
      protocol: TCP
      targetPort: 8080
    selector:
      app: emailservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"frontend"},"name":"frontend","namespace":"default"},"spec":{"ports":[{"name":"http","port":80,"targetPort":8080}],"selector":{"app":"frontend"},"type":"ClusterIP"}}
    creationTimestamp: "2025-08-31T13:44:52Z"
    labels:
      app: frontend
    name: frontend
    namespace: default
    resourceVersion: "1756647892955967019"
    uid: 3bc367ff-ccd5-4470-9fcd-d97b0d0c5824
  spec:
    clusterIP: 34.118.230.74
    clusterIPs:
    - 34.118.230.74
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: frontend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"frontend"},"name":"frontend-external","namespace":"default"},"spec":{"ports":[{"name":"http","port":80,"targetPort":8080}],"selector":{"app":"frontend"},"type":"LoadBalancer"}}
    creationTimestamp: "2025-08-31T13:44:53Z"
    finalizers:
    - gke.networking.io/l4-netlb-v1
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app: frontend
    name: frontend-external
    namespace: default
    resourceVersion: "1756647925831135018"
    uid: 8cca0b5f-d461-4b8d-9a48-f3519cf4a0e7
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 34.118.232.143
    clusterIPs:
    - 34.118.232.143
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 31286
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: frontend
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 130.211.224.191
        ipMode: VIP
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-08-31T13:33:26Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "1756647206188287006"
    uid: 59f8eb17-1626-4369-b668-bfc7280e0796
  spec:
    clusterIP: 34.118.224.1
    clusterIPs:
    - 34.118.224.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"mcp-server-service","namespace":"default"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"app":"mcp-server"},"type":"ClusterIP"}}
    creationTimestamp: "2025-08-31T13:45:44Z"
    name: mcp-server-service
    namespace: default
    resourceVersion: "1756647944875007017"
    uid: 872a5508-858f-48a1-8ec5-8fb3d5debaac
  spec:
    clusterIP: 34.118.235.50
    clusterIPs:
    - 34.118.235.50
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: mcp-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"paymentservice"},"name":"paymentservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":50051,"targetPort":50051}],"selector":{"app":"paymentservice"},"type":"ClusterIP"}}
    creationTimestamp: "2025-08-31T13:44:53Z"
    labels:
      app: paymentservice
    name: paymentservice
    namespace: default
    resourceVersion: "1756647894113695005"
    uid: 099ae13d-996a-4aa1-af0b-90bb0caf365a
  spec:
    clusterIP: 34.118.228.134
    clusterIPs:
    - 34.118.228.134
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 50051
      protocol: TCP
      targetPort: 50051
    selector:
      app: paymentservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"productcatalogservice"},"name":"productcatalogservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":3550,"targetPort":3550}],"selector":{"app":"productcatalogservice"},"type":"ClusterIP"}}
    creationTimestamp: "2025-08-31T13:44:54Z"
    labels:
      app: productcatalogservice
    name: productcatalogservice
    namespace: default
    resourceVersion: "1756647895093263020"
    uid: cdebc57b-d340-44e0-85a7-97e622226b52
  spec:
    clusterIP: 34.118.228.191
    clusterIPs:
    - 34.118.228.191
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 3550
      protocol: TCP
      targetPort: 3550
    selector:
      app: productcatalogservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"recommendationservice"},"name":"recommendationservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":8080,"targetPort":8080}],"selector":{"app":"recommendationservice"},"type":"ClusterIP"}}
    creationTimestamp: "2025-08-31T13:44:52Z"
    labels:
      app: recommendationservice
    name: recommendationservice
    namespace: default
    resourceVersion: "1756647892329263024"
    uid: 6a057ad4-3cb6-4f02-bf84-7b4e59c1d77a
  spec:
    clusterIP: 34.118.236.220
    clusterIPs:
    - 34.118.236.220
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: recommendationservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"redis-cart"},"name":"redis-cart","namespace":"default"},"spec":{"ports":[{"name":"tcp-redis","port":6379,"targetPort":6379}],"selector":{"app":"redis-cart"},"type":"ClusterIP"}}
    creationTimestamp: "2025-08-31T13:44:56Z"
    labels:
      app: redis-cart
    name: redis-cart
    namespace: default
    resourceVersion: "1756647896676431017"
    uid: 547f1255-72b7-496a-9b0d-984949ce856a
  spec:
    clusterIP: 34.118.225.193
    clusterIPs:
    - 34.118.225.193
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-redis
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app: redis-cart
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"shippingservice"},"name":"shippingservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":50051,"targetPort":50051}],"selector":{"app":"shippingservice"},"type":"ClusterIP"}}
    creationTimestamp: "2025-08-31T13:44:58Z"
    labels:
      app: shippingservice
    name: shippingservice
    namespace: default
    resourceVersion: "1756647898420015017"
    uid: b42a6255-78c2-4939-80d3-a28bc706fe87
  spec:
    clusterIP: 34.118.231.50
    clusterIPs:
    - 34.118.231.50
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 50051
      protocol: TCP
      targetPort: 50051
    selector:
      app: shippingservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"streamlit-ui-service","namespace":"default"},"spec":{"ports":[{"port":8501,"targetPort":8501}],"selector":{"app":"streamlit-ui"},"type":"LoadBalancer"}}
    creationTimestamp: "2025-08-31T14:13:53Z"
    finalizers:
    - gke.networking.io/l4-netlb-v1
    - service.kubernetes.io/load-balancer-cleanup
    name: streamlit-ui-service
    namespace: default
    resourceVersion: "1756649660104719015"
    uid: d1b4a7c4-e5bc-4538-813f-4725fba9f931
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 34.118.235.159
    clusterIPs:
    - 34.118.235.159
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 32678
      port: 8501
      protocol: TCP
      targetPort: 8501
    selector:
      app: streamlit-ui
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 34.70.96.97
        ipMode: VIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.4-gke.1
      components.gke.io/layer: addon
    creationTimestamp: "2025-08-31T13:35:55Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: alertmanager
    namespace: gmp-system
    resourceVersion: "1756647355535151017"
    uid: 779f5eec-4c5c-4a9c-a921-2d7f43e8962b
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: alertmanager
      port: 9093
      protocol: TCP
      targetPort: 9093
    selector:
      app: managed-prometheus-alertmanager
      app.kubernetes.io/name: alertmanager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.4-gke.1
      components.gke.io/layer: addon
    creationTimestamp: "2025-08-31T13:35:56Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: gmp-operator
    namespace: gmp-system
    resourceVersion: "1756647356215951023"
    uid: e0703f4d-4108-45db-8589-8088837032ea
  spec:
    clusterIP: 34.118.238.37
    clusterIPs:
    - 34.118.238.37
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: legacy
      port: 8443
      protocol: TCP
      targetPort: webhook
    - name: webhook
      port: 443
      protocol: TCP
      targetPort: web
    selector:
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.4-gke.1
      components.gke.io/layer: addon
    creationTimestamp: "2025-08-31T13:35:55Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: rule-evaluator
    namespace: gmp-system
    resourceVersion: "1756647355877167018"
    uid: d6f4df7f-22dc-4ac5-9604-f25f0ae7baef
  spec:
    clusterIP: 34.118.235.185
    clusterIPs:
    - 34.118.235.185
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: rule-evaluator
      port: 19092
      protocol: TCP
      targetPort: 19092
    selector:
      app.kubernetes.io/name: rule-evaluator
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: l7-lb-controller-combined
      components.gke.io/component-version: 1.36.2-gke.1
      components.gke.io/layer: addon
    creationTimestamp: "2025-08-31T13:35:48Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: glbc
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: GLBCDefaultBackend
    name: default-http-backend
    namespace: kube-system
    resourceVersion: "1756647348430383023"
    uid: 614df434-7436-4858-a4ac-bc79cc72d81a
  spec:
    clusterIP: 34.118.230.105
    clusterIPs:
    - 34.118.230.105
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 31256
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      k8s-app: glbc
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-08-31T13:34:57Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: KubeDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "1756647298200511020"
    uid: 50bc4870-a03f-4497-aaaf-13069c687f9e
  spec:
    clusterIP: 34.118.224.10
    clusterIPs:
    - 34.118.224.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: metrics-server
      components.gke.io/component-version: 1.33.0-gke.1
      components.gke.io/layer: addon
    creationTimestamp: "2025-08-31T13:36:02Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
    name: metrics-server
    namespace: kube-system
    resourceVersion: "1756647362210991011"
    uid: ddbc707c-c920-46be-816f-2648d1205979
  spec:
    clusterIP: 34.118.235.30
    clusterIPs:
    - 34.118.235.30
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 443
      protocol: TCP
      targetPort: https
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:56Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: collector
    namespace: gmp-system
    resourceVersion: "1756655193739103002"
    uid: 9555cc7c-14b4-4a76-847a-6fc335d4523f
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: collector
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.4-gke.1
        creationTimestamp: null
        labels:
          app: managed-prometheus-collector
          app.kubernetes.io/name: collector
          app.kubernetes.io/version: 0.15.4
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --config.file=/prometheus/config_out/config.yaml
          - --enable-feature=exemplar-storage
          - --enable-feature=google-kubernetes-secret-provider
          - --storage.tsdb.path=/prometheus/data
          - --storage.tsdb.no-lockfile
          - --gmp.storage.delete-data-on-start
          - --storage.tsdb.retention.time=30m
          - --storage.tsdb.wal-compression
          - --storage.tsdb.min-block-duration=10m
          - --storage.tsdb.max-block-duration=10m
          - --web.listen-address=:19090
          - --web.enable-lifecycle
          - --web.route-prefix=/
          - --export.user-agent-mode=gke
          - --log.format=json
          env:
          - name: GOGC
            value: "25"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/prometheus:v2.45.3-gmp.13-gke.0@sha256:c824f205eb0d9f790bbb8ffbb8ee88b59b886bd6af160d17cd416d8e3143413f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 19090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus
          ports:
          - containerPort: 19090
            name: prom-metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 19090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 3G
            requests:
              cpu: 4m
              memory: 32M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/data
            name: storage
          - mountPath: /prometheus/config_out
            name: config-out
            readOnly: true
          - mountPath: /etc/secrets
            name: collection-secret
            readOnly: true
        - args:
          - --config-file=/prometheus/config/config.yaml
          - --config-file-output=/prometheus/config_out/config.yaml
          - --reload-url=http://127.0.0.1:19090/-/reload
          - --ready-url=http://127.0.0.1:19090/-/ready
          - --listen-address=:19091
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.4-gke.0@sha256:d829f291c33fd8eb83073047903ffcc1afa4fce7dea146ad6ed1f409f788d298
          imagePullPolicy: IfNotPresent
          name: config-reloader
          ports:
          - containerPort: 19091
            name: cfg-rel-metrics
            protocol: TCP
          resources:
            limits:
              memory: 32M
            requests:
              cpu: 1m
              memory: 4M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config
            name: config
            readOnly: true
          - mountPath: /prometheus/config_out
            name: config-out
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/bash
          - -c
          - touch /prometheus/config_out/config.yaml
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
          imagePullPolicy: IfNotPresent
          name: config-init
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config_out
            name: config-out
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: collector
        serviceAccountName: collector
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: storage
        - configMap:
            defaultMode: 420
            name: collector
          name: config
        - emptyDir: {}
          name: config-out
        - name: collection-secret
          secret:
            defaultMode: 420
            secretName: collection
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:13Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: efficiency-daemon
    name: efficiency-daemon
    namespace: kube-system
    resourceVersion: "1756647313591567018"
    uid: 1c1c208f-748f-4bfc-91b9-1c4a75e95ae0
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: efficiency-daemon
    template:
      metadata:
        annotations:
          components.gke.io/component-name: efficiency-daemon
          components.gke.io/component-version: 33.5.0
        creationTimestamp: null
        labels:
          k8s-app: efficiency-daemon
          name: efficiency-daemon
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/slice-of-hardware
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-accelerator
                  operator: DoesNotExist
                - key: cloud.google.com/autopilot-managed-node
                  operator: In
                  values:
                  - "true"
        containers:
        - args:
          - -host_prefix=/host
          - -config_path=/config/efficiency-daemon-config.yaml
          - -config_overrides=efficiency-daemon-config-overrides
          - -eviction_hard_memory_available=100Mi
          - -log_level=info
          command:
          - /efficiency_daemon
          env:
          - name: CLUSTER_PROJECT
            value: "128459335788"
          - name: CLUSTER_LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: efficiency-daemon
          - name: CLOUD_MONITORING_ENDPOINT
            value: monitoring.googleapis.com:443
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/efficiency-daemon:v33.5.0-gke.0@sha256:f24853e48821137fbccac9946c1740bf51c66ba3ff09e2a5f5e35b1aab1ebcbf
          imagePullPolicy: Always
          name: efficiency-daemon
          resources:
            requests:
              cpu: 5m
              memory: 50Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/etc/kubernetes/manifests
            name: k8s-manifests
            readOnly: true
          - mountPath: /host/run/containerd/containerd.sock
            name: containerd-sock
          - mountPath: /host/run/nri/nri.sock
            name: nri-sock
          - mountPath: /host/sys/fs/cgroup
            name: sys-cgroup
          - mountPath: /host/sys/devices/system/cpu
            name: sys-cpu
          - mountPath: /config
            name: efficiency-daemon-config
          - mountPath: /host/home/kubernetes/bin/kubelet
            name: kubelet-exec
          - mountPath: /var/run/dbus/system_bus_socket
            name: dbus-sock
          - mountPath: /host/sys/module
            name: sys-module
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: efficiency-daemon
        serviceAccountName: efficiency-daemon
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/kubernetes/manifests
            type: Directory
          name: k8s-manifests
        - hostPath:
            path: /run/containerd/containerd.sock
            type: Socket
          name: containerd-sock
        - hostPath:
            path: /run/nri/nri.sock
            type: Socket
          name: nri-sock
        - hostPath:
            path: /sys/fs/cgroup
            type: Directory
          name: sys-cgroup
        - hostPath:
            path: /sys/devices/system/cpu
            type: Directory
          name: sys-cpu
        - configMap:
            defaultMode: 420
            name: efficiency-daemon-config
          name: efficiency-daemon-config
        - hostPath:
            path: /home/kubernetes/bin/kubelet
            type: File
          name: kubelet-exec
        - hostPath:
            path: /var/run/dbus/system_bus_socket
            type: Socket
          name: dbus-sock
        - hostPath:
            path: /sys/module
            type: Directory
          name: sys-module
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:15Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
    name: fluentbit-gke
    namespace: kube-system
    resourceVersion: "1756655193906623019"
    uid: 1d38d017-6de2-4750-ac7f-978f229519da
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: fluentbit-gke
        k8s-app: fluentbit-gke
    template:
      metadata:
        annotations:
          EnableNodeJournal: "false"
          EnablePodSecurityPolicy: "false"
          SystemOnlyLogging: "true"
          components.gke.io/component-name: fluentbit
          components.gke.io/component-version: 1.33.5-gke.3
          monitoring.gke.io/path: /api/v1/metrics/prometheus
        creationTimestamp: null
        labels:
          component: fluentbit-gke
          k8s-app: fluentbit-gke
          kubernetes.io/cluster-service: "true"
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-max-pods-per-node
                  operator: DoesNotExist
                - key: cloud.google.com/gke-logging-variant
                  operator: NotIn
                  values:
                  - MAX_THROUGHPUT
              - matchExpressions:
                - key: cloud.google.com/gke-max-pods-per-node
                  operator: Lt
                  values:
                  - "111"
                - key: cloud.google.com/gke-logging-variant
                  operator: NotIn
                  values:
                  - MAX_THROUGHPUT
        containers:
        - image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.1200-gke.14@sha256:fe028dfcf00bdaded6770720de8df8f3d24e841f41a968138ae00d699003aa0f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2020
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: fluentbit
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          - mountPath: /var/lib/google-fluentbit/pos-files
            name: varlibgooglefluentbitpos
          - mountPath: /fluent-bit/etc/
            name: config-volume
        - command:
          - /fluent-bit-gke-exporter
          - --kubernetes-separator=_
          - --stackdriver-resource-model=k8s
          - --enable-pod-label-discovery
          - --pod-label-dot-replacement=_
          - --split-stdout-stderr
          - --stackdriver-timeout=60s
          - --max-inactivity-duration=600s
          - --stackdriver-address=logging.googleapis.com:443
          - --pool-size=2
          - --max-log-connections=2
          - --logtostderr
          - --node-name=$(NODE_NAME)
          - --pod-cache-size=1024
          - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.13-gke.4@sha256:6632976b59b83d20c58bbe391483c45ec2eb8244fb68c71eee0a269fa95031d0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 2021
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: fluentbit-gke
          ports:
          - containerPort: 2021
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/fluentbit-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: fluentbit-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250724_2300_RC0@sha256:42875f6f4a2a79ad1f409fb5624eb66709738568e2d1da02f141493dd7ad216f
          imagePullPolicy: IfNotPresent
          name: fluentbit-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: fluentbit-metrics-collector-config-map-vol
        dnsPolicy: Default
        hostNetwork: true
        initContainers:
        - command:
          - /bin/bash
          - -c
          - |-
            set -e;
            if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
              exit 0;
            fi;
            if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
              rm -rf /var/lib/google-fluentbit/pos-files.staged;
              rm -rf /var/lib/google-fluentbit/pos-files;
              cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
              mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
              rm -rf /var/run/google-fluentbit/pos-files;
            fi
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
          imagePullPolicy: IfNotPresent
          name: fluentbit-gke-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/google-fluentbit
            name: varlibgooglefluentbit
          - mountPath: /var/run/google-fluentbit
            name: varrungooglefluentbit
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: fluentbit-gke
        serviceAccountName: fluentbit-gke
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/run/google-fluentbit
            type: DirectoryOrCreate
          name: varrungooglefluentbit
        - hostPath:
            path: /var/log
            type: Directory
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
            type: Directory
          name: varlibdockercontainers
        - hostPath:
            path: /var/lib/google-fluentbit
            type: DirectoryOrCreate
          name: varlibgooglefluentbit
        - hostPath:
            path: /var/lib/google-fluentbit/pos-files
            type: DirectoryOrCreate
          name: varlibgooglefluentbitpos
        - configMap:
            defaultMode: 420
            name: fluentbit-gke-config-v1.4.0
          name: config-volume
        - configMap:
            defaultMode: 420
            items:
            - key: fluentbit-metrics-collector-config-data
              path: fluentbit-metrics-collector-config-data.textproto
            name: fluentbit-metrics-collector-config-map
          name: fluentbit-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:16Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
    name: fluentbit-gke-256pd
    namespace: kube-system
    resourceVersion: "1756647316233919013"
    uid: 9cd78f52-fbcb-4bb6-8114-e503963e41e9
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: fluentbit-gke
        k8s-app: fluentbit-gke
    template:
      metadata:
        annotations:
          EnableNodeJournal: "false"
          EnablePodSecurityPolicy: "false"
          SystemOnlyLogging: "true"
          components.gke.io/component-name: fluentbit
          components.gke.io/component-version: 1.33.5-gke.3
          monitoring.gke.io/path: /api/v1/metrics/prometheus
        creationTimestamp: null
        labels:
          component: fluentbit-gke
          k8s-app: fluentbit-gke
          kubernetes.io/cluster-service: "true"
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-max-pods-per-node
                  operator: Gt
                  values:
                  - "110"
                - key: cloud.google.com/gke-logging-variant
                  operator: NotIn
                  values:
                  - MAX_THROUGHPUT
        containers:
        - image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.1200-gke.14@sha256:fe028dfcf00bdaded6770720de8df8f3d24e841f41a968138ae00d699003aa0f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2020
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: fluentbit
          resources:
            limits:
              memory: 300Mi
            requests:
              cpu: 650m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          - mountPath: /var/lib/google-fluentbit/pos-files
            name: varlibgooglefluentbitpos
          - mountPath: /fluent-bit/etc/
            name: config-volume
        - command:
          - /fluent-bit-gke-exporter
          - --kubernetes-separator=_
          - --stackdriver-resource-model=k8s
          - --enable-pod-label-discovery
          - --pod-label-dot-replacement=_
          - --split-stdout-stderr
          - --stackdriver-timeout=60s
          - --max-inactivity-duration=600s
          - --stackdriver-address=logging.googleapis.com:443
          - --pool-size=5
          - --max-log-connections=5
          - --logtostderr
          - --node-name=$(NODE_NAME)
          - --pod-cache-size=1024
          - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.13-gke.4@sha256:6632976b59b83d20c58bbe391483c45ec2eb8244fb68c71eee0a269fa95031d0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 2021
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: fluentbit-gke
          ports:
          - containerPort: 2021
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 200m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/fluentbit-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: fluentbit-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250724_2300_RC0@sha256:42875f6f4a2a79ad1f409fb5624eb66709738568e2d1da02f141493dd7ad216f
          imagePullPolicy: IfNotPresent
          name: fluentbit-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: fluentbit-metrics-collector-config-map-vol
        dnsPolicy: Default
        hostNetwork: true
        initContainers:
        - command:
          - /bin/bash
          - -c
          - |-
            set -e;
            if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
              exit 0;
            fi;
            if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
              rm -rf /var/lib/google-fluentbit/pos-files.staged;
              rm -rf /var/lib/google-fluentbit/pos-files;
              cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
              mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
              rm -rf /var/run/google-fluentbit/pos-files;
            fi
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
          imagePullPolicy: IfNotPresent
          name: fluentbit-gke-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/google-fluentbit
            name: varlibgooglefluentbit
          - mountPath: /var/run/google-fluentbit
            name: varrungooglefluentbit
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: fluentbit-gke
        serviceAccountName: fluentbit-gke
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/run/google-fluentbit
            type: DirectoryOrCreate
          name: varrungooglefluentbit
        - hostPath:
            path: /var/log
            type: Directory
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
            type: Directory
          name: varlibdockercontainers
        - hostPath:
            path: /var/lib/google-fluentbit
            type: DirectoryOrCreate
          name: varlibgooglefluentbit
        - hostPath:
            path: /var/lib/google-fluentbit/pos-files
            type: DirectoryOrCreate
          name: varlibgooglefluentbitpos
        - configMap:
            defaultMode: 420
            name: fluentbit-gke-config-v1.4.0
          name: config-volume
        - configMap:
            defaultMode: 420
            items:
            - key: fluentbit-metrics-collector-config-data
              path: fluentbit-metrics-collector-config-data.textproto
            name: fluentbit-metrics-collector-config-map
          name: fluentbit-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:16Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
      nodeType: big
    name: fluentbit-gke-managed-node-big
    namespace: kube-system
    resourceVersion: "1756647316781583018"
    uid: d07d8015-e51d-4ec3-b9c1-1bd93fa3a961
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: fluentbit-gke
        k8s-app: fluentbit-gke
        nodeType: big
    template:
      metadata:
        annotations:
          EnableNodeJournal: "false"
          EnablePodSecurityPolicy: "false"
          SystemOnlyLogging: "true"
          components.gke.io/component-name: fluentbit
          components.gke.io/component-version: 1.33.5-gke.3
          monitoring.gke.io/path: /api/v1/metrics/prometheus
        creationTimestamp: null
        labels:
          component: fluentbit-gke
          k8s-app: fluentbit-gke
          kubernetes.io/cluster-service: "true"
          nodeType: big
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node.kubernetes.io/instance-type
                  operator: NotIn
                  values:
                  - e2-medium
                - key: cloud.google.com/autopilot-managed-node
                  operator: In
                  values:
                  - "true"
        containers:
        - image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.1200-gke.14@sha256:fe028dfcf00bdaded6770720de8df8f3d24e841f41a968138ae00d699003aa0f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2020
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: fluentbit
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          - mountPath: /var/lib/google-fluentbit/pos-files
            name: varlibgooglefluentbitpos
          - mountPath: /fluent-bit/etc/
            name: config-volume
        - command:
          - /fluent-bit-gke-exporter
          - --kubernetes-separator=_
          - --stackdriver-resource-model=k8s
          - --enable-pod-label-discovery
          - --pod-label-dot-replacement=_
          - --split-stdout-stderr
          - --stackdriver-timeout=60s
          - --max-inactivity-duration=600s
          - --stackdriver-address=logging.googleapis.com:443
          - --pool-size=5
          - --max-log-connections=5
          - --logtostderr
          - --node-name=$(NODE_NAME)
          - --pod-cache-size=1024
          - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.13-gke.4@sha256:6632976b59b83d20c58bbe391483c45ec2eb8244fb68c71eee0a269fa95031d0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 2021
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: fluentbit-gke
          ports:
          - containerPort: 2021
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/fluentbit-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: fluentbit-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250724_2300_RC0@sha256:42875f6f4a2a79ad1f409fb5624eb66709738568e2d1da02f141493dd7ad216f
          imagePullPolicy: IfNotPresent
          name: fluentbit-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: fluentbit-metrics-collector-config-map-vol
        dnsPolicy: Default
        hostNetwork: true
        initContainers:
        - command:
          - /bin/bash
          - -c
          - |-
            set -e;
            if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
              exit 0;
            fi;
            if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
              rm -rf /var/lib/google-fluentbit/pos-files.staged;
              rm -rf /var/lib/google-fluentbit/pos-files;
              cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
              mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
              rm -rf /var/run/google-fluentbit/pos-files;
            fi
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
          imagePullPolicy: IfNotPresent
          name: fluentbit-gke-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/google-fluentbit
            name: varlibgooglefluentbit
          - mountPath: /var/run/google-fluentbit
            name: varrungooglefluentbit
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: fluentbit-gke
        serviceAccountName: fluentbit-gke
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/run/google-fluentbit
            type: DirectoryOrCreate
          name: varrungooglefluentbit
        - hostPath:
            path: /var/log
            type: Directory
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
            type: Directory
          name: varlibdockercontainers
        - hostPath:
            path: /var/lib/google-fluentbit
            type: DirectoryOrCreate
          name: varlibgooglefluentbit
        - hostPath:
            path: /var/lib/google-fluentbit/pos-files
            type: DirectoryOrCreate
          name: varlibgooglefluentbitpos
        - configMap:
            defaultMode: 420
            name: fluentbit-gke-config-v1.4.0
          name: config-volume
        - configMap:
            defaultMode: 420
            items:
            - key: fluentbit-metrics-collector-config-data
              path: fluentbit-metrics-collector-config-data.textproto
            name: fluentbit-metrics-collector-config-map
          name: fluentbit-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:17Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
      nodeType: small
    name: fluentbit-gke-managed-node-small
    namespace: kube-system
    resourceVersion: "1756647317095055023"
    uid: 6270f7b2-1a44-4be2-ad64-c39cb600221e
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: fluentbit-gke
        k8s-app: fluentbit-gke
        nodeType: small
    template:
      metadata:
        annotations:
          EnableNodeJournal: "false"
          EnablePodSecurityPolicy: "false"
          SystemOnlyLogging: "true"
          components.gke.io/component-name: fluentbit
          components.gke.io/component-version: 1.33.5-gke.3
          monitoring.gke.io/path: /api/v1/metrics/prometheus
        creationTimestamp: null
        labels:
          component: fluentbit-gke
          k8s-app: fluentbit-gke
          kubernetes.io/cluster-service: "true"
          nodeType: small
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node.kubernetes.io/instance-type
                  operator: In
                  values:
                  - e2-medium
                - key: cloud.google.com/autopilot-managed-node
                  operator: In
                  values:
                  - "true"
        containers:
        - image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.1200-gke.14@sha256:fe028dfcf00bdaded6770720de8df8f3d24e841f41a968138ae00d699003aa0f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2020
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: fluentbit
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 20m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          - mountPath: /var/lib/google-fluentbit/pos-files
            name: varlibgooglefluentbitpos
          - mountPath: /fluent-bit/etc/
            name: config-volume
        - command:
          - /fluent-bit-gke-exporter
          - --kubernetes-separator=_
          - --stackdriver-resource-model=k8s
          - --enable-pod-label-discovery
          - --pod-label-dot-replacement=_
          - --split-stdout-stderr
          - --stackdriver-timeout=60s
          - --max-inactivity-duration=600s
          - --stackdriver-address=logging.googleapis.com:443
          - --pool-size=5
          - --max-log-connections=5
          - --logtostderr
          - --node-name=$(NODE_NAME)
          - --pod-cache-size=1024
          - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.13-gke.4@sha256:6632976b59b83d20c58bbe391483c45ec2eb8244fb68c71eee0a269fa95031d0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 2021
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: fluentbit-gke
          ports:
          - containerPort: 2021
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 20m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/fluentbit-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: fluentbit-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250724_2300_RC0@sha256:42875f6f4a2a79ad1f409fb5624eb66709738568e2d1da02f141493dd7ad216f
          imagePullPolicy: IfNotPresent
          name: fluentbit-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: fluentbit-metrics-collector-config-map-vol
        dnsPolicy: Default
        hostNetwork: true
        initContainers:
        - command:
          - /bin/bash
          - -c
          - |-
            set -e;
            if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
              exit 0;
            fi;
            if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
              rm -rf /var/lib/google-fluentbit/pos-files.staged;
              rm -rf /var/lib/google-fluentbit/pos-files;
              cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
              mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
              rm -rf /var/run/google-fluentbit/pos-files;
            fi
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
          imagePullPolicy: IfNotPresent
          name: fluentbit-gke-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/google-fluentbit
            name: varlibgooglefluentbit
          - mountPath: /var/run/google-fluentbit
            name: varrungooglefluentbit
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: fluentbit-gke
        serviceAccountName: fluentbit-gke
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/run/google-fluentbit
            type: DirectoryOrCreate
          name: varrungooglefluentbit
        - hostPath:
            path: /var/log
            type: Directory
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
            type: Directory
          name: varlibdockercontainers
        - hostPath:
            path: /var/lib/google-fluentbit
            type: DirectoryOrCreate
          name: varlibgooglefluentbit
        - hostPath:
            path: /var/lib/google-fluentbit/pos-files
            type: DirectoryOrCreate
          name: varlibgooglefluentbitpos
        - configMap:
            defaultMode: 420
            name: fluentbit-gke-config-v1.4.0
          name: config-volume
        - configMap:
            defaultMode: 420
            items:
            - key: fluentbit-metrics-collector-config-data
              path: fluentbit-metrics-collector-config-data.textproto
            name: fluentbit-metrics-collector-config-map
          name: fluentbit-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:16Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
    name: fluentbit-gke-max
    namespace: kube-system
    resourceVersion: "1756647316523007000"
    uid: 2f42d314-a7e4-49e8-a5f8-081abc265851
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: fluentbit-gke
        k8s-app: fluentbit-gke
    template:
      metadata:
        annotations:
          EnableNodeJournal: "false"
          EnablePodSecurityPolicy: "false"
          SystemOnlyLogging: "true"
          components.gke.io/component-name: fluentbit
          components.gke.io/component-version: 1.33.5-gke.3
          monitoring.gke.io/path: /api/v1/metrics/prometheus
        creationTimestamp: null
        labels:
          component: fluentbit-gke
          k8s-app: fluentbit-gke
          kubernetes.io/cluster-service: "true"
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-logging-variant
                  operator: In
                  values:
                  - MAX_THROUGHPUT
        containers:
        - image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.1200-gke.14@sha256:fe028dfcf00bdaded6770720de8df8f3d24e841f41a968138ae00d699003aa0f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2020
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: fluentbit
          resources:
            limits:
              memory: 400Mi
            requests:
              cpu: "1"
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          - mountPath: /var/lib/google-fluentbit/pos-files
            name: varlibgooglefluentbitpos
          - mountPath: /fluent-bit/etc/
            name: config-volume
        - command:
          - /fluent-bit-gke-exporter
          - --kubernetes-separator=_
          - --stackdriver-resource-model=k8s
          - --enable-pod-label-discovery
          - --pod-label-dot-replacement=_
          - --split-stdout-stderr
          - --stackdriver-timeout=60s
          - --max-inactivity-duration=600s
          - --stackdriver-address=logging.googleapis.com:443
          - --pool-size=2
          - --max-log-connections=2
          - --logtostderr
          - --node-name=$(NODE_NAME)
          - --pod-cache-size=1024
          - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.13-gke.4@sha256:6632976b59b83d20c58bbe391483c45ec2eb8244fb68c71eee0a269fa95031d0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 2021
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: fluentbit-gke
          ports:
          - containerPort: 2021
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: "1"
              memory: 350Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/fluentbit-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: fluentbit-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250724_2300_RC0@sha256:42875f6f4a2a79ad1f409fb5624eb66709738568e2d1da02f141493dd7ad216f
          imagePullPolicy: IfNotPresent
          name: fluentbit-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: fluentbit-metrics-collector-config-map-vol
        dnsPolicy: Default
        hostNetwork: true
        initContainers:
        - command:
          - /bin/bash
          - -c
          - |-
            set -e;
            if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
              exit 0;
            fi;
            if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
              rm -rf /var/lib/google-fluentbit/pos-files.staged;
              rm -rf /var/lib/google-fluentbit/pos-files;
              cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
              mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
              rm -rf /var/run/google-fluentbit/pos-files;
            fi
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
          imagePullPolicy: IfNotPresent
          name: fluentbit-gke-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/google-fluentbit
            name: varlibgooglefluentbit
          - mountPath: /var/run/google-fluentbit
            name: varrungooglefluentbit
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: fluentbit-gke
        serviceAccountName: fluentbit-gke
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/run/google-fluentbit
            type: DirectoryOrCreate
          name: varrungooglefluentbit
        - hostPath:
            path: /var/log
            type: Directory
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
            type: Directory
          name: varlibdockercontainers
        - hostPath:
            path: /var/lib/google-fluentbit
            type: DirectoryOrCreate
          name: varlibgooglefluentbit
        - hostPath:
            path: /var/lib/google-fluentbit/pos-files
            type: DirectoryOrCreate
          name: varlibgooglefluentbitpos
        - configMap:
            defaultMode: 420
            name: fluentbit-gke-config-v1.4.0
          name: config-volume
        - configMap:
            defaultMode: 420
            items:
            - key: fluentbit-metrics-collector-config-data
              path: fluentbit-metrics-collector-config-data.textproto
            name: fluentbit-metrics-collector-config-map
          name: fluentbit-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:24Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: gke-metadata-server
    name: gke-metadata-server
    namespace: kube-system
    resourceVersion: "1756655194483087020"
    uid: 51bd6116-bfee-45de-9b30-95e2358edd28
  spec:
    minReadySeconds: 90
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: gke-metadata-server
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metadata-server
          components.gke.io/component-version: 1.33.9
          monitoring.gke.io/path: /metricz
        creationTimestamp: null
        labels:
          addonmanager.kubernetes.io/mode: Reconcile
          k8s-app: gke-metadata-server
      spec:
        containers:
        - command:
          - /gke-metadata-server
          - --logtostderr
          - --token-exchange-endpoint=https://securetoken.googleapis.com/v1/identitybindingtoken
          - --workload-pool=gke-hackathon-0831-6943.svc.id.goog
          - --alts-service-suffixes-using-node-identity=storage.googleapis.com,bigtable.googleapis.com,bigtable2.googleapis.com,bigtablerls.googleapis.com,spanner.googleapis.com,spanner2.googleapis.com,spanner-rls.googleapis.com,grpclb.directpath.google.internal,grpclb-dualstack.directpath.google.internal,grpc-directpath-dualstack.googleapis.com,staging-wrenchworks.sandbox.googleapis.com,preprod-spanner.sandbox.googleapis.com,wrenchworks-loadtest.googleapis.com,wrenchworks-nonprod.googleapis.com
          - --identity-provider=https://container.googleapis.com/v1/projects/gke-hackathon-0831-6943/locations/us-central1-a/clusters/gke-turns-10-hackathon
          - --passthrough-ksa-list=anthos-identity-service:gke-oidc-envoy-sa,anthos-identity-service:gke-oidc-service-sa,gke-managed-dpv2-observability:hubble-relay,kube-system:antrea-controller,kube-system:container-watcher-pod-reader,kube-system:coredns,kube-system:egress-nat-controller,kube-system:event-exporter-sa,kube-system:filestore-lockrelease-controller-sa,kube-system:fluentd-gcp-scaler,kube-system:gke-metrics-agent,kube-system:gke-spiffe-node-agent,kube-system:heapster,kube-system:konnectivity-agent,kube-system:kube-dns,kube-system:maintenance-handler,kube-system:metadata-agent,kube-system:network-metering-agent,kube-system:node-local-dns,kube-system:pkgextract-service,kube-system:pkgextract-cleanup-service,kube-system:securityprofile-controller,istio-system:istio-ingressgateway-service-account,istio-system:cluster-local-gateway-service-account,csm:csm-sync-agent,knative-serving:controller,kube-system:pdcsi-node-sa,kube-system:gcsfusecsi-node-sa,gmp-system:collector,gke-gmp-system:collector,gke-managed-cim:kube-state-metrics,gke-mcs:gke-mcs-importer
          - --attributes=cluster-name=gke-turns-10-hackathon,cluster-uid=9d68c8a25faa4e8fbb3d9f5cc7c0e02609a187451c7e43f7b654cc72d0cdce13,cluster-location=us-central1-a
          - --cluster-uid=9d68c8a25faa4e8fbb3d9f5cc7c0e02609a187451c7e43f7b654cc72d0cdce13
          - --pod-namespace=kube-system
          - --sts-endpoint=https://sts.googleapis.com
          - --token-exchange-mode=sts
          - --cloud-monitoring-endpoint=monitoring.googleapis.com:443
          - --iam-cred-service-endpoint=https://iamcredentials.googleapis.com
          - --cluster-location=us-central1-a
          - --cluster-name=gke-turns-10-hackathon
          - --component-version=1.33.9
          - --ksa-cache-mode=watchchecker
          - --kcp-allow-watch-checker=true
          - --enable-mds-csi-driver=true
          - --enable-alts-bound-token=true
          - --sts-regional-endpoint=https://sts.us-central1.rep.googleapis.com
          - --enable-sts-regional-dark-launch=true
          - --addr=169.254.169.252:988
          - --csi-socket=/csi/csi.sock
          - --volumes-db=/var/run/gkemds.gke.io/csi/volumes.boltdb
          - --write-trust-map=true
          env:
          - name: GOMEMLIMIT
            value: "94371840"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CONTAINER_NAME
            value: gke-metadata-server
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metadata-server:gke_metadata_server_20250617.00_p0@sha256:b136c75032e99c2923ff088abeed425a0098a00f0a73f66afce7f3267d00652f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 989
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metadata-server
          ports:
          - containerPort: 987
            name: alts
            protocol: TCP
          - containerPort: 988
            name: metadata-server
            protocol: TCP
          - containerPort: 989
            name: debug-port
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 989
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/kubeconfig
            name: kubelet-credentials
            readOnly: true
          - mountPath: /var/lib/kubelet/pki/
            name: kubelet-certs
            readOnly: true
          - mountPath: /var/run/
            name: container-runtime-interface
          - mountPath: /etc/srv/kubernetes/pki
            name: kubelet-pki
            readOnly: true
          - mountPath: /etc/ssl/certs/
            name: ca-certificates
            readOnly: true
          - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
            name: gke-exec-auth-plugin
            readOnly: true
          - mountPath: /sys/firmware/efi/efivars/
            name: efivars
            readOnly: true
          - mountPath: /dev/tpm0
            name: vtpm
            readOnly: true
          - mountPath: /csi
            name: csi-socket-dir
          - mountPath: /var/run/gkemds.gke.io/csi
            name: state-dir
          - mountPath: /var/lib/kubelet/pods
            mountPropagation: Bidirectional
            name: pods-dir
          - mountPath: /registration
            name: kubelet-registration-dir
        dnsPolicy: Default
        hostNetwork: true
        nodeSelector:
          iam.gke.io/gke-metadata-server-enabled: "true"
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: gke-metadata-server
        serviceAccountName: gke-metadata-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/pki/
            type: Directory
          name: kubelet-certs
        - hostPath:
            path: /var/lib/kubelet/kubeconfig
            type: File
          name: kubelet-credentials
        - hostPath:
            path: /var/run/
            type: Directory
          name: container-runtime-interface
        - hostPath:
            path: /etc/srv/kubernetes/pki/
            type: Directory
          name: kubelet-pki
        - hostPath:
            path: /etc/ssl/certs/
            type: Directory
          name: ca-certificates
        - hostPath:
            path: /home/kubernetes/bin/gke-exec-auth-plugin
            type: File
          name: gke-exec-auth-plugin
        - hostPath:
            path: /sys/firmware/efi/efivars/
            type: Directory
          name: efivars
        - hostPath:
            path: /dev/tpm0
            type: CharDevice
          name: vtpm
        - hostPath:
            path: /var/lib/kubelet/plugins/gkemds.gke.io
            type: DirectoryOrCreate
          name: csi-socket-dir
        - hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
          name: pods-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
          name: kubelet-registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins
            type: Directory
          name: kubelet-plugins-dir
        - hostPath:
            path: /var/run/gkemds.gke.io/csi
            type: DirectoryOrCreate
          name: state-dir
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 5%
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:27Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent
    namespace: kube-system
    resourceVersion: "1756655194668623022"
    uid: ec74fa96-3098-4083-bdb2-0a4c1d19e2ee
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.133.19-gke.0
          configHash: Q6MOZFCC5KYM/0pHYO8VOi4Bk8RTp5RRhR8JtsOGQoc=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: DoesNotExist
        containers:
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 6m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kubelet-resource-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=gke-hackathon-0831-6943
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            - key: kubelet-resource-metrics-collector-config-data
              path: kubelet-resource-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:27Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-10
    namespace: kube-system
    resourceVersion: "1756647327632751004"
    uid: 02de9d90-15d6-4bf1-86a6-e70f57282ae7
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.133.19-gke.0
          configHash: Q6MOZFCC5KYM/0pHYO8VOi4Bk8RTp5RRhR8JtsOGQoc=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "10"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 60Mi
            requests:
              cpu: 6m
              memory: 60Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kubelet-resource-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=gke-hackathon-0831-6943
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            - key: kubelet-resource-metrics-collector-config-data
              path: kubelet-resource-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:27Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-100
    namespace: kube-system
    resourceVersion: "1756647327899263008"
    uid: 8d726190-e013-4fff-8e57-3690ca5309b4
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.133.19-gke.0
          configHash: Q6MOZFCC5KYM/0pHYO8VOi4Bk8RTp5RRhR8JtsOGQoc=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "100"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 150Mi
            requests:
              cpu: 6m
              memory: 150Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kubelet-resource-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=gke-hackathon-0831-6943
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            - key: kubelet-resource-metrics-collector-config-data
              path: kubelet-resource-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:28Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-20
    namespace: kube-system
    resourceVersion: "1756647328207151005"
    uid: d03ab38e-f995-4ece-b314-564017dd3bf1
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.133.19-gke.0
          configHash: Q6MOZFCC5KYM/0pHYO8VOi4Bk8RTp5RRhR8JtsOGQoc=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "20"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 70Mi
            requests:
              cpu: 6m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kubelet-resource-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=gke-hackathon-0831-6943
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            - key: kubelet-resource-metrics-collector-config-data
              path: kubelet-resource-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:28Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-200
    namespace: kube-system
    resourceVersion: "1756647328511759009"
    uid: 1713c9d9-cdf1-4e8c-85e9-53cef2f7628b
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.133.19-gke.0
          configHash: Q6MOZFCC5KYM/0pHYO8VOi4Bk8RTp5RRhR8JtsOGQoc=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "200"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 6m
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kubelet-resource-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=gke-hackathon-0831-6943
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            - key: kubelet-resource-metrics-collector-config-data
              path: kubelet-resource-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:29Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-50
    namespace: kube-system
    resourceVersion: "1756647329320239010"
    uid: b258f245-7ee0-497b-87fd-f630582667f8
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.133.19-gke.0
          configHash: Q6MOZFCC5KYM/0pHYO8VOi4Bk8RTp5RRhR8JtsOGQoc=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "50"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 6m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kubelet-resource-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=gke-hackathon-0831-6943
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            - key: kubelet-resource-metrics-collector-config-data
              path: kubelet-resource-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:29Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-500
    namespace: kube-system
    resourceVersion: "1756647329552991012"
    uid: 26cc3152-a4e1-4e6a-8b44-da833497de94
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.133.19-gke.0
          configHash: Q6MOZFCC5KYM/0pHYO8VOi4Bk8RTp5RRhR8JtsOGQoc=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "500"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 550Mi
            requests:
              cpu: 6m
              memory: 550Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kubelet-resource-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=gke-hackathon-0831-6943
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            - key: kubelet-resource-metrics-collector-config-data
              path: kubelet-resource-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/128459335788/locations/us-central1-a/clusters/gke-turns-10-hackathon/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:29Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-windows
    namespace: kube-system
    resourceVersion: "1756647329653455018"
    uid: 40376df8-9c95-4632-87ab-fee2f041ea77
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.133.19-gke.0
          configHash: Q6MOZFCC5KYM/0pHYO8VOi4Bk8RTp5RRhR8JtsOGQoc=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        containers:
        - command:
          - c:\otelsvc.exe
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: KUBERNETES_SERVICE_HOST
            value: kubernetes.default.svc.cluster.local
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: keep
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent-windows:1.15.6-gke.0@sha256:e91c4b0088231a6cba000fb0c96e0078d0950ae5111eef182df4c9d06831e254
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 5m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - command:
          - c:\gke_metrics_collector.exe
          env:
          - name: GOMAXPROCS
            value: "1"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector-win:20250508_2300_RC0@sha256:bb1f28f3ced9aad8445200862a97a4bd2a269b319d730dba6804c85105147c9d
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 200Mi
            requests:
              cpu: 20m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: windows
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            - key: networkpolicy_antrea-metrics-collector-config-data
              path: networkpolicy_antrea-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:36:28Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "1756647388562479019"
    uid: 35788d63-742f-4e65-b766-e360eac815f5
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        containers:
        - command:
          - /bin/sh
          - -c
          - kube-proxy --cluster-cidr=10.60.0.0/14 --oom-score-adj=-998 --v=2 --feature-gates=UnauthenticatedHTTP2DOSMitigation=true,KMSv1=true,WatchCacheInitializationPostStartHook=true
            --iptables-sync-period=1m --iptables-min-sync-period=10s --ipvs-sync-period=1m
            --ipvs-min-sync-period=10s --detect-local-mode=NodeCIDR 1>>/var/log/kube-proxy.log
            2>&1
          env:
          - name: KUBERNETES_SERVICE_HOST
            value: 10.128.0.2
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/kube-proxy-amd64:v1.33.3-gke.1136000
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources:
            requests:
              cpu: 100m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
          node.kubernetes.io/kube-proxy-ds-ready: "true"
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/log
            type: ""
          name: varlog
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:38Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: maintenance-handler
      name: maintenance-handler
    name: maintenance-handler
    namespace: kube-system
    resourceVersion: "1756647338348847016"
    uid: a7827fbd-462b-4242-a429-9a9cffa20956
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: maintenance-handler
        name: maintenance-handler
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-maintenance-handler
          components.gke.io/component-version: 1.33.6-gke.1
        creationTimestamp: null
        labels:
          k8s-app: maintenance-handler
          name: maintenance-handler
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
              - matchExpressions:
                - key: cloud.google.com/gke-tpu-accelerator
                  operator: Exists
              - matchExpressions:
                - key: cloud.google.com/machine-family
                  operator: In
                  values:
                  - z3
                  - h4d
        containers:
        - args:
          - --logtostderr
          - --taint=cloud.google.com/impending-node-termination::NoSchedule
          - --test-env=false
          - --regular-vm-timeout=1h0m0s
          - --tpu-vm-timeout=5m
          - --sf-timeout=10m
          - --immediate-shutdown=true
          - --kubeconfig=/var/lib/kubelet/kubeconfig
          - --in-cluster=false
          command:
          - ./gpu-maintenance-handler
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CLUSTER_PROJECT
            value: "128459335788"
          - name: CLUSTER_LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: CONTAINER_NAME
            value: gpu-maintenance-handler
          - name: CLOUD_MONITORING_ENDPOINT
            value: monitoring.googleapis.com:443
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gpu-maintenance-handler:1.33.3-gke.1@sha256:07f94dae076fa41d54d2633112c392bbcecfd67cd6c9f87e8d2a8b30d274635e
          imagePullPolicy: IfNotPresent
          name: maintenance-handler
          ports:
          - containerPort: 8526
            name: metrics
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/kubeconfig
            name: kubelet-credentials
            readOnly: true
          - mountPath: /var/lib/kubelet/pki/
            name: kubelet-certs
            readOnly: true
          - mountPath: /etc/srv/kubernetes/pki
            name: kubelet-pki
            readOnly: true
          - mountPath: /etc/ssl/certs/
            name: ca-certificates
            readOnly: true
          - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
            name: gke-exec-auth-plugin
            readOnly: true
          - mountPath: /run/dbus
            name: run-dbus
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: maintenance-handler
        serviceAccountName: maintenance-handler
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/pki/
            type: Directory
          name: kubelet-certs
        - hostPath:
            path: /var/lib/kubelet/kubeconfig
            type: File
          name: kubelet-credentials
        - hostPath:
            path: /etc/srv/kubernetes/pki/
            type: Directory
          name: kubelet-pki
        - hostPath:
            path: /etc/ssl/certs/
            type: Directory
          name: ca-certificates
        - hostPath:
            path: /home/kubernetes/bin/gke-exec-auth-plugin
            type: File
          name: gke-exec-auth-plugin
        - hostPath:
            path: /run/dbus
            type: Directory
          name: run-dbus
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 5%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:36:31Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: metadata-proxy
      kubernetes.io/cluster-service: "true"
      version: v0.1
    name: metadata-proxy-v0.1
    namespace: kube-system
    resourceVersion: "1756647391329903013"
    uid: 1c36ef3a-e8eb-4e0e-b3d8-37a79137fc75
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: metadata-proxy
        version: v0.1
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metadata-proxy
          kubernetes.io/cluster-service: "true"
          version: v0.1
      spec:
        containers:
        - args:
          - --addr=0.0.0.0:988
          image: k8s.gcr.io/metadata-proxy:v0.1.12
          imagePullPolicy: IfNotPresent
          name: metadata-proxy
          resources:
            limits:
              cpu: 30m
              memory: 25Mi
            requests:
              cpu: 30m
              memory: 25Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /monitor
          - --stackdriver-prefix=container.googleapis.com/internal/addons
          - --api-override=https://monitoring.googleapis.com/
          - --source=metadata_proxy:http://127.0.0.1:989?whitelisted=request_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: gke.gcr.io/prometheus-to-sd:v0.11.1-gke.1
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources:
            limits:
              cpu: 2m
              memory: 20Mi
            requests:
              cpu: 2m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        hostNetwork: true
        nodeSelector:
          cloud.google.com/metadata-proxy-ready: "true"
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metadata-proxy
        serviceAccountName: metadata-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:36:06Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nccl-fastsocket-installer
    name: nccl-fastsocket-installer
    namespace: kube-system
    resourceVersion: "1756647366142015018"
    uid: 16b538a2-92e2-4789-bf06-a485182abd7f
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nccl-fastsocket-installer
    template:
      metadata:
        annotations:
          components.gke.io/component-name: nccl-fast-socket-installer
          components.gke.io/component-version: 1.33.1-gke.0
        creationTimestamp: null
        labels:
          k8s-app: nccl-fastsocket-installer
          name: nccl-fastsocket-installer
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: cloud.google.com/gke-nccl-fastsocket
                  operator: Exists
        automountServiceAccountToken: false
        containers:
        - image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/pause:3.10@sha256:bcbd57ba5653580ec647b16d8163cdd1112df3609129b01f912a8032e48265da
          imagePullPolicy: IfNotPresent
          name: pause
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - sh
          - -c
          - |
            cp /usr/lib/libnccl-net.so $NCCL_INSTALL_DIR/
          env:
          - name: NCCL_INSTALL_DIR
            value: /usr/local/nvidia/lib64
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fastsocket-installer:1.33.5-gke.0@sha256:2108860436cb397c2f03af7671dba8a1a146c63f913c4d30ec9332cf74bcc3d4
          imagePullPolicy: IfNotPresent
          name: nccl-fastsocket-installer
          resources:
            limits:
              memory: 100Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local/nvidia/lib64
            name: nvidia-install-lib64-dir-host
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /home/kubernetes/bin/nvidia/lib64
            type: DirectoryOrCreate
          name: nvidia-install-lib64-dir-host
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:36:07Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: netd
    name: netd
    namespace: kube-system
    resourceVersion: "1756655194206959001"
    uid: b728c8fd-48f2-48ec-8f49-cae723ca2965
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: netd
    template:
      metadata:
        annotations:
          components.gke.io/component-name: netd-combined
          components.gke.io/component-version: 13.3.1
        creationTimestamp: null
        labels:
          k8s-app: netd
      spec:
        containers:
        - args:
          - --enable-policy-routing=$(ENABLE_POLICY_ROUTING)
          - --enable-source-valid-mark=$(ENABLE_SOURCE_VALID_MARK)
          - --exclude-dns=$(EXCLUDE_DNS)
          - --logtostderr
          - --reconcile-interval-seconds=$(RECONCILE_INTERVAL_SECONDS)
          - --metrics-collectors=$(METRICS_COLLECTORS)
          - --metrics-address=$(METRICS_ADDRESS)
          - --stack-type=$(STACK_TYPE)
          env:
          - name: ENABLE_POLICY_ROUTING
            value: "false"
          - name: ENABLE_SOURCE_VALID_MARK
            value: "true"
          - name: EXCLUDE_DNS
            value: "true"
          - name: RECONCILE_INTERVAL_SECONDS
            valueFrom:
              configMapKeyRef:
                key: reconcile_interval_seconds
                name: netd-config
          - name: METRICS_COLLECTORS
            valueFrom:
              configMapKeyRef:
                key: metrics_collectors
                name: networking-metrics-config
          - name: METRICS_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: metrics_address
                name: networking-metrics-config
          - name: STACK_TYPE
            valueFrom:
              configMapKeyRef:
                key: stack_type
                name: networking-metrics-config
          - name: CURRENT_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/netd:v0.9.8-gke.2@sha256:d85ae485d899b509bc1b44e1668842ee4ab6b84de620026f2801e2fb160175a2
          imagePullPolicy: IfNotPresent
          name: netd
          resources:
            requests:
              cpu: 2m
              memory: 30Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/var/lib/cni/networks/gke-pod-network
            name: gke-pod-network
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/netd-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: METRICS_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: metrics_address
                name: networking-metrics-config
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: netd-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250512_2300_RC0@sha256:ad81886895944477ad09efb8bf41fe8e3258c3d42efa1c9c49482d65c2ecd3fa
          imagePullPolicy: IfNotPresent
          name: netd-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: netd-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - env:
          - name: MIGRATE_TO_DPV2
            value: "false"
          - name: CNI_SPEC_TEMPLATE
            valueFrom:
              configMapKeyRef:
                key: cni_spec_template
                name: netd-config
          - name: CNI_SPEC_NAME
            valueFrom:
              configMapKeyRef:
                key: cni_spec_name
                name: netd-config
          - name: CNI_SPEC_IPV6_ROUTE
            valueFrom:
              configMapKeyRef:
                key: cni_spec_ipv6_route
                name: netd-config
          - name: ENABLE_CALICO_NETWORK_POLICY
            valueFrom:
              configMapKeyRef:
                key: enable_calico_network_policy
                name: netd-config
          - name: WRITE_CALICO_CONFIG_FILE
            value: "false"
          - name: ENABLE_IPV6
            valueFrom:
              configMapKeyRef:
                key: enable_ipv6
                name: netd-config
          - name: ENABLE_CILIUM_PLUGIN
            valueFrom:
              configMapKeyRef:
                key: enable_cilium_plugin
                name: netd-config
          - name: ISTIO_CNI_CONFIG
            valueFrom:
              configMapKeyRef:
                key: cni_network_config
                name: istio-cni-plugin-config
                optional: true
          - name: KUBERNETES_SERVICE_HOST
            valueFrom:
              configMapKeyRef:
                key: master_ip
                name: netd-config
          - name: CILIUM_CHAINING_MODE
            valueFrom:
              configMapKeyRef:
                key: cilium_chaining_mode
                name: netd-config
          - name: CURRENT_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CILIUM_FAST_START_NAMESPACES
            valueFrom:
              configMapKeyRef:
                key: fast-start-namespaces
                name: dpv2-fast-start-config
                optional: true
          - name: RUN_CNI_WATCHDOG
            value: "true"
          - name: CILIUM_WATCHDOG_SUCCESS_WAIT
            valueFrom:
              configMapKeyRef:
                key: cilium_watchdog_success_wait_seconds
                name: netd-config
          - name: CILIUM_WATCHDOG_FAILURE_RETRY
            valueFrom:
              configMapKeyRef:
                key: cilium_watchdog_failure_retry_seconds
                name: netd-config
          - name: CILIUM_WATCHDOG_FAST_START_WAIT
            valueFrom:
              configMapKeyRef:
                key: cilium_watchdog_fast_start_wait_seconds
                name: netd-config
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/netd-init:v0.9.8-gke.2@sha256:a4c515e0950a49e9afded17a84c3fc3859e34c4017d22184a6c1ca5d139a61a4
          imagePullPolicy: IfNotPresent
          name: install-cni
          resources:
            requests:
              cpu: 1m
              memory: 5Mi
          restartPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/etc/cni/net.d
            name: cni-net-dir
          - mountPath: /host/home/kubernetes/bin
            name: kubernetes-bin
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
        nodeSelector:
          cloud.google.com/gke-netd-ready: "true"
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: netd
        serviceAccountName: netd
        terminationGracePeriodSeconds: 0
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/cni/net.d
            type: Directory
          name: cni-net-dir
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /var/lib/cni/networks/gke-pod-network
            type: DirectoryOrCreate
          name: gke-pod-network
        - configMap:
            defaultMode: 420
            items:
            - key: netd-metrics-collector-config-data
              path: netd-metrics-collector-config-data.textproto
            name: netd-metrics-collector-config-map
          name: netd-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:35Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-large-cos
    namespace: kube-system
    resourceVersion: "1756647335101871018"
    uid: 0dc63800-78f0-40d7-8b2d-1b5b21ffbb5c
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.33.9-gke.0
          prometheus.io/path: /metrics
          prometheus.io/port: "2112"
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Gt
                  values:
                  - "63"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - cos
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.33.3-gke.1@sha256:0feed1caab41bae52cabeca007e43d3bcf665c3ccb2747b3613d20e32872b238
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250526_2300_RC0@sha256:6b78ee8b2611f17baf86b85d34658a92f8952f3eb1e55028e3cb5b8ff6e94a17
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              elif [[ "${LABEL}" == "cloud.google.com/gke-confidential-nodes-instance-type" ]]; then
                CONFIDENTIAL_INSTANCE_TYPE=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "latest" ]]; then
              echo "latest" > /etc/nvidia/gpu_driver_version_config.txt
              if [[ "${CONFIDENTIAL_INSTANCE_TYPE}" == "TDX" ]]; then
                echo "${CONFIDENTIAL_INSTANCE_TYPE}" > /etc/nvidia/confidential_node_type.txt
                echo "Confidential GPU detected, install the driver with nvidia-smi verification disabled."
                /cos-gpu-installer install --version=latest --skip-nvidia-smi || exit 1
              else
                /cos-gpu-installer install --version=latest || exit 1
              fi
            elif [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              if [[ "${CONFIDENTIAL_INSTANCE_TYPE}" == "TDX" ]]; then
                echo "${CONFIDENTIAL_INSTANCE_TYPE}" > /etc/nvidia/confidential_node_type.txt
                echo "Confidential GPU detected, install the driver with nvidia-smi verification disabled."
                /cos-gpu-installer install --skip-nvidia-smi || exit 1
              else
                /cos-gpu-installer install || exit 1
              fi
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /usr/local/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed."
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          env:
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: NVIDIA_INSTALL_DIR_CONTAINER
            value: /usr/local/nvidia
          - name: VULKAN_ICD_DIR_HOST
            value: /home/kubernetes/bin/nvidia/vulkan/icd.d
          - name: VULKAN_ICD_DIR_CONTAINER
            value: /etc/vulkan/icd.d
          - name: ROOT_MOUNT_DIR
            value: /root
          - name: COS_TOOLS_DIR_HOST
            value: /var/lib/cos-tools
          - name: COS_TOOLS_DIR_CONTAINER
            value: /build/cos-tools
          image: cos-nvidia-installer:fixed
          imagePullPolicy: Never
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /build/cos-tools
            name: cos-tools
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /etc/vulkan/icd.d
            name: vulkan-icd-mount
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.33.3-gke.1@sha256:fc6cbb1eb6a28ed949720db496a23f134e1811111857a6fdfe71afaea9859d13
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        - env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: ROOT_MOUNT_DIR
            value: /root
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-persistenced-installer:1.33.6-gke.0@sha256:59b1c1cc4080342a99ee4fa148a231de15659b14f27098d7ce64dd7f6c8375d6
          imagePullPolicy: IfNotPresent
          name: nvidia-persistenced-installer
          resources: {}
          restartPolicy: Always
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /root
            name: root-mount
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /dev
            name: dev
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gpu-device-plugin-sa
        serviceAccountName: gpu-device-plugin-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /var/lib/cos-tools
            type: DirectoryOrCreate
          name: cos-tools
        - hostPath:
            path: /home/kubernetes/bin/nvidia/vulkan/icd.d
            type: DirectoryOrCreate
          name: vulkan-icd-mount
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:35Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-large-ubuntu
    namespace: kube-system
    resourceVersion: "1756647335960351011"
    uid: 0ea2fd11-258b-477e-a7b5-c56d23f70244
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.33.9-gke.0
          prometheus.io/path: /metrics
          prometheus.io/port: "2112"
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Gt
                  values:
                  - "63"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - ubuntu
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.33.3-gke.1@sha256:0feed1caab41bae52cabeca007e43d3bcf665c3ccb2747b3613d20e32872b238
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250526_2300_RC0@sha256:6b78ee8b2611f17baf86b85d34658a92f8952f3eb1e55028e3cb5b8ff6e94a17
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              elif [[ "${LABEL}" == "cloud.google.com/gke-confidential-nodes-instance-type" ]]; then
                CONFIDENTIAL_INSTANCE_TYPE=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /usr/local/bin/ubuntu-nvidia-install
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /driver/home/kubernetes/bin/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed"
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          image: gke-nvidia-installer:fixed
          imagePullPolicy: IfNotPresent
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /boot
            name: boot
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /driver/home/kubernetes/bin
            name: kubernetes-bin
          - mountPath: /etc/nvidia
            name: nvidia-config
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.33.3-gke.1@sha256:fc6cbb1eb6a28ed949720db496a23f134e1811111857a6fdfe71afaea9859d13
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        - env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: ROOT_MOUNT_DIR
            value: /root
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-persistenced-installer:1.33.6-gke.0@sha256:59b1c1cc4080342a99ee4fa148a231de15659b14f27098d7ce64dd7f6c8375d6
          imagePullPolicy: IfNotPresent
          name: nvidia-persistenced-installer
          resources: {}
          restartPolicy: Always
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /root
            name: root-mount
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /dev
            name: dev
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gpu-device-plugin-sa
        serviceAccountName: gpu-device-plugin-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /boot
            type: Directory
          name: boot
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:34Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-medium-cos
    namespace: kube-system
    resourceVersion: "1756647334905471019"
    uid: 8a56016a-13d9-4295-b6d8-0dbd5937d960
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.33.9-gke.0
          prometheus.io/path: /metrics
          prometheus.io/port: "2112"
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Lt
                  values:
                  - "64"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Gt
                  values:
                  - "15"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - cos
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.33.3-gke.1@sha256:0feed1caab41bae52cabeca007e43d3bcf665c3ccb2747b3613d20e32872b238
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 75Mi
            requests:
              cpu: 50m
              memory: 75Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250526_2300_RC0@sha256:6b78ee8b2611f17baf86b85d34658a92f8952f3eb1e55028e3cb5b8ff6e94a17
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              elif [[ "${LABEL}" == "cloud.google.com/gke-confidential-nodes-instance-type" ]]; then
                CONFIDENTIAL_INSTANCE_TYPE=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "latest" ]]; then
              echo "latest" > /etc/nvidia/gpu_driver_version_config.txt
              if [[ "${CONFIDENTIAL_INSTANCE_TYPE}" == "TDX" ]]; then
                echo "${CONFIDENTIAL_INSTANCE_TYPE}" > /etc/nvidia/confidential_node_type.txt
                echo "Confidential GPU detected, install the driver with nvidia-smi verification disabled."
                /cos-gpu-installer install --version=latest --skip-nvidia-smi || exit 1
              else
                /cos-gpu-installer install --version=latest || exit 1
              fi
            elif [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              if [[ "${CONFIDENTIAL_INSTANCE_TYPE}" == "TDX" ]]; then
                echo "${CONFIDENTIAL_INSTANCE_TYPE}" > /etc/nvidia/confidential_node_type.txt
                echo "Confidential GPU detected, install the driver with nvidia-smi verification disabled."
                /cos-gpu-installer install --skip-nvidia-smi || exit 1
              else
                /cos-gpu-installer install || exit 1
              fi
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /usr/local/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed."
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          env:
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: NVIDIA_INSTALL_DIR_CONTAINER
            value: /usr/local/nvidia
          - name: VULKAN_ICD_DIR_HOST
            value: /home/kubernetes/bin/nvidia/vulkan/icd.d
          - name: VULKAN_ICD_DIR_CONTAINER
            value: /etc/vulkan/icd.d
          - name: ROOT_MOUNT_DIR
            value: /root
          - name: COS_TOOLS_DIR_HOST
            value: /var/lib/cos-tools
          - name: COS_TOOLS_DIR_CONTAINER
            value: /build/cos-tools
          image: cos-nvidia-installer:fixed
          imagePullPolicy: Never
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /build/cos-tools
            name: cos-tools
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /etc/vulkan/icd.d
            name: vulkan-icd-mount
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.33.3-gke.1@sha256:fc6cbb1eb6a28ed949720db496a23f134e1811111857a6fdfe71afaea9859d13
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        - env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: ROOT_MOUNT_DIR
            value: /root
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-persistenced-installer:1.33.6-gke.0@sha256:59b1c1cc4080342a99ee4fa148a231de15659b14f27098d7ce64dd7f6c8375d6
          imagePullPolicy: IfNotPresent
          name: nvidia-persistenced-installer
          resources: {}
          restartPolicy: Always
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /root
            name: root-mount
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /dev
            name: dev
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gpu-device-plugin-sa
        serviceAccountName: gpu-device-plugin-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /var/lib/cos-tools
            type: DirectoryOrCreate
          name: cos-tools
        - hostPath:
            path: /home/kubernetes/bin/nvidia/vulkan/icd.d
            type: DirectoryOrCreate
          name: vulkan-icd-mount
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:35Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-medium-ubuntu
    namespace: kube-system
    resourceVersion: "1756647335605007009"
    uid: 8ff2c529-eda6-4836-907e-388a878f7c9d
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.33.9-gke.0
          prometheus.io/path: /metrics
          prometheus.io/port: "2112"
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Lt
                  values:
                  - "64"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Gt
                  values:
                  - "15"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - ubuntu
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.33.3-gke.1@sha256:0feed1caab41bae52cabeca007e43d3bcf665c3ccb2747b3613d20e32872b238
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 75Mi
            requests:
              cpu: 50m
              memory: 75Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250526_2300_RC0@sha256:6b78ee8b2611f17baf86b85d34658a92f8952f3eb1e55028e3cb5b8ff6e94a17
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              elif [[ "${LABEL}" == "cloud.google.com/gke-confidential-nodes-instance-type" ]]; then
                CONFIDENTIAL_INSTANCE_TYPE=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /usr/local/bin/ubuntu-nvidia-install
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /driver/home/kubernetes/bin/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed"
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          image: gke-nvidia-installer:fixed
          imagePullPolicy: IfNotPresent
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /boot
            name: boot
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /driver/home/kubernetes/bin
            name: kubernetes-bin
          - mountPath: /etc/nvidia
            name: nvidia-config
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.33.3-gke.1@sha256:fc6cbb1eb6a28ed949720db496a23f134e1811111857a6fdfe71afaea9859d13
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        - env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: ROOT_MOUNT_DIR
            value: /root
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-persistenced-installer:1.33.6-gke.0@sha256:59b1c1cc4080342a99ee4fa148a231de15659b14f27098d7ce64dd7f6c8375d6
          imagePullPolicy: IfNotPresent
          name: nvidia-persistenced-installer
          resources: {}
          restartPolicy: Always
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /root
            name: root-mount
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /dev
            name: dev
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gpu-device-plugin-sa
        serviceAccountName: gpu-device-plugin-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /boot
            type: Directory
          name: boot
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:34Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-small-cos
    namespace: kube-system
    resourceVersion: "1756647334513903004"
    uid: 7205a992-be22-4cd6-84dc-f44c1fa5bdfe
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.33.9-gke.0
          prometheus.io/path: /metrics
          prometheus.io/port: "2112"
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Lt
                  values:
                  - "16"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - cos
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.33.3-gke.1@sha256:0feed1caab41bae52cabeca007e43d3bcf665c3ccb2747b3613d20e32872b238
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 50m
              memory: 50Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250526_2300_RC0@sha256:6b78ee8b2611f17baf86b85d34658a92f8952f3eb1e55028e3cb5b8ff6e94a17
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              elif [[ "${LABEL}" == "cloud.google.com/gke-confidential-nodes-instance-type" ]]; then
                CONFIDENTIAL_INSTANCE_TYPE=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "latest" ]]; then
              echo "latest" > /etc/nvidia/gpu_driver_version_config.txt
              if [[ "${CONFIDENTIAL_INSTANCE_TYPE}" == "TDX" ]]; then
                echo "${CONFIDENTIAL_INSTANCE_TYPE}" > /etc/nvidia/confidential_node_type.txt
                echo "Confidential GPU detected, install the driver with nvidia-smi verification disabled."
                /cos-gpu-installer install --version=latest --skip-nvidia-smi || exit 1
              else
                /cos-gpu-installer install --version=latest || exit 1
              fi
            elif [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              if [[ "${CONFIDENTIAL_INSTANCE_TYPE}" == "TDX" ]]; then
                echo "${CONFIDENTIAL_INSTANCE_TYPE}" > /etc/nvidia/confidential_node_type.txt
                echo "Confidential GPU detected, install the driver with nvidia-smi verification disabled."
                /cos-gpu-installer install --skip-nvidia-smi || exit 1
              else
                /cos-gpu-installer install || exit 1
              fi
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /usr/local/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed."
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          env:
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: NVIDIA_INSTALL_DIR_CONTAINER
            value: /usr/local/nvidia
          - name: VULKAN_ICD_DIR_HOST
            value: /home/kubernetes/bin/nvidia/vulkan/icd.d
          - name: VULKAN_ICD_DIR_CONTAINER
            value: /etc/vulkan/icd.d
          - name: ROOT_MOUNT_DIR
            value: /root
          - name: COS_TOOLS_DIR_HOST
            value: /var/lib/cos-tools
          - name: COS_TOOLS_DIR_CONTAINER
            value: /build/cos-tools
          image: cos-nvidia-installer:fixed
          imagePullPolicy: Never
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /build/cos-tools
            name: cos-tools
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /etc/vulkan/icd.d
            name: vulkan-icd-mount
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.33.3-gke.1@sha256:fc6cbb1eb6a28ed949720db496a23f134e1811111857a6fdfe71afaea9859d13
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        - env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: ROOT_MOUNT_DIR
            value: /root
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-persistenced-installer:1.33.6-gke.0@sha256:59b1c1cc4080342a99ee4fa148a231de15659b14f27098d7ce64dd7f6c8375d6
          imagePullPolicy: IfNotPresent
          name: nvidia-persistenced-installer
          resources: {}
          restartPolicy: Always
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /root
            name: root-mount
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /dev
            name: dev
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gpu-device-plugin-sa
        serviceAccountName: gpu-device-plugin-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /var/lib/cos-tools
            type: DirectoryOrCreate
          name: cos-tools
        - hostPath:
            path: /home/kubernetes/bin/nvidia/vulkan/icd.d
            type: DirectoryOrCreate
          name: vulkan-icd-mount
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:35Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-small-ubuntu
    namespace: kube-system
    resourceVersion: "1756647335393791012"
    uid: 6679ae62-75b0-40e9-9655-8594c081d171
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.33.9-gke.0
          prometheus.io/path: /metrics
          prometheus.io/port: "2112"
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Lt
                  values:
                  - "16"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - ubuntu
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.33.3-gke.1@sha256:0feed1caab41bae52cabeca007e43d3bcf665c3ccb2747b3613d20e32872b238
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 50m
              memory: 50Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250526_2300_RC0@sha256:6b78ee8b2611f17baf86b85d34658a92f8952f3eb1e55028e3cb5b8ff6e94a17
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              elif [[ "${LABEL}" == "cloud.google.com/gke-confidential-nodes-instance-type" ]]; then
                CONFIDENTIAL_INSTANCE_TYPE=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /usr/local/bin/ubuntu-nvidia-install
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /driver/home/kubernetes/bin/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed"
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          image: gke-nvidia-installer:fixed
          imagePullPolicy: IfNotPresent
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /boot
            name: boot
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /driver/home/kubernetes/bin
            name: kubernetes-bin
          - mountPath: /etc/nvidia
            name: nvidia-config
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.33.3-gke.1@sha256:fc6cbb1eb6a28ed949720db496a23f134e1811111857a6fdfe71afaea9859d13
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        - env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: ROOT_MOUNT_DIR
            value: /root
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-persistenced-installer:1.33.6-gke.0@sha256:59b1c1cc4080342a99ee4fa148a231de15659b14f27098d7ce64dd7f6c8375d6
          imagePullPolicy: IfNotPresent
          name: nvidia-persistenced-installer
          resources: {}
          restartPolicy: Always
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /root
            name: root-mount
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /dev
            name: dev
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gpu-device-plugin-sa
        serviceAccountName: gpu-device-plugin-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /boot
            type: Directory
          name: boot
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:36:14Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: gcp-compute-persistent-disk-csi-driver
    name: pdcsi-node
    namespace: kube-system
    resourceVersion: "1756655194055935021"
    uid: 058f30e4-3e55-48a9-929e-8bd9add278d5
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: gcp-compute-persistent-disk-csi-driver
    template:
      metadata:
        annotations:
          components.gke.io/component-name: pdcsi
          components.gke.io/component-version: 0.22.30
        creationTimestamp: null
        labels:
          k8s-app: gcp-compute-persistent-disk-csi-driver
      spec:
        containers:
        - args:
          - --v=5
          - --csi-address=/csi/csi.sock
          - --kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.42@sha256:7394b701866d6f10296dd1652ca6f29ab690ea528d75327076d8a4ca5a9f5ca7
          imagePullPolicy: IfNotPresent
          name: csi-driver-registrar
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=5
          - --endpoint=unix:/csi/csi.sock
          - --run-controller-service=false
          - --run-node-service=true
          - --enable-data-cache=true
          - --node-name=$(KUBE_NODE_NAME)
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver:v1.20.3-gke.0@sha256:d31b6a003254a3f9b01ccea4cd748320d49320feda5f41d5b90165508c05b9c5
          imagePullPolicy: IfNotPresent
          name: gce-pd-driver
          resources:
            limits:
              memory: 450Mi
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet
            mountPropagation: Bidirectional
            name: kubelet-dir
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /dev
            name: device-dir
          - mountPath: /etc/udev
            name: udev-rules-etc
          - mountPath: /lib/udev
            name: udev-rules-lib
          - mountPath: /run/udev
            name: udev-socket
          - mountPath: /sys
            name: sys
          - mountPath: /tmp
            name: tmp
          - mountPath: /lib/modules
            name: modules
            readOnly: true
          - mountPath: /etc/lvm
            name: lvm-dir
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: pdcsi-node-sa
        serviceAccountName: pdcsi-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/pd.csi.storage.gke.io/
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /dev
            type: Directory
          name: device-dir
        - hostPath:
            path: /etc/udev
            type: Directory
          name: udev-rules-etc
        - hostPath:
            path: /lib/udev
            type: Directory
          name: udev-rules-lib
        - hostPath:
            path: /run/udev
            type: Directory
          name: udev-socket
        - hostPath:
            path: /sys
            type: Directory
          name: sys
        - emptyDir:
            sizeLimit: 5Mi
          name: tmp
        - emptyDir:
            sizeLimit: 5Mi
          name: lvm-dir
        - hostPath:
            path: /lib/modules
            type: Directory
          name: modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:36:14Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: gcp-compute-persistent-disk-csi-driver
    name: pdcsi-node-windows
    namespace: kube-system
    resourceVersion: "1756647374620959000"
    uid: 64b7a14a-674a-47ea-be86-bddd9c2663aa
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: gcp-compute-persistent-disk-csi-driver
    template:
      metadata:
        annotations:
          components.gke.io/component-name: pdcsi
          components.gke.io/component-version: 0.22.30
        creationTimestamp: null
        labels:
          k8s-app: gcp-compute-persistent-disk-csi-driver
      spec:
        containers:
        - args:
          - --v=5
          - --csi-address=unix://C:\\csi\\csi.sock
          - --kubelet-registration-path=C:\\var\\lib\\kubelet\\plugins\\pd.csi.storage.gke.io\\csi.sock
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.42@sha256:7394b701866d6f10296dd1652ca6f29ab690ea528d75327076d8a4ca5a9f5ca7
          imagePullPolicy: IfNotPresent
          name: csi-driver-registrar
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 5m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=5
          - --endpoint=unix:/csi/csi.sock
          - --run-controller-service=false
          - --run-node-service=true
          command:
          - /gce-pd-csi-driver
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver:v1.20.3-gke.0@sha256:d31b6a003254a3f9b01ccea4cd748320d49320feda5f41d5b90165508c05b9c5
          imagePullPolicy: IfNotPresent
          name: gce-pd-driver
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: 5m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: C:\var\lib\kubelet
            mountPropagation: None
            name: kubelet-dir
          - mountPath: C:\csi
            name: plugin-dir
          - mountPath: \\.\pipe\csi-proxy-volume-v1
            name: csi-proxy-volume-v1
          - mountPath: \\.\pipe\csi-proxy-filesystem-v1
            name: csi-proxy-filesystem-v1
          - mountPath: \\.\pipe\csi-proxy-disk-v1
            name: csi-proxy-disk-v1
          - mountPath: \\.\pipe\csi-proxy-disk-v1beta2
            name: csi-proxy-disk-pipe
          - mountPath: \\.\pipe\csi-proxy-volume-v1beta1
            name: csi-proxy-volume-pipe
          - mountPath: \\.\pipe\csi-proxy-filesystem-v1beta1
            name: csi-proxy-filesystem-pipe
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: windows
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: pdcsi-node-sa
        serviceAccountName: pdcsi-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: \\.\pipe\csi-proxy-disk-v1
            type: ""
          name: csi-proxy-disk-v1
        - hostPath:
            path: \\.\pipe\csi-proxy-volume-v1
            type: ""
          name: csi-proxy-volume-v1
        - hostPath:
            path: \\.\pipe\csi-proxy-filesystem-v1
            type: ""
          name: csi-proxy-filesystem-v1
        - hostPath:
            path: \\.\pipe\csi-proxy-disk-v1beta2
            type: ""
          name: csi-proxy-disk-pipe
        - hostPath:
            path: \\.\pipe\csi-proxy-volume-v1beta1
            type: ""
          name: csi-proxy-volume-pipe
        - hostPath:
            path: \\.\pipe\csi-proxy-filesystem-v1beta1
            type: ""
          name: csi-proxy-filesystem-pipe
        - hostPath:
            path: \var\lib\kubelet\plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            path: \var\lib\kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: \var\lib\kubelet\plugins\pd.csi.storage.gke.io
            type: DirectoryOrCreate
          name: plugin-dir
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      addonmanager.kubernetes.io/mode: Reconcile
      components.gke.io/layer: addon
      components.gke.io/require-capabilities: all
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:35:38Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: runsc-metric-server
    name: runsc-metric-server
    namespace: kube-system
    resourceVersion: "1756647338575535018"
    uid: 9044a38e-f7ba-49da-a3b4-aa779806bbbf
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: runsc-metric-server
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gvisor
          components.gke.io/component-version: 1.33.0
        creationTimestamp: null
        labels:
          k8s-app: runsc-metric-server
      spec:
        containers:
        - command:
          - /runsc-metric-server
          - --metric-server=127.0.0.1:9115
          - --root=/run/containerd/runsc/k8s.io
          - --alsologtostderr=true
          - metric-server
          - --allow-unknown-root=true
          - --exporter-prefix=
          - --pid-file=/run/containerd/runsc/metric-server.pid
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/static:gke_distroless_20250507.00_p0@sha256:a48200056c9dca43b287eb45a1e66530defd7cba072a812738feef1dba4c0237
          imagePullPolicy: IfNotPresent
          name: runsc-metric-server
          resources:
            limits:
              memory: 64Mi
            requests:
              cpu: 3m
              memory: 12Mi
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /runsc-metric-server
            name: runscbin
          - mountPath: /run/containerd/runsc
            name: containerdrunsc
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        nodeSelector:
          kubernetes.io/os: linux
          sandbox.gke.io/runtime: gvisor
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 0
        tolerations:
        - effect: NoSchedule
          key: sandbox.gke.io/runtime
          operator: Equal
          value: gvisor
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /home/containerd/usr/local/sbin/runsc
            type: File
          name: runscbin
        - hostPath:
            path: /run/containerd/runsc
            type: Directory
          name: containerdrunsc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 100%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-31T13:36:23Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: tpu-device-plugin
    name: tpu-device-plugin
    namespace: kube-system
    resourceVersion: "1756647383444959024"
    uid: a7041a06-8b98-4015-8909-108435c00c05
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: tpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: tpu-device-plugin
          components.gke.io/component-version: 1.33.15-gke.0
          prometheus.io/path: /metrics
          prometheus.io/port: "2112"
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: tpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-tpu-accelerator
                  operator: Exists
                - key: gke-no-default-tpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
        containers:
        - args:
          - --logtostderr
          - --enable-alloc-wait
          - --enable-flock-wait
          command:
          - /usr/bin/tpu-device-plugin
          env:
          - name: CLUSTER_PROJECT
            value: "128459335788"
          - name: CLUSTER_LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: CONTAINER_NAME
            value: tpu-device-plugin
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CLOUD_MONITORING_ENDPOINT
            value: monitoring.googleapis.com:443
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/tpu-device-plugin:1.33.10-gke.0@sha256:a8590ba5d2e918c9624dd8cd395495592d4093337963a4416f837dd2f0975eaa
          imagePullPolicy: IfNotPresent
          name: tpu-device-plugin
          resources:
            limits:
              memory: 80Mi
            requests:
              cpu: 80m
              memory: 80Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /tmp/tpu_logs
            name: tpu-logs
        - args:
          - /bin/sh
          - -c
          - ' tail -n+1 -F /tmp/tpu_logs/tpu_driver.INFO & pid=$!; trap "kill -15
            $pid; wait $pid" SIGTERM; wait $pid; '
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
          imagePullPolicy: IfNotPresent
          name: sidecar-log-collector
          resources:
            limits:
              memory: 20Mi
            requests:
              cpu: 20m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/tpu_logs
            name: tpu-logs
            readOnly: true
        - args:
          - --logtostderr
          - --census_enabled=false
          - --gid=
          - --uid=
          - --chroot=
          command:
          - vbar_control_agent_files/bin/vbar_control_agent
          env:
          - name: TPU_SKIP_MDS_QUERY
            value: "true"
          - name: TPU_ON_GKE
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/vbar_control_agent@sha256:85e12f99572a0052b2beac2b293dd66ad973c36493a1f62130129b4440da8a82
          imagePullPolicy: IfNotPresent
          name: vbar-control-agent
          resources:
            limits:
              memory: 150Mi
            requests:
              cpu: 10m
              memory: 150Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /tpu_network_optimizer.sh
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/tpu_network_optimizer:tpu_network_optimizer_20250625.00_p0@sha256:0404b7f8ce86b25284a844ee4935c8927cd2572c1d6b07d1d2bd944f215fb80d
          imagePullPolicy: IfNotPresent
          name: tpu-network-optimization
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /sys
            name: sys
          - mountPath: /proc
            name: proc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: tpu-device-plugin-sa
        serviceAccountName: tpu-device-plugin-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: DirectoryOrCreate
          name: device-plugin
        - hostPath:
            path: /dev
            type: DirectoryOrCreate
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: DirectoryOrCreate
          name: pod-resources
        - hostPath:
            path: /etc/tpu
            type: DirectoryOrCreate
          name: tpu-env
        - hostPath:
            path: /tmp/tpu_logs
            type: DirectoryOrCreate
          name: tpu-logs
        - hostPath:
            path: /sys
            type: Directory
          name: sys
        - hostPath:
            path: /proc
            type: Directory
          name: proc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "5"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"adk-agents","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"adk-agents"}},"template":{"metadata":{"labels":{"app":"adk-agents"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"8000"},{"name":"GEMINI_API_KEY","valueFrom":{"secretKeyRef":{"key":"api-key","name":"gemini-api-key"}}}],"image":"us-central1-docker.pkg.dev/gke-hackathon-0831-6943/gke-turns-10-repo/adk-agents:20250831-111901","imagePullPolicy":"Always","name":"adk-agents","ports":[{"containerPort":8000}],"resources":{"limits":{"cpu":"1000m","memory":"1Gi"},"requests":{"cpu":"200m","memory":"256Mi"}},"volumeMounts":[{"mountPath":"/etc/secrets","name":"gemini-secret-volume","readOnly":true}]}],"volumes":[{"name":"gemini-secret-volume","secret":{"secretName":"gemini-api-key"}}]}}}}
    creationTimestamp: "2025-08-31T14:08:03Z"
    generation: 6
    name: adk-agents
    namespace: default
    resourceVersion: "1756654304515599007"
    uid: bd974eb0-7ffc-4978-b067-74569856ad4c
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: adk-agents
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: adk-agents
      spec:
        containers:
        - env:
          - name: PORT
            value: "8000"
          - name: GEMINI_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: gemini-api-key
          image: us-central1-docker.pkg.dev/gke-hackathon-0831-6943/gke-turns-10-repo/adk-agents:20250831-111901
          imagePullPolicy: Always
          name: adk-agents
          ports:
          - containerPort: 8000
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/secrets
            name: gemini-secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gemini-secret-volume
          secret:
            defaultMode: 420
            secretName: gemini-api-key
  status:
    conditions:
    - lastTransitionTime: "2025-08-31T14:24:03Z"
      lastUpdateTime: "2025-08-31T14:24:03Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-31T14:24:03Z"
      lastUpdateTime: "2025-08-31T15:19:32Z"
      message: ReplicaSet "adk-agents-698df6c747" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 6
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"adservice"},"name":"adservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"adservice"}},"template":{"metadata":{"labels":{"app":"adservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"9555"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/adservice:v0.10.3","livenessProbe":{"grpc":{"port":9555},"initialDelaySeconds":20,"periodSeconds":15},"name":"server","ports":[{"containerPort":9555}],"readinessProbe":{"grpc":{"port":9555},"initialDelaySeconds":20,"periodSeconds":15},"resources":{"limits":{"cpu":"300m","memory":"300Mi"},"requests":{"cpu":"200m","memory":"180Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"adservice","terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2025-08-31T13:44:59Z"
    generation: 2
    labels:
      app: adservice
    name: adservice
    namespace: default
    resourceVersion: "1756654305376319014"
    uid: 5b450f3e-9892-4617-ac24-bedb14700468
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: adservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: adservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/adservice:v0.10.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: adservice
        serviceAccountName: adservice
        terminationGracePeriodSeconds: 5
  status:
    conditions:
    - lastTransitionTime: "2025-08-31T13:46:56Z"
      lastUpdateTime: "2025-08-31T13:46:56Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-31T13:44:59Z"
      lastUpdateTime: "2025-08-31T13:46:56Z"
      message: ReplicaSet "adservice-54fdcb4646" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"cartservice"},"name":"cartservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"cartservice"}},"template":{"metadata":{"labels":{"app":"cartservice"}},"spec":{"containers":[{"env":[{"name":"REDIS_ADDR","value":"redis-cart:6379"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice:v0.10.3","livenessProbe":{"grpc":{"port":7070},"initialDelaySeconds":15,"periodSeconds":10},"name":"server","ports":[{"containerPort":7070}],"readinessProbe":{"grpc":{"port":7070},"initialDelaySeconds":15},"resources":{"limits":{"cpu":"300m","memory":"128Mi"},"requests":{"cpu":"200m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"cartservice","terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2025-08-31T13:44:55Z"
    generation: 2
    labels:
      app: cartservice
    name: cartservice
    namespace: default
    resourceVersion: "1756654306996047001"
    uid: d8d32d5b-43c0-4cc9-b768-4908c0e7b746
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: cartservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: cartservice
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice:v0.10.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: cartservice
        serviceAccountName: cartservice
        terminationGracePeriodSeconds: 5
  status:
    conditions:
    - lastTransitionTime: "2025-08-31T13:45:33Z"
      lastUpdateTime: "2025-08-31T13:45:33Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-31T13:44:55Z"
      lastUpdateTime: "2025-08-31T13:45:33Z"
      message: ReplicaSet "cartservice-7d76bb9df" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"checkoutservice"},"name":"checkoutservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"checkoutservice"}},"template":{"metadata":{"labels":{"app":"checkoutservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"5050"},{"name":"PRODUCT_CATALOG_SERVICE_ADDR","value":"productcatalogservice:3550"},{"name":"SHIPPING_SERVICE_ADDR","value":"shippingservice:50051"},{"name":"PAYMENT_SERVICE_ADDR","value":"paymentservice:50051"},{"name":"EMAIL_SERVICE_ADDR","value":"emailservice:5000"},{"name":"CURRENCY_SERVICE_ADDR","value":"currencyservice:7000"},{"name":"CART_SERVICE_ADDR","value":"cartservice:7070"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice:v0.10.3","livenessProbe":{"grpc":{"port":5050}},"name":"server","ports":[{"containerPort":5050}],"readinessProbe":{"grpc":{"port":5050}},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"checkoutservice"}}}}
    creationTimestamp: "2025-08-31T13:44:51Z"
    generation: 2
    labels:
      app: checkoutservice
    name: checkoutservice
    namespace: default
    resourceVersion: "1756654309955791024"
    uid: 8c581a71-b4c3-459b-a84d-a6cf3e48ad94
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: checkoutservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: checkoutservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: PAYMENT_SERVICE_ADDR
            value: paymentservice:50051
          - name: EMAIL_SERVICE_ADDR
            value: emailservice:5000
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice:v0.10.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 5050
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: checkoutservice
        serviceAccountName: checkoutservice
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-08-31T13:44:54Z"
      lastUpdateTime: "2025-08-31T13:44:54Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-31T13:44:51Z"
      lastUpdateTime: "2025-08-31T13:44:54Z"
      message: ReplicaSet "checkoutservice-5d9d84cd44" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"currencyservice"},"name":"currencyservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"currencyservice"}},"template":{"metadata":{"labels":{"app":"currencyservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"7000"},{"name":"DISABLE_PROFILER","value":"1"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/currencyservice:v0.10.3","livenessProbe":{"grpc":{"port":7000}},"name":"server","ports":[{"containerPort":7000,"name":"grpc"}],"readinessProbe":{"grpc":{"port":7000}},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"currencyservice","terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2025-08-31T13:44:57Z"
    generation: 2
    labels:
      app: currencyservice
    name: currencyservice
    namespace: default
    resourceVersion: "1756654311143487020"
    uid: b85b2a73-79b1-4f96-8b47-a213c6250506
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: currencyservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: currencyservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "7000"
          - name: DISABLE_PROFILER
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/currencyservice:v0.10.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7000
            name: grpc
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: currencyservice
        serviceAccountName: currencyservice
        terminationGracePeriodSeconds: 5
  status:
    conditions:
    - lastTransitionTime: "2025-08-31T13:46:49Z"
      lastUpdateTime: "2025-08-31T13:46:49Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-31T13:44:57Z"
      lastUpdateTime: "2025-08-31T13:46:49Z"
      message: ReplicaSet "currencyservice-569f6c566d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"emailservice"},"name":"emailservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"emailservice"}},"template":{"metadata":{"labels":{"app":"emailservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"8080"},{"name":"DISABLE_PROFILER","value":"1"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/emailservice:v0.10.3","livenessProbe":{"grpc":{"port":8080},"periodSeconds":5},"name":"server","ports":[{"containerPort":8080}],"readinessProbe":{"grpc":{"port":8080},"periodSeconds":5},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"emailservice","terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2025-08-31T13:44:50Z"
    generation: 2
    labels:
      app: emailservice
    name: emailservice
    namespace: default
    resourceVersion: "1756654312673583013"
    uid: 3a5a3bea-a2a0-4989-a6b3-ab2f8e0421b5
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: emailservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: emailservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_PROFILER
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/emailservice:v0.10.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: emailservice
        serviceAccountName: emailservice
        terminationGracePeriodSeconds: 5
  status:
    conditions:
    - lastTransitionTime: "2025-08-31T13:45:06Z"
      lastUpdateTime: "2025-08-31T13:45:06Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-31T13:44:50Z"
      lastUpdateTime: "2025-08-31T13:45:06Z"
      message: ReplicaSet "emailservice-7d4b8cd7d6" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"frontend"},"name":"frontend","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"frontend"}},"template":{"metadata":{"annotations":{"sidecar.istio.io/rewriteAppHTTPProbers":"true"},"labels":{"app":"frontend"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"8080"},{"name":"PRODUCT_CATALOG_SERVICE_ADDR","value":"productcatalogservice:3550"},{"name":"CURRENCY_SERVICE_ADDR","value":"currencyservice:7000"},{"name":"CART_SERVICE_ADDR","value":"cartservice:7070"},{"name":"RECOMMENDATION_SERVICE_ADDR","value":"recommendationservice:8080"},{"name":"SHIPPING_SERVICE_ADDR","value":"shippingservice:50051"},{"name":"CHECKOUT_SERVICE_ADDR","value":"checkoutservice:5050"},{"name":"AD_SERVICE_ADDR","value":"adservice:9555"},{"name":"SHOPPING_ASSISTANT_SERVICE_ADDR","value":"shoppingassistantservice:80"},{"name":"ENABLE_PROFILER","value":"0"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.3","livenessProbe":{"httpGet":{"httpHeaders":[{"name":"Cookie","value":"shop_session-id=x-liveness-probe"}],"path":"/_healthz","port":8080},"initialDelaySeconds":10},"name":"server","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"httpHeaders":[{"name":"Cookie","value":"shop_session-id=x-readiness-probe"}],"path":"/_healthz","port":8080},"initialDelaySeconds":10},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"frontend"}}}}
    creationTimestamp: "2025-08-31T13:44:52Z"
    generation: 2
    labels:
      app: frontend
    name: frontend
    namespace: default
    resourceVersion: "1756654314222415008"
    uid: d2af1278-f962-437c-8f3f-c6ef66efa864
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: frontend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: frontend
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: RECOMMENDATION_SERVICE_ADDR
            value: recommendationservice:8080
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: CHECKOUT_SERVICE_ADDR
            value: checkoutservice:5050
          - name: AD_SERVICE_ADDR
            value: adservice:9555
          - name: SHOPPING_ASSISTANT_SERVICE_ADDR
            value: shoppingassistantservice:80
          - name: ENABLE_PROFILER
            value: "0"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-liveness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-readiness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: frontend
        serviceAccountName: frontend
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-08-31T13:45:12Z"
      lastUpdateTime: "2025-08-31T13:45:12Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-31T13:44:52Z"
      lastUpdateTime: "2025-08-31T13:45:12Z"
      message: ReplicaSet "frontend-76dbbddfc5" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"loadgenerator"},"name":"loadgenerator","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"loadgenerator"}},"template":{"metadata":{"annotations":{"sidecar.istio.io/rewriteAppHTTPProbers":"true"},"labels":{"app":"loadgenerator"}},"spec":{"containers":[{"env":[{"name":"FRONTEND_ADDR","value":"frontend:80"},{"name":"USERS","value":"10"},{"name":"RATE","value":"1"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/loadgenerator:v0.10.3","name":"main","resources":{"limits":{"cpu":"500m","memory":"512Mi"},"requests":{"cpu":"300m","memory":"256Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}}],"initContainers":[{"command":["/bin/sh","-exc","MAX_RETRIES=12\nRETRY_INTERVAL=10\nfor i in $(seq 1 $MAX_RETRIES); do\n  echo \"Attempt $i: Pinging frontend: ${FRONTEND_ADDR}...\"\n  STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2\u003e\u00261 | awk '/^  HTTP/{print $2}')\n  if [ $STATUSCODE -eq 200 ]; then\n      echo \"Frontend is reachable.\"\n      exit 0\n  fi\n  echo \"Error: Could not reach frontend - Status code: ${STATUSCODE}\"\n  sleep $RETRY_INTERVAL\ndone\necho \"Failed to reach frontend after $MAX_RETRIES attempts.\"\nexit 1\n"],"env":[{"name":"FRONTEND_ADDR","value":"frontend:80"}],"image":"busybox:latest","name":"frontend-check","securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}}],"restartPolicy":"Always","securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"loadgenerator","terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2025-08-31T13:44:56Z"
    generation: 2
    labels:
      app: loadgenerator
    name: loadgenerator
    namespace: default
    resourceVersion: "1756654315808831008"
    uid: 0de67f34-8085-4088-8f01-9ee63d48614e
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: loadgenerator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: loadgenerator
      spec:
        containers:
        - env:
          - name: FRONTEND_ADDR
            value: frontend:80
          - name: USERS
            value: "10"
          - name: RATE
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/loadgenerator:v0.10.3
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/sh
          - -exc
          - |
            MAX_RETRIES=12
            RETRY_INTERVAL=10
            for i in $(seq 1 $MAX_RETRIES); do
              echo "Attempt $i: Pinging frontend: ${FRONTEND_ADDR}..."
              STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
              if [ $STATUSCODE -eq 200 ]; then
                  echo "Frontend is reachable."
                  exit 0
              fi
              echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
              sleep $RETRY_INTERVAL
            done
            echo "Failed to reach frontend after $MAX_RETRIES attempts."
            exit 1
          env:
          - name: FRONTEND_ADDR
            value: frontend:80
          image: busybox:latest
          imagePullPolicy: Always
          name: frontend-check
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: loadgenerator
        serviceAccountName: loadgenerator
        terminationGracePeriodSeconds: 5
  status:
    conditions:
    - lastTransitionTime: "2025-08-31T13:47:15Z"
      lastUpdateTime: "2025-08-31T13:47:15Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-31T13:44:57Z"
      lastUpdateTime: "2025-08-31T13:47:15Z"
      message: ReplicaSet "loadgenerator-56674fd696" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "5"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"mcp-server","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"mcp-server"}},"template":{"metadata":{"labels":{"app":"mcp-server"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"8080"},{"name":"GEMINI_API_KEY","valueFrom":{"secretKeyRef":{"key":"api-key","name":"gemini-api-key"}}}],"image":"us-central1-docker.pkg.dev/gke-hackathon-0831-6943/gke-turns-10-repo/mcp-server:20250831-111835","imagePullPolicy":"Always","name":"mcp-server","ports":[{"containerPort":8080}],"resources":{"limits":{"cpu":"1000m","memory":"1Gi"},"requests":{"cpu":"200m","memory":"256Mi"}},"volumeMounts":[{"mountPath":"/etc/secrets","name":"gemini-secret-volume","readOnly":true}]}],"volumes":[{"name":"gemini-secret-volume","secret":{"secretName":"gemini-api-key"}}]}}}}
    creationTimestamp: "2025-08-31T13:45:44Z"
    generation: 6
    name: mcp-server
    namespace: default
    resourceVersion: "1756654317337407013"
    uid: 165e97bb-1596-4bc2-815d-c8745b424bed
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: mcp-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: mcp-server
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: GEMINI_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: gemini-api-key
          image: us-central1-docker.pkg.dev/gke-hackathon-0831-6943/gke-turns-10-repo/mcp-server:20250831-111835
          imagePullPolicy: Always
          name: mcp-server
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/secrets
            name: gemini-secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gemini-secret-volume
          secret:
            defaultMode: 420
            secretName: gemini-api-key
  status:
    conditions:
    - lastTransitionTime: "2025-08-31T14:21:24Z"
      lastUpdateTime: "2025-08-31T14:21:24Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-31T14:21:24Z"
      lastUpdateTime: "2025-08-31T15:19:03Z"
      message: ReplicaSet "mcp-server-64d55bcdcb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 6
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"paymentservice"},"name":"paymentservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"paymentservice"}},"template":{"metadata":{"labels":{"app":"paymentservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"50051"},{"name":"DISABLE_PROFILER","value":"1"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/paymentservice:v0.10.3","livenessProbe":{"grpc":{"port":50051}},"name":"server","ports":[{"containerPort":50051}],"readinessProbe":{"grpc":{"port":50051}},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"paymentservice","terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2025-08-31T13:44:53Z"
    generation: 2
    labels:
      app: paymentservice
    name: paymentservice
    namespace: default
    resourceVersion: "1756654319602959010"
    uid: 0cbba18a-8b1d-4922-b85f-42f328c2288d
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: paymentservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: paymentservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/paymentservice:v0.10.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: paymentservice
        serviceAccountName: paymentservice
        terminationGracePeriodSeconds: 5
  status:
    conditions:
    - lastTransitionTime: "2025-08-31T13:45:14Z"
      lastUpdateTime: "2025-08-31T13:45:14Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-31T13:44:53Z"
      lastUpdateTime: "2025-08-31T13:45:14Z"
      message: ReplicaSet "paymentservice-9ff6ffd6" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"productcatalogservice"},"name":"productcatalogservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"productcatalogservice"}},"template":{"metadata":{"labels":{"app":"productcatalogservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"3550"},{"name":"DISABLE_PROFILER","value":"1"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice:v0.10.3","livenessProbe":{"grpc":{"port":3550}},"name":"server","ports":[{"containerPort":3550}],"readinessProbe":{"grpc":{"port":3550}},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"productcatalogservice","terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2025-08-31T13:44:54Z"
    generation: 2
    labels:
      app: productcatalogservice
    name: productcatalogservice
    namespace: default
    resourceVersion: "1756654320424927003"
    uid: 69df17e6-a008-47a2-be49-600cbd13560b
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: productcatalogservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: productcatalogservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "3550"
          - name: DISABLE_PROFILER
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice:v0.10.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 3550
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: productcatalogservice
        serviceAccountName: productcatalogservice
        terminationGracePeriodSeconds: 5
  status:
    conditions:
    - lastTransitionTime: "2025-08-31T13:45:01Z"
      lastUpdateTime: "2025-08-31T13:45:01Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-31T13:44:54Z"
      lastUpdateTime: "2025-08-31T13:45:01Z"
      message: ReplicaSet "productcatalogservice-74c67b9d8b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"recommendationservice"},"name":"recommendationservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"recommendationservice"}},"template":{"metadata":{"labels":{"app":"recommendationservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"8080"},{"name":"PRODUCT_CATALOG_SERVICE_ADDR","value":"productcatalogservice:3550"},{"name":"DISABLE_PROFILER","value":"1"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/recommendationservice:v0.10.3","livenessProbe":{"grpc":{"port":8080},"periodSeconds":5},"name":"server","ports":[{"containerPort":8080}],"readinessProbe":{"grpc":{"port":8080},"periodSeconds":5},"resources":{"limits":{"cpu":"200m","memory":"450Mi"},"requests":{"cpu":"100m","memory":"220Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"recommendationservice","terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2025-08-31T13:44:52Z"
    generation: 2
    labels:
      app: recommendationservice
    name: recommendationservice
    namespace: default
    resourceVersion: "1756654321977583010"
    uid: 8b26fd93-525e-40f0-a6ad-486323c1e76f
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: recommendationservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: recommendationservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_PROFILER
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/recommendationservice:v0.10.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: recommendationservice
        serviceAccountName: recommendationservice
        terminationGracePeriodSeconds: 5
  status:
    conditions:
    - lastTransitionTime: "2025-08-31T13:45:07Z"
      lastUpdateTime: "2025-08-31T13:45:07Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-31T13:44:52Z"
      lastUpdateTime: "2025-08-31T13:45:07Z"
      message: ReplicaSet "recommendationservice-5966b9f59d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"redis-cart"},"name":"redis-cart","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"redis-cart"}},"template":{"metadata":{"labels":{"app":"redis-cart"}},"spec":{"containers":[{"image":"redis:alpine","livenessProbe":{"periodSeconds":5,"tcpSocket":{"port":6379}},"name":"redis","ports":[{"containerPort":6379}],"readinessProbe":{"periodSeconds":5,"tcpSocket":{"port":6379}},"resources":{"limits":{"cpu":"125m","memory":"256Mi"},"requests":{"cpu":"70m","memory":"200Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true},"volumeMounts":[{"mountPath":"/data","name":"redis-data"}]}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"volumes":[{"emptyDir":{},"name":"redis-data"}]}}}}
    creationTimestamp: "2025-08-31T13:44:56Z"
    generation: 2
    labels:
      app: redis-cart
    name: redis-cart
    namespace: default
    resourceVersion: "1756654323597983009"
    uid: 0c48502d-dced-4917-bd53-a592f33cab03
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: redis-cart
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: redis-cart
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    conditions:
    - lastTransitionTime: "2025-08-31T13:45:05Z"
      lastUpdateTime: "2025-08-31T13:45:05Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-31T13:44:56Z"
      lastUpdateTime: "2025-08-31T13:45:05Z"
      message: ReplicaSet "redis-cart-c4fc658fb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"shippingservice"},"name":"shippingservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"shippingservice"}},"template":{"metadata":{"labels":{"app":"shippingservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"50051"},{"name":"DISABLE_PROFILER","value":"1"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice:v0.10.3","livenessProbe":{"grpc":{"port":50051}},"name":"server","ports":[{"containerPort":50051}],"readinessProbe":{"grpc":{"port":50051},"periodSeconds":5},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"shippingservice"}}}}
    creationTimestamp: "2025-08-31T13:44:58Z"
    generation: 2
    labels:
      app: shippingservice
    name: shippingservice
    namespace: default
    resourceVersion: "1756654326321951020"
    uid: 66228745-10aa-4441-978b-a95efb3b1a14
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: shippingservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: shippingservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice:v0.10.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: shippingservice
        serviceAccountName: shippingservice
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-08-31T13:46:22Z"
      lastUpdateTime: "2025-08-31T13:46:22Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-31T13:44:58Z"
      lastUpdateTime: "2025-08-31T13:46:22Z"
      message: ReplicaSet "shippingservice-5565748dc4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "5"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"streamlit-ui","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"streamlit-ui"}},"template":{"metadata":{"labels":{"app":"streamlit-ui"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"8501"},{"name":"GEMINI_API_KEY","valueFrom":{"secretKeyRef":{"key":"api-key","name":"gemini-api-key"}}}],"image":"us-central1-docker.pkg.dev/gke-hackathon-0831-6943/gke-turns-10-repo/streamlit-ui:20250831-111930","imagePullPolicy":"Always","name":"streamlit-ui","ports":[{"containerPort":8501}],"resources":{"limits":{"cpu":"1000m","memory":"1Gi"},"requests":{"cpu":"200m","memory":"256Mi"}},"volumeMounts":[{"mountPath":"/etc/secrets","name":"gemini-secret-volume","readOnly":true}]}],"volumes":[{"name":"gemini-secret-volume","secret":{"secretName":"gemini-api-key"}}]}}}}
    creationTimestamp: "2025-08-31T14:13:53Z"
    generation: 6
    name: streamlit-ui
    namespace: default
    resourceVersion: "1756654327972079019"
    uid: 073a0c70-f5f5-4981-bdc8-8ba953a51a85
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: streamlit-ui
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: streamlit-ui
      spec:
        containers:
        - env:
          - name: PORT
            value: "8501"
          - name: GEMINI_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: gemini-api-key
          image: us-central1-docker.pkg.dev/gke-hackathon-0831-6943/gke-turns-10-repo/streamlit-ui:20250831-111930
          imagePullPolicy: Always
          name: streamlit-ui
          ports:
          - containerPort: 8501
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/secrets
            name: gemini-secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gemini-secret-volume
          secret:
            defaultMode: 420
            secretName: gemini-api-key
  status:
    conditions:
    - lastTransitionTime: "2025-08-31T14:20:45Z"
      lastUpdateTime: "2025-08-31T14:20:45Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-31T14:13:53Z"
      lastUpdateTime: "2025-08-31T15:19:56Z"
      message: ReplicaSet "streamlit-ui-75f48b4bfd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 6
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:35:56Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: managed-prometheus-operator
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
    name: gmp-operator
    namespace: gmp-system
    resourceVersion: "1756654424884495018"
    uid: bb7d53e7-ef07-428c-9ba9-55798792ac3f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: gmp-operator
        app.kubernetes.io/part-of: gmp
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.4-gke.1
        creationTimestamp: null
        labels:
          app: managed-prometheus-operator
          app.kubernetes.io/component: operator
          app.kubernetes.io/name: gmp-operator
          app.kubernetes.io/part-of: gmp
          app.kubernetes.io/version: 0.15.4
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --operator-namespace=gmp-system
          - --public-namespace=gmp-public
          - --webhook-addr=:10250
          - --tls-cert-base64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVIekNDQW9lZ0F3SUJBZ0lSQUpkSVJmd0VHZHJnUmZySE9McGRUTk13RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa05XWTRaamcxTnpZdE1XSXlNUzAwTUdNM0xUazRZalV0TURabE5ETm1aV0k0TURFegpNQjRYRFRJMU1EZ3pNVEV6TWprME5Wb1hEVE13TURnek1ERXpNekUwTlZvd05ERXlNREFHQTFVRUF4TXBaMjF3CkxXOXdaWEpoZEc5eUxtZHRjQzF6ZVhOMFpXMHVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXd3dnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREJKcDlGRDNnaXAremZvTG5mTXN5SENCd0ViR1V5ellMRQo1U3RYeVlXK3FGMnVIdGlhTjNaaDFHSWlHQlUxdkh6RnVZeFVnYjJIUlRjOW9yZ3B1Y0dTYnVuSjRzODJld0c0CjZnZVV4clBidTFNbk45SjliVks1TEJKTCt0WjYxQkZHY2t1TDhvaWFvSUwvRGtWZ0JDZ2Zsa2JnOUNFVWU4Mm8KcEgvNnNGcnAxMko1aWsrMXZQSXVaSVNPeGs1M3czR1JVaWxna3QyRDdiMTJ1TmduRjJzTzg3RjAxQ2FYcVJPWgpxVGE1ZUVmaFVkNTB6cjdweDhvMXRmelBvcHhIblNYSFF3eGY4NDFGdDFuOFlBSkhJNUVMV1poWGROKzh6NDBwCnpnb2RCcjgzaitySDllMHZEbDdHQTNSL0VHbG9QMThReFlheXRCQnZ3RndNcEpvMjJPWkZBZ01CQUFHamdiQXcKZ2Ewd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjRApBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGR00rdlRmWm9yZVhKWDFqWW5lRWhPUGRJTm5rCk1FMEdBMVVkRVFSR01FU0NER2R0Y0MxdmNHVnlZWFJ2Y29JWFoyMXdMVzl3WlhKaGRHOXlMbWR0Y0MxemVYTjAKWlcyQ0cyZHRjQzF2Y0dWeVlYUnZjaTVuYlhBdGMzbHpkR1Z0TG5OMll6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBWUVBbkp2SWpCczBpaGFKK0g1Yi9FUkhwU21USXBLR1lyVUNVRVpwN09ZSk9wNFVLQlhzMVo2NDZ4ZmliRnJzCmE0aVRJM2Y2OGRTQ3BMK3JmMmE0QlEzYzV5eUhYZ0Q2WjdRdTdkMklIMHVaa0kyK1B5Rm1WKzBGMk0zYXZxL1AKNTBQZC9ZMDlTOWdXZE45TVBRY2dDaWNoTlpoOUhCajV4MHhuNzVySjZVNG5VenlTSFJiUHhvNWYwNEZHblI0eApDWnBvd0NEMkRhUS9NU3JLclJPWEVPQVZwNW1WMkhJd1pONFNjQzg5TmVrTGZLTU45OSs5ZElyOXVWd0FURlRmCmZ4VFIrc0FML3NKT0pNVlRITGJYT3ZkOWx5QXh2bk5HcXkyb3pYRUdTNjZkZkN0M1J6SGViYVlDUFRFSis0ZmkKbHZOQmlqTG5qdUpDQWZLNzlhYjhxd3d2QUlTd1ZrUXZwaHFkZjFwOEllOHVldjdJT2hNeU5XaGluMnZXTStubwpkN1FrU1hlVTZjMlpNVC9WcnU1enZwbmZJeDBuQ0ZBNEd1KzF1RDFYRHo4NjkyQmxMaERsYlRuZjk5Z3lVQ0UrCk5GWVQzSGNDVEMyNmlBOVBLUFdqdkdYa1FqbEZyaC9NcDN4WGRER3Y5MW0rOXlNdHVWMU9sYkFoSU1KQm9TSnEKTzlGMgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          - --tls-key-base64=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd1NhZlJROTRJcWZzMzZDNTN6TE1od2djQkd4bE1zMkN4T1VyVjhtRnZxaGRyaDdZCm1qZDJZZFJpSWhnVk5ieDh4Ym1NVklHOWgwVTNQYUs0S2JuQmttN3B5ZUxQTm5zQnVPb0hsTWF6Mjd0VEp6ZlMKZlcxU3VTd1NTL3JXZXRRUlJuSkxpL0tJbXFDQy93NUZZQVFvSDVaRzRQUWhGSHZOcUtSLytyQmE2ZGRpZVlwUAp0Ynp5TG1TRWpzWk9kOE54a1ZJcFlKTGRnKzI5ZHJqWUp4ZHJEdk94ZE5RbWw2a1RtYWsydVhoSDRWSGVkTTYrCjZjZktOYlg4ejZLY1I1MGx4ME1NWC9PTlJiZFovR0FDUnlPUkMxbVlWM1Rmdk0rTktjNEtIUWEvTjQvcXgvWHQKTHc1ZXhnTjBmeEJwYUQ5ZkVNV0dzclFRYjhCY0RLU2FOdGptUlFJREFRQUJBb0lCQUFTdUh1WFpmaHU0M2ZCOQpRSU84QTJDeVBadU4xTlhxVE9UZ2VMQmozYTNFL3FBZGR6b2xaZVR3OUgvRy9aeVR1S0pCNExpYmZEQXU2U3ZCCktaMDVOd3VKVEhqcjJnR0Q4WUs5aVBsOTV4WEg4RGZmRG1ham80R0JJK0JiYjU4Q1RIamNoQ0FiL0Z0aTBFbkYKMnNCODJVd0twQ1VIUlZYdHVnb0FFbW5NcENkT1dmaDFBZEZiVG95aWx1VlhXck50SWNqc2pPVzZOb1pYWGlXNgpjZ2JBRUVzWkdTaTNaRExySEZ3NW4rUEU5SmEyYjBaQ3RvTnJIcDJkbHdHMXYwV2JuUlNHenNhZjZrZEhwN2dVCklmQVh2UnZlWmZvNFlhYkY0R2IyTXdGN1lEcFFZSE4yZTR1QlR4NWkzUWZyVWFCRyt2MFBRRSs4T1RHYjJCckgKMHpCQ3NRRUNnWUVBNVZhenVWMXN3Y2kzYWlSS2dJNlFISVZKbU1XRUF0c1F0QnpCdU0rVmpiU2FWb0VzRHBUaAo3TGFyV3d5cXBpcE1pSzRGYUw5QUhteE91NmRkNSthRnBpL1NZM2E1bmxqS3A3eFZFMThpTThvKzBuRWMvREJFCk9sbUdweDVPWHFLYnVZV2U4WkhaMzZ1MUhORmxCTFZ0UExNc2FuMzdwQTYwc1dZY1d1L3RGWFVDZ1lFQTE1cngKVGI0RUhRKzZ1R2w1M1BCU0ZzK3Y3YjFndFN0MXlMRHNNeU9WWFNwb0pTTkpKOEpuMVJsN2xTbkQ1c1FUTTN6MAphblVSVm96QmJtaWhaeHBXNTJNNTlnOTdqNTZXY3hsZ1h4SkxVNlVpTnFWNnV3K0ZweWJwa1htQUFEcVVUNWVoClRJc0RFT0tIMDY3bkhTL1NRS3FlREQrWXJUWlJyWE9aL0RORjQ1RUNnWUVBdWdYODNDT2F2d2ozTllKZ2FDeTcKV2xjSEhvTkFGQ3pyUEoyQ3lVeWdDNFJ1R0RMSXNMODFEcFFSSkZaKzZTK3dTc0dWSTZUVjlwZDF1YU1GZWNBegpzbHhoOUVudVFESFhsLzBjcVF6bXFrbW5jWDFNdkliT0lPSlRaYVVnZm9TNWVkK1gwR3kwNUVmY0xaYnZzTVVVCjZVS1FpWVROSkFMRnNJdVovbTFVeXEwQ2dZQXpFankra1pnZjJpMzhxTjk0K21RM2l4SzlXZktpZDV6NjRRM1MKUDBlT1BoRlZXcnBsZEtOcjB4RjNEK0didEM1b0w5MGxxbjFrNXdxYXdLWWE2aDVUeVNsZG8rVTg2Ky92YTc5cwpSY1VhRnkrM2loTThaRHpnajFNY1pvOXZmbkRMT2J1M2llWThCYXp1ODZ0RE9xU3ZOTHNqWTUwaXlvOG1hdys2CnNkcUlRUUtCZ1FDdkxnSnJoaWd4QnZLc0Q0clpNWUJiOTlmOWM5NUNiTnljY3J0c1hDaVpDNEdmSC9keU9XenYKV0NsaEtwL0hFQ2FOZjBtVU0vemxzMFpKa0JmeWgwUkgrTWhYTHl3VTU5bHJUQlFhc2NIK085ellQK25RRkR5UgpmaHV0S2pkZE1aR3FQVFhEOThTdEpPYVpTYThscU4rWThRV2NsVUNMVEpwbmNaM0F2L29nVGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
          - --project-id=gke-hackathon-0831-6943
          - --location=us-central1-a
          - --cluster=gke-turns-10-hackathon
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator:v0.15.4-gke.0@sha256:6208d08a2ee884e7d72669b32f2eb9c24386bfb050e3035b5ef16663fd5e4d1d
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: operator
          ports:
          - containerPort: 10250
            name: web
            protocol: TCP
          - containerPort: 18080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2G
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/tls/private
            name: certs
        dnsPolicy: ClusterFirst
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: operator
        serviceAccountName: operator
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: certs
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-08-31T13:35:56Z"
      lastUpdateTime: "2025-08-31T13:43:23Z"
      message: ReplicaSet "gmp-operator-769978865b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-08-31T15:33:44Z"
      lastUpdateTime: "2025-08-31T15:33:44Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:35:57Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: rule-evaluator
    namespace: gmp-system
    resourceVersion: "1756647802945135001"
    uid: f95bb17b-4671-4983-9b49-861653e90978
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: rule-evaluator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.4-gke.1
        creationTimestamp: null
        labels:
          app: managed-prometheus-rule-evaluator
          app.kubernetes.io/name: rule-evaluator
          app.kubernetes.io/version: 0.15.4
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --config-file=/prometheus/config/config.yaml
          - --config-file-output=/prometheus/config_out/config.yaml
          - --config-dir=/etc/rules
          - --config-dir-output=/prometheus/rules_out
          - --watched-dir=/etc/secrets
          - --reload-url=http://127.0.0.1:19092/-/reload
          - --ready-url=http://127.0.0.1:19092/-/ready
          - --listen-address=:19093
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.4-gke.0@sha256:d829f291c33fd8eb83073047903ffcc1afa4fce7dea146ad6ed1f409f788d298
          imagePullPolicy: IfNotPresent
          name: config-reloader
          ports:
          - containerPort: 19093
            name: cfg-rel-metrics
            protocol: TCP
          resources:
            limits:
              memory: 32M
            requests:
              cpu: 1m
              memory: 4M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config
            name: config
            readOnly: true
          - mountPath: /prometheus/config_out
            name: config-out
          - mountPath: /etc/rules
            name: rules
            readOnly: true
          - mountPath: /prometheus/rules_out
            name: rules-out
          - mountPath: /etc/secrets
            name: rules-secret
            readOnly: true
        - args:
          - --config.file=/prometheus/config_out/config.yaml
          - --web.listen-address=:19092
          - --export.user-agent-mode=gke
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/rule-evaluator:v0.15.4-gke.0@sha256:3fd60d642225e3f431ff038583a1ef96c98fc48c425024466d9970f9086052fc
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 19092
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: evaluator
          ports:
          - containerPort: 19092
            name: r-eval-metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 19092
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 1G
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config_out
            name: config-out
            readOnly: true
          - mountPath: /etc/rules
            name: rules-out
            readOnly: true
          - mountPath: /etc/secrets
            name: rules-secret
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/bash
          - -c
          - touch /prometheus/config_out/config.yaml
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
          imagePullPolicy: IfNotPresent
          name: config-init
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config_out
            name: config-out
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: collector
        serviceAccountName: collector
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: rule-evaluator
          name: config
        - emptyDir: {}
          name: config-out
        - configMap:
            defaultMode: 420
            name: rules-generated
          name: rules
        - emptyDir: {}
          name: rules-out
        - name: rules-secret
          secret:
            defaultMode: 420
            secretName: rules
  status:
    conditions:
    - lastTransitionTime: "2025-08-31T13:43:22Z"
      lastUpdateTime: "2025-08-31T13:43:22Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-31T13:35:57Z"
      lastUpdateTime: "2025-08-31T13:43:22Z"
      message: ReplicaSet "rule-evaluator-6959c996ff" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:35:14Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: event-exporter
      kubernetes.io/cluster-service: "true"
      version: v0.4.0
    name: event-exporter-gke
    namespace: kube-system
    resourceVersion: "1756654443847727018"
    uid: 8796796a-bb27-4752-99f5-5c8a734b5338
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: event-exporter
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: event-exporter
          components.gke.io/component-version: 1.33.6-gke.0
        creationTimestamp: null
        labels:
          k8s-app: event-exporter
          version: v0.4.0
      spec:
        containers:
        - command:
          - /event-exporter
          - -sink-opts=-stackdriver-resource-model=new -endpoint=https://logging.googleapis.com
          - -prometheus-endpoint=:8080
          - -enable-pod-owner-label=true
          - -system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/event-exporter:v0.5.2-gke.1@sha256:f0f730bfa9f3a396374100063d5770be28c1283d0a5a100886bd36ac7b6ef474
          imagePullPolicy: IfNotPresent
          name: event-exporter
          resources:
            requests:
              cpu: 3m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /monitor
          - --api-override=https://monitoring.googleapis.com/
          - --source=event_exporter:http://localhost:8080?metricsPrefix=container.googleapis.com/internal/addons&whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
          - --source=event_exporter:http://localhost:8080?metricsPrefix=kubernetes.io/internal/addons&customResourceType=k8s_container&customLabels[project_id]&customLabels[location]&customLabels[cluster_name]&customLabels[namespace_name]=kube-system&customLabels[pod_name]=event-exporter-$NODE_NAME&customLabels[container_name]=event-exporter&whitelisted=stackdriver_sink_records_latency_seconds,podlabel_cache_ops_count,podlabel_get_count,podlabel_nolabel_pod_cache_ops_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          - --node-name=$(NODE_NAME)
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-to-sd:v0.12.1-gke.24@sha256:4e76d5f407e7a072f1f26dd1d8b019950d1c7632ed96fdd19315f664413c9b82
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: event-exporter-sa
        serviceAccountName: event-exporter-sa
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/ssl/certs
            type: Directory
          name: ssl-certs
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-08-31T13:35:14Z"
      lastUpdateTime: "2025-08-31T13:43:37Z"
      message: ReplicaSet "event-exporter-gke-746f74dd4c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-08-31T15:34:03Z"
      lastUpdateTime: "2025-08-31T15:34:03Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      credential-normal-mode: "true"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:35:40Z"
    generation: 7
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: konnectivity-agent
    name: konnectivity-agent
    namespace: kube-system
    resourceVersion: "1756655162100815024"
    uid: 1d897f3e-6d1a-4b8a-b6e1-affb2976b311
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: konnectivity-agent
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: konnectivitynetworkproxy-combined
          components.gke.io/component-version: 1.15.5
        creationTimestamp: null
        labels:
          k8s-app: konnectivity-agent
      spec:
        containers:
        - args:
          - --logtostderr=true
          - --ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - --proxy-server-host=10.128.0.2
          - --proxy-server-port=8132
          - --health-server-port=8093
          - --admin-server-port=8094
          - --sync-interval=5s
          - --sync-interval-cap=30s
          - --sync-forever=true
          - --probe-interval=5s
          - --keepalive-time=60s
          - --service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token
          - --enable-profiling
          - --count-server-leases
          - --server-count-source=max
          - --v=3
          command:
          - /proxy-agent
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent:v0.31.3-gke.1@sha256:aa89e06b001dd7ef9e9082de3da7ef4b7995c6c857e905d3810eb9901664158f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8093
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: konnectivity-agent
          resources:
            limits:
              memory: 125Mi
            requests:
              cpu: 10m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/secrets/tokens
            name: konnectivity-agent-token
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/konnectivity-agent-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: konnectivity-agent-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
          imagePullPolicy: IfNotPresent
          name: konnectivity-agent-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: konnectivity-agent-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: konnectivity-agent
        serviceAccountName: konnectivity-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: sandbox.gke.io/runtime
          operator: Equal
          value: gvisor
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: konnectivity-agent
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              k8s-app: konnectivity-agent
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - name: konnectivity-agent-token
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: system:konnectivity-server
                expirationSeconds: 3600
                path: konnectivity-agent-token
        - configMap:
            defaultMode: 420
            items:
            - key: konnectivity-agent-metrics-collector-config-data
              path: konnectivity-agent-metrics-collector-config-data.textproto
            name: konnectivity-agent-metrics-collector-config-map
          name: konnectivity-agent-metrics-collector-config-map-vol
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-08-31T13:35:40Z"
      lastUpdateTime: "2025-08-31T13:43:35Z"
      message: ReplicaSet "konnectivity-agent-67d7687977" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-08-31T15:34:03Z"
      lastUpdateTime: "2025-08-31T15:34:03Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 7
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:35:43Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: konnectivity-agent-autoscaler
      kubernetes.io/cluster-service: "true"
    name: konnectivity-agent-autoscaler
    namespace: kube-system
    resourceVersion: "1756654422413375004"
    uid: 0c48c2f1-23c4-4c5f-9a26-5a3e11c93089
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: konnectivity-agent-autoscaler
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: konnectivitynetworkproxy-combined
          components.gke.io/component-version: 1.15.5
        creationTimestamp: null
        labels:
          k8s-app: konnectivity-agent-autoscaler
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=konnectivity-agent-autoscaler-config
          - --target=deployment/konnectivity-agent
          - --logtostderr=true
          - --v=2
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.9.1-gke.12@sha256:7a77e5a8e643a7211f9f93727e2a58cee0b4c90f9571c390add18fbc87eb530e
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 10m
              memory: 10M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: konnectivity-agent-cpha
        serviceAccountName: konnectivity-agent-cpha
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-08-31T13:35:43Z"
      lastUpdateTime: "2025-08-31T13:43:20Z"
      message: ReplicaSet "konnectivity-agent-autoscaler-77dfdd8f5b" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-08-31T15:33:42Z"
      lastUpdateTime: "2025-08-31T15:33:42Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:34:58Z"
    generation: 3
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
    name: kube-dns
    namespace: kube-system
    resourceVersion: "1756655160516911022"
    uid: 70c53201-e668-4835-9a3e-b2974201f4a8
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 10%
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: kubedns
          components.gke.io/component-version: 33.2.3
          prometheus.io/port: "10054"
          prometheus.io/scrape: "true"
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --domain=cluster.local.
          - --dns-port=10053
          - --config-dir=/kube-dns-config
          - --v=2
          env:
          - name: PROMETHEUS_PORT
            value: "10055"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns:1.26.4-gke.1@sha256:eaac37b53169bc558d2d2bf21cf0e07554efd5f05816291839e1701746679465
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/kubedns
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kubedns
          ports:
          - containerPort: 10053
            name: dns-local
            protocol: UDP
          - containerPort: 10053
            name: dns-tcp-local
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 210Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /kube-dns-config
            name: kube-dns-config
        - args:
          - -v=2
          - -logtostderr
          - -configDir=/etc/k8s/dns/dnsmasq-nanny
          - -restartDnsmasq=true
          - --
          - -k
          - --cache-size=1000
          - --no-negcache
          - --dns-forward-max=1500
          - --log-facility=-
          - --server=/cluster.local/127.0.0.1#10053
          - --server=/in-addr.arpa/127.0.0.1#10053
          - --server=/ip6.arpa/127.0.0.1#10053
          - --max-ttl=30
          - --max-cache-ttl=30
          - --max-tcp-connections=200
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny:1.26.4-gke.1@sha256:96384c974ede71f9b6e04428ef4e7e404c27399e665b6efaf99fe4f649e42dfb
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/dnsmasq
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: dnsmasq
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          resources:
            requests:
              cpu: 150m
              memory: 20Mi
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              - SETGID
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/k8s/dns/dnsmasq-nanny
            name: kube-dns-config
        - args:
          - --v=2
          - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV
          - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar:1.26.4-gke.1@sha256:94e9c72300d31fc1745a34e1e8a2dbef6b0cc32512552034de177b320d0390a4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: sidecar
          ports:
          - containerPort: 10054
            name: metrics
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubedns-metrics-collector-config-data.textproto,/conf/sidecar-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: kubedns-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250708_2300_RC0@sha256:ec164c7e60389f0cdb257acc313034f20335ab67be10b0d3b55a30094e678389
          imagePullPolicy: IfNotPresent
          name: kubedns-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 45Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: kubedns-metrics-collector-config-map-vol
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: kube-dns
        serviceAccountName: kube-dns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-dns
            optional: true
          name: kube-dns-config
        - configMap:
            defaultMode: 420
            items:
            - key: kubedns-metrics-collector-config-data
              path: kubedns-metrics-collector-config-data.textproto
            - key: sidecar-metrics-collector-config-data
              path: sidecar-metrics-collector-config-data.textproto
            name: kubedns-metrics-collector-config-map
          name: kubedns-metrics-collector-config-map-vol
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-08-31T13:34:58Z"
      lastUpdateTime: "2025-08-31T13:43:46Z"
      message: ReplicaSet "kube-dns-8574985644" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-08-31T15:34:08Z"
      lastUpdateTime: "2025-08-31T15:34:08Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:35:45Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns-autoscaler
      kubernetes.io/cluster-service: "true"
    name: kube-dns-autoscaler
    namespace: kube-system
    resourceVersion: "1756654420412447023"
    uid: 9c9c4567-79e3-4d9f-9ecd-6f337dbc7557
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns-autoscaler
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: kubedns
          components.gke.io/component-version: 33.2.3
        creationTimestamp: null
        labels:
          k8s-app: kube-dns-autoscaler
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=kube-dns-autoscaler
          - --target=Deployment/kube-dns
          - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true,"includeUnschedulableNodes":true}}
          - --logtostderr=true
          - --v=2
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.10.2-gke.9@sha256:846387ce49a668562e359340dd8f40b4e6e3d3439bbc77ffe1a1599ecfe8f22a
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 20m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: kube-dns-autoscaler
        serviceAccountName: kube-dns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-08-31T13:35:45Z"
      lastUpdateTime: "2025-08-31T13:43:19Z"
      message: ReplicaSet "kube-dns-autoscaler-84dc5fd76f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-08-31T15:33:40Z"
      lastUpdateTime: "2025-08-31T15:33:40Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:35:48Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: glbc
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: GLBC
    name: l7-default-backend
    namespace: kube-system
    resourceVersion: "1756654415323215021"
    uid: 05bfcd6a-ab98-42f6-983c-6b35fedb783e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: glbc
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: l7-lb-controller-combined
          components.gke.io/component-version: 1.36.2-gke.1
        creationTimestamp: null
        labels:
          k8s-app: glbc
          name: glbc
      spec:
        automountServiceAccountToken: false
        containers:
        - image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/ingress-gce-404-server-with-metrics:v1.36.2@sha256:2e2ff60c96f67592b6fa403ec192ad9e4064ec9a9589e2774e6f78eeb1804497
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: default-http-backend
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-08-31T13:35:48Z"
      lastUpdateTime: "2025-08-31T13:43:19Z"
      message: ReplicaSet "l7-default-backend-557469886d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-08-31T15:33:35Z"
      lastUpdateTime: "2025-08-31T15:33:35Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-08-31T13:36:02Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: metrics-server
      version: v1.33.0
    name: metrics-server-v1.33.0
    namespace: kube-system
    resourceVersion: "1756654495730719002"
    uid: fc5fde49-852e-4fc5-aa14-36d16017da50
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: metrics-server
        version: v1.33.0
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: metrics-server
          components.gke.io/component-version: 1.33.0-gke.1
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          version: v1.33.0
        name: metrics-server
      spec:
        containers:
        - command:
          - /metrics-server
          - --metric-resolution=30s
          - --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP
          - --cert-dir=/tmp
          - --secure-port=10250
          - --kubelet-allow-working-set-bytes-zero=false
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/metrics-server:v0.7.1-gke.42@sha256:69a21e428966f9369b5594aa07a2beceb046269d3c7c5b0a0e66ea757dc3c662
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 43m
              memory: 55Mi
            requests:
              cpu: 43m
              memory: 55Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        volumes:
        - configMap:
            defaultMode: 420
            name: metrics-server-config
          name: metrics-server-config-volume
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-08-31T13:36:02Z"
      lastUpdateTime: "2025-08-31T13:44:33Z"
      message: ReplicaSet "metrics-server-v1.33.0-7896ccd9f5" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-08-31T15:34:55Z"
      lastUpdateTime: "2025-08-31T15:34:55Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2025-08-31T14:58:17Z"
    generation: 2
    labels:
      app: adk-agents
      pod-template-hash: 57fcfcccb
    name: adk-agents-57fcfcccb
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adk-agents
      uid: bd974eb0-7ffc-4978-b067-74569856ad4c
    resourceVersion: "1756652786598479015"
    uid: ccc8ad5b-4aaa-4a99-ba92-aa886ea4f415
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: adk-agents
        pod-template-hash: 57fcfcccb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: adk-agents
          pod-template-hash: 57fcfcccb
      spec:
        containers:
        - env:
          - name: PORT
            value: "8000"
          - name: GEMINI_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: gemini-api-key
          image: us-central1-docker.pkg.dev/gke-hackathon-0831-6943/gke-turns-10-repo/adk-agents:20250831-105758
          imagePullPolicy: Always
          name: adk-agents
          ports:
          - containerPort: 8000
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/secrets
            name: gemini-secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gemini-secret-volume
          secret:
            defaultMode: 420
            secretName: gemini-api-key
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2025-08-31T15:06:23Z"
    generation: 2
    labels:
      app: adk-agents
      pod-template-hash: 5bccd64b55
    name: adk-agents-5bccd64b55
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adk-agents
      uid: bd974eb0-7ffc-4978-b067-74569856ad4c
    resourceVersion: "1756653572170895012"
    uid: 931adca5-3c70-40ce-8375-5ec6c09257c2
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: adk-agents
        pod-template-hash: 5bccd64b55
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: adk-agents
          pod-template-hash: 5bccd64b55
      spec:
        containers:
        - env:
          - name: PORT
            value: "8000"
          - name: GEMINI_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: gemini-api-key
          image: us-central1-docker.pkg.dev/gke-hackathon-0831-6943/gke-turns-10-repo/adk-agents:20250831-110559
          imagePullPolicy: Always
          name: adk-agents
          ports:
          - containerPort: 8000
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/secrets
            name: gemini-secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gemini-secret-volume
          secret:
            defaultMode: 420
            secretName: gemini-api-key
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-08-31T14:44:47Z"
    generation: 2
    labels:
      app: adk-agents
      pod-template-hash: 5f9fd99768
    name: adk-agents-5f9fd99768
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adk-agents
      uid: bd974eb0-7ffc-4978-b067-74569856ad4c
    resourceVersion: "1756652299975007018"
    uid: 059b7502-d097-4793-95c9-cd34a7abb5d3
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: adk-agents
        pod-template-hash: 5f9fd99768
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: adk-agents
          pod-template-hash: 5f9fd99768
      spec:
        containers:
        - env:
          - name: PORT
            value: "8000"
          - name: GEMINI_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: gemini-api-key
          image: us-central1-docker.pkg.dev/gke-hackathon-0831-6943/gke-turns-10-repo/adk-agents:20250831-104432
          imagePullPolicy: Always
          name: adk-agents
          ports:
          - containerPort: 8000
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/secrets
            name: gemini-secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gemini-secret-volume
          secret:
            defaultMode: 420
            secretName: gemini-api-key
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2025-08-31T15:19:29Z"
    generation: 2
    labels:
      app: adk-agents
      pod-template-hash: 698df6c747
    name: adk-agents-698df6c747
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adk-agents
      uid: bd974eb0-7ffc-4978-b067-74569856ad4c
    resourceVersion: "1756654304324767006"
    uid: d1550933-c55d-464d-8824-53a559c93716
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: adk-agents
        pod-template-hash: 698df6c747
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: adk-agents
          pod-template-hash: 698df6c747
      spec:
        containers:
        - env:
          - name: PORT
            value: "8000"
          - name: GEMINI_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: gemini-api-key
          image: us-central1-docker.pkg.dev/gke-hackathon-0831-6943/gke-turns-10-repo/adk-agents:20250831-111901
          imagePullPolicy: Always
          name: adk-agents
          ports:
          - containerPort: 8000
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/secrets
            name: gemini-secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gemini-secret-volume
          secret:
            defaultMode: 420
            secretName: gemini-api-key
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T14:08:03Z"
    generation: 2
    labels:
      app: adk-agents
      pod-template-hash: 789697d667
    name: adk-agents-789697d667
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adk-agents
      uid: bd974eb0-7ffc-4978-b067-74569856ad4c
    resourceVersion: "1756651490280399009"
    uid: e657bbfd-a124-4f5c-8a51-a452bef3367e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: adk-agents
        pod-template-hash: 789697d667
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: adk-agents
          pod-template-hash: 789697d667
      spec:
        containers:
        - env:
          - name: PORT
            value: "8000"
          - name: GEMINI_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: gemini-api-key
          image: us-central1-docker.pkg.dev/gke-hackathon-0831-6943/gke-turns-10-repo/adk-agents:20250831-095249
          imagePullPolicy: Always
          name: adk-agents
          ports:
          - containerPort: 8000
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/secrets
            name: gemini-secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gemini-secret-volume
          secret:
            defaultMode: 420
            secretName: gemini-api-key
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:44:59Z"
    generation: 2
    labels:
      app: adservice
      pod-template-hash: 54fdcb4646
    name: adservice-54fdcb4646
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adservice
      uid: 5b450f3e-9892-4617-ac24-bedb14700468
    resourceVersion: "1756654305339887021"
    uid: c3982f7c-d5c3-4b3e-b731-96ae39544644
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: adservice
        pod-template-hash: 54fdcb4646
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: adservice
          pod-template-hash: 54fdcb4646
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/adservice:v0.10.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: adservice
        serviceAccountName: adservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:44:55Z"
    generation: 2
    labels:
      app: cartservice
      pod-template-hash: 7d76bb9df
    name: cartservice-7d76bb9df
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cartservice
      uid: d8d32d5b-43c0-4cc9-b768-4908c0e7b746
    resourceVersion: "1756654306964015001"
    uid: 1d941e3d-9d17-480c-abc9-9386dc33cc10
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: cartservice
        pod-template-hash: 7d76bb9df
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: cartservice
          pod-template-hash: 7d76bb9df
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice:v0.10.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: cartservice
        serviceAccountName: cartservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:44:51Z"
    generation: 2
    labels:
      app: checkoutservice
      pod-template-hash: 5d9d84cd44
    name: checkoutservice-5d9d84cd44
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: checkoutservice
      uid: 8c581a71-b4c3-459b-a84d-a6cf3e48ad94
    resourceVersion: "1756654309922767004"
    uid: 01d07e99-90ee-4998-a187-489171ce9f5f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: checkoutservice
        pod-template-hash: 5d9d84cd44
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: checkoutservice
          pod-template-hash: 5d9d84cd44
      spec:
        containers:
        - env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: PAYMENT_SERVICE_ADDR
            value: paymentservice:50051
          - name: EMAIL_SERVICE_ADDR
            value: emailservice:5000
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice:v0.10.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 5050
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: checkoutservice
        serviceAccountName: checkoutservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:44:57Z"
    generation: 2
    labels:
      app: currencyservice
      pod-template-hash: 569f6c566d
    name: currencyservice-569f6c566d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: currencyservice
      uid: b85b2a73-79b1-4f96-8b47-a213c6250506
    resourceVersion: "1756654311109663003"
    uid: 95ab026c-e511-4b87-9e26-23cde53b6e04
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: currencyservice
        pod-template-hash: 569f6c566d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: currencyservice
          pod-template-hash: 569f6c566d
      spec:
        containers:
        - env:
          - name: PORT
            value: "7000"
          - name: DISABLE_PROFILER
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/currencyservice:v0.10.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7000
            name: grpc
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: currencyservice
        serviceAccountName: currencyservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:44:50Z"
    generation: 2
    labels:
      app: emailservice
      pod-template-hash: 7d4b8cd7d6
    name: emailservice-7d4b8cd7d6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: emailservice
      uid: 3a5a3bea-a2a0-4989-a6b3-ab2f8e0421b5
    resourceVersion: "1756654312641311004"
    uid: d55b77b7-b9e0-4418-94b8-326fd4ef2e21
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: emailservice
        pod-template-hash: 7d4b8cd7d6
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: emailservice
          pod-template-hash: 7d4b8cd7d6
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_PROFILER
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/emailservice:v0.10.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: emailservice
        serviceAccountName: emailservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:44:52Z"
    generation: 2
    labels:
      app: frontend
      pod-template-hash: 76dbbddfc5
    name: frontend-76dbbddfc5
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
      uid: d2af1278-f962-437c-8f3f-c6ef66efa864
    resourceVersion: "1756654314174959013"
    uid: 8b3cf9ee-cf5f-4274-8d22-cab9863284b9
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: frontend
        pod-template-hash: 76dbbddfc5
    template:
      metadata:
        annotations:
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: frontend
          pod-template-hash: 76dbbddfc5
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: RECOMMENDATION_SERVICE_ADDR
            value: recommendationservice:8080
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: CHECKOUT_SERVICE_ADDR
            value: checkoutservice:5050
          - name: AD_SERVICE_ADDR
            value: adservice:9555
          - name: SHOPPING_ASSISTANT_SERVICE_ADDR
            value: shoppingassistantservice:80
          - name: ENABLE_PROFILER
            value: "0"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-liveness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-readiness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: frontend
        serviceAccountName: frontend
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:44:57Z"
    generation: 2
    labels:
      app: loadgenerator
      pod-template-hash: 56674fd696
    name: loadgenerator-56674fd696
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: loadgenerator
      uid: 0de67f34-8085-4088-8f01-9ee63d48614e
    resourceVersion: "1756654315725135005"
    uid: 4181e02f-f09f-4dff-b571-5efcae9efb20
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: loadgenerator
        pod-template-hash: 56674fd696
    template:
      metadata:
        annotations:
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: loadgenerator
          pod-template-hash: 56674fd696
      spec:
        containers:
        - env:
          - name: FRONTEND_ADDR
            value: frontend:80
          - name: USERS
            value: "10"
          - name: RATE
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/loadgenerator:v0.10.3
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/sh
          - -exc
          - |
            MAX_RETRIES=12
            RETRY_INTERVAL=10
            for i in $(seq 1 $MAX_RETRIES); do
              echo "Attempt $i: Pinging frontend: ${FRONTEND_ADDR}..."
              STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
              if [ $STATUSCODE -eq 200 ]; then
                  echo "Frontend is reachable."
                  exit 0
              fi
              echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
              sleep $RETRY_INTERVAL
            done
            echo "Failed to reach frontend after $MAX_RETRIES attempts."
            exit 1
          env:
          - name: FRONTEND_ADDR
            value: frontend:80
          image: busybox:latest
          imagePullPolicy: Always
          name: frontend-check
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: loadgenerator
        serviceAccountName: loadgenerator
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2025-08-31T15:19:00Z"
    generation: 2
    labels:
      app: mcp-server
      pod-template-hash: 64d55bcdcb
    name: mcp-server-64d55bcdcb
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mcp-server
      uid: 165e97bb-1596-4bc2-815d-c8745b424bed
    resourceVersion: "1756654317296783010"
    uid: 9318b2b1-dc53-4a83-a4d3-8acfe170bf8f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mcp-server
        pod-template-hash: 64d55bcdcb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: mcp-server
          pod-template-hash: 64d55bcdcb
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: GEMINI_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: gemini-api-key
          image: us-central1-docker.pkg.dev/gke-hackathon-0831-6943/gke-turns-10-repo/mcp-server:20250831-111835
          imagePullPolicy: Always
          name: mcp-server
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/secrets
            name: gemini-secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gemini-secret-volume
          secret:
            defaultMode: 420
            secretName: gemini-api-key
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:45:44Z"
    generation: 2
    labels:
      app: mcp-server
      pod-template-hash: 6cd9db4cb5
    name: mcp-server-6cd9db4cb5
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mcp-server
      uid: 165e97bb-1596-4bc2-815d-c8745b424bed
    resourceVersion: "1756651474219711017"
    uid: a35a644e-c5ab-43ba-a84f-f722f8221650
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mcp-server
        pod-template-hash: 6cd9db4cb5
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: mcp-server
          pod-template-hash: 6cd9db4cb5
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: GEMINI_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: gemini-api-key
          image: us-central1-docker.pkg.dev/gke-hackathon-0831-6943/gke-turns-10-repo/mcp-server:20250831-094458
          imagePullPolicy: Always
          name: mcp-server
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/secrets
            name: gemini-secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gemini-secret-volume
          secret:
            defaultMode: 420
            secretName: gemini-api-key
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2025-08-31T15:05:59Z"
    generation: 2
    labels:
      app: mcp-server
      pod-template-hash: 76d7fbdf8c
    name: mcp-server-76d7fbdf8c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mcp-server
      uid: 165e97bb-1596-4bc2-815d-c8745b424bed
    resourceVersion: "1756653543049663015"
    uid: 447e86e1-dcd1-430f-99bf-c60260b00aa9
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mcp-server
        pod-template-hash: 76d7fbdf8c
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: mcp-server
          pod-template-hash: 76d7fbdf8c
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: GEMINI_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: gemini-api-key
          image: us-central1-docker.pkg.dev/gke-hackathon-0831-6943/gke-turns-10-repo/mcp-server:20250831-110536
          imagePullPolicy: Always
          name: mcp-server
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/secrets
            name: gemini-secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gemini-secret-volume
          secret:
            defaultMode: 420
            secretName: gemini-api-key
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-08-31T14:44:31Z"
    generation: 2
    labels:
      app: mcp-server
      pod-template-hash: 7f5749475c
    name: mcp-server-7f5749475c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mcp-server
      uid: 165e97bb-1596-4bc2-815d-c8745b424bed
    resourceVersion: "1756652279982511015"
    uid: 129cc6a0-2925-4a0f-8331-44c71d1b39c6
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mcp-server
        pod-template-hash: 7f5749475c
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: mcp-server
          pod-template-hash: 7f5749475c
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: GEMINI_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: gemini-api-key
          image: us-central1-docker.pkg.dev/gke-hackathon-0831-6943/gke-turns-10-repo/mcp-server:20250831-104412
          imagePullPolicy: Always
          name: mcp-server
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/secrets
            name: gemini-secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gemini-secret-volume
          secret:
            defaultMode: 420
            secretName: gemini-api-key
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2025-08-31T14:57:56Z"
    generation: 2
    labels:
      app: mcp-server
      pod-template-hash: f4bf77bd8
    name: mcp-server-f4bf77bd8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mcp-server
      uid: 165e97bb-1596-4bc2-815d-c8745b424bed
    resourceVersion: "1756652761476975000"
    uid: 6e50b337-7cf8-4fcb-9094-d8396848ef34
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mcp-server
        pod-template-hash: f4bf77bd8
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: mcp-server
          pod-template-hash: f4bf77bd8
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: GEMINI_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: gemini-api-key
          image: us-central1-docker.pkg.dev/gke-hackathon-0831-6943/gke-turns-10-repo/mcp-server:20250831-105737
          imagePullPolicy: Always
          name: mcp-server
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/secrets
            name: gemini-secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gemini-secret-volume
          secret:
            defaultMode: 420
            secretName: gemini-api-key
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:44:53Z"
    generation: 2
    labels:
      app: paymentservice
      pod-template-hash: 9ff6ffd6
    name: paymentservice-9ff6ffd6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: paymentservice
      uid: 0cbba18a-8b1d-4922-b85f-42f328c2288d
    resourceVersion: "1756654319520783020"
    uid: 62de668e-8e20-45a3-a9fb-6a3c4cb20c6c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: paymentservice
        pod-template-hash: 9ff6ffd6
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: paymentservice
          pod-template-hash: 9ff6ffd6
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/paymentservice:v0.10.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: paymentservice
        serviceAccountName: paymentservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:44:54Z"
    generation: 2
    labels:
      app: productcatalogservice
      pod-template-hash: 74c67b9d8b
    name: productcatalogservice-74c67b9d8b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: productcatalogservice
      uid: 69df17e6-a008-47a2-be49-600cbd13560b
    resourceVersion: "1756654320385471001"
    uid: 1d5b0dbb-1630-4078-b0ab-1fb5ad50ba32
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: productcatalogservice
        pod-template-hash: 74c67b9d8b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: productcatalogservice
          pod-template-hash: 74c67b9d8b
      spec:
        containers:
        - env:
          - name: PORT
            value: "3550"
          - name: DISABLE_PROFILER
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice:v0.10.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 3550
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: productcatalogservice
        serviceAccountName: productcatalogservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:44:52Z"
    generation: 2
    labels:
      app: recommendationservice
      pod-template-hash: 5966b9f59d
    name: recommendationservice-5966b9f59d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: recommendationservice
      uid: 8b26fd93-525e-40f0-a6ad-486323c1e76f
    resourceVersion: "1756654321947327000"
    uid: f97ababe-bd70-40fe-bfe7-fdd6331049f7
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: recommendationservice
        pod-template-hash: 5966b9f59d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: recommendationservice
          pod-template-hash: 5966b9f59d
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_PROFILER
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/recommendationservice:v0.10.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: recommendationservice
        serviceAccountName: recommendationservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:44:56Z"
    generation: 2
    labels:
      app: redis-cart
      pod-template-hash: c4fc658fb
    name: redis-cart-c4fc658fb
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-cart
      uid: 0c48502d-dced-4917-bd53-a592f33cab03
    resourceVersion: "1756654323564655018"
    uid: cee38cdb-2763-4523-a422-f7a7c222edc5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: redis-cart
        pod-template-hash: c4fc658fb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: redis-cart
          pod-template-hash: c4fc658fb
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:44:58Z"
    generation: 2
    labels:
      app: shippingservice
      pod-template-hash: 5565748dc4
    name: shippingservice-5565748dc4
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: shippingservice
      uid: 66228745-10aa-4441-978b-a95efb3b1a14
    resourceVersion: "1756654325729935012"
    uid: b3bbe93a-e85e-48d6-91d1-ab29b2f02410
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: shippingservice
        pod-template-hash: 5565748dc4
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: shippingservice
          pod-template-hash: 5565748dc4
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice:v0.10.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: shippingservice
        serviceAccountName: shippingservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2025-08-31T14:58:35Z"
    generation: 2
    labels:
      app: streamlit-ui
      pod-template-hash: 57975cf864
    name: streamlit-ui-57975cf864
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: streamlit-ui
      uid: 073a0c70-f5f5-4981-bdc8-8ba953a51a85
    resourceVersion: "1756652806739935023"
    uid: 427a293c-b616-4cf6-9960-020e47aa9cd1
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: streamlit-ui
        pod-template-hash: 57975cf864
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: streamlit-ui
          pod-template-hash: 57975cf864
      spec:
        containers:
        - env:
          - name: PORT
            value: "8501"
          - name: GEMINI_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: gemini-api-key
          image: us-central1-docker.pkg.dev/gke-hackathon-0831-6943/gke-turns-10-repo/streamlit-ui:20250831-105818
          imagePullPolicy: Always
          name: streamlit-ui
          ports:
          - containerPort: 8501
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/secrets
            name: gemini-secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gemini-secret-volume
          secret:
            defaultMode: 420
            secretName: gemini-api-key
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T14:13:53Z"
    generation: 2
    labels:
      app: streamlit-ui
      pod-template-hash: 6d94d7b4cd
    name: streamlit-ui-6d94d7b4cd
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: streamlit-ui
      uid: 073a0c70-f5f5-4981-bdc8-8ba953a51a85
    resourceVersion: "1756651509339631011"
    uid: e1ef8c52-44df-44ba-8122-ad434c544d00
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: streamlit-ui
        pod-template-hash: 6d94d7b4cd
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: streamlit-ui
          pod-template-hash: 6d94d7b4cd
      spec:
        containers:
        - env:
          - name: PORT
            value: "8501"
          - name: GEMINI_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: gemini-api-key
          image: us-central1-docker.pkg.dev/gke-hackathon-0831-6943/gke-turns-10-repo/streamlit-ui:20250831-101302
          imagePullPolicy: Always
          name: streamlit-ui
          ports:
          - containerPort: 8501
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/secrets
            name: gemini-secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gemini-secret-volume
          secret:
            defaultMode: 420
            secretName: gemini-api-key
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2025-08-31T15:19:53Z"
    generation: 2
    labels:
      app: streamlit-ui
      pod-template-hash: 75f48b4bfd
    name: streamlit-ui-75f48b4bfd
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: streamlit-ui
      uid: 073a0c70-f5f5-4981-bdc8-8ba953a51a85
    resourceVersion: "1756654327934015020"
    uid: c342f46d-f88e-4a3f-8803-a37f6d105896
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: streamlit-ui
        pod-template-hash: 75f48b4bfd
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: streamlit-ui
          pod-template-hash: 75f48b4bfd
      spec:
        containers:
        - env:
          - name: PORT
            value: "8501"
          - name: GEMINI_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: gemini-api-key
          image: us-central1-docker.pkg.dev/gke-hackathon-0831-6943/gke-turns-10-repo/streamlit-ui:20250831-111930
          imagePullPolicy: Always
          name: streamlit-ui
          ports:
          - containerPort: 8501
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/secrets
            name: gemini-secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gemini-secret-volume
          secret:
            defaultMode: 420
            secretName: gemini-api-key
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-08-31T14:45:03Z"
    generation: 2
    labels:
      app: streamlit-ui
      pod-template-hash: 89ccfc59b
    name: streamlit-ui-89ccfc59b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: streamlit-ui
      uid: 073a0c70-f5f5-4981-bdc8-8ba953a51a85
    resourceVersion: "1756652318045855016"
    uid: e4c3a88d-9f24-4d4e-acfd-01b0405c9817
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: streamlit-ui
        pod-template-hash: 89ccfc59b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: streamlit-ui
          pod-template-hash: 89ccfc59b
      spec:
        containers:
        - env:
          - name: PORT
            value: "8501"
          - name: GEMINI_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: gemini-api-key
          image: us-central1-docker.pkg.dev/gke-hackathon-0831-6943/gke-turns-10-repo/streamlit-ui:20250831-104448
          imagePullPolicy: Always
          name: streamlit-ui
          ports:
          - containerPort: 8501
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/secrets
            name: gemini-secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gemini-secret-volume
          secret:
            defaultMode: 420
            secretName: gemini-api-key
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2025-08-31T15:06:44Z"
    generation: 2
    labels:
      app: streamlit-ui
      pod-template-hash: b8b85b49f
    name: streamlit-ui-b8b85b49f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: streamlit-ui
      uid: 073a0c70-f5f5-4981-bdc8-8ba953a51a85
    resourceVersion: "1756653596346319003"
    uid: 7888a1b7-4792-4755-9c22-e555248a3eb1
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: streamlit-ui
        pod-template-hash: b8b85b49f
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: streamlit-ui
          pod-template-hash: b8b85b49f
      spec:
        containers:
        - env:
          - name: PORT
            value: "8501"
          - name: GEMINI_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: gemini-api-key
          image: us-central1-docker.pkg.dev/gke-hackathon-0831-6943/gke-turns-10-repo/streamlit-ui:20250831-110624
          imagePullPolicy: Always
          name: streamlit-ui
          ports:
          - containerPort: 8501
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/secrets
            name: gemini-secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gemini-secret-volume
          secret:
            defaultMode: 420
            secretName: gemini-api-key
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:35:56Z"
    generation: 1
    labels:
      app: managed-prometheus-operator
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
      app.kubernetes.io/version: 0.15.4
      pod-template-hash: 769978865b
    name: gmp-operator-769978865b
    namespace: gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: gmp-operator
      uid: bb7d53e7-ef07-428c-9ba9-55798792ac3f
    resourceVersion: "1756654424832207010"
    uid: bc40f3cb-f2c4-4cc6-8221-be20f76f5435
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: gmp-operator
        app.kubernetes.io/part-of: gmp
        pod-template-hash: 769978865b
    template:
      metadata:
        annotations:
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.4-gke.1
        creationTimestamp: null
        labels:
          app: managed-prometheus-operator
          app.kubernetes.io/component: operator
          app.kubernetes.io/name: gmp-operator
          app.kubernetes.io/part-of: gmp
          app.kubernetes.io/version: 0.15.4
          pod-template-hash: 769978865b
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --operator-namespace=gmp-system
          - --public-namespace=gmp-public
          - --webhook-addr=:10250
          - --tls-cert-base64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVIekNDQW9lZ0F3SUJBZ0lSQUpkSVJmd0VHZHJnUmZySE9McGRUTk13RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa05XWTRaamcxTnpZdE1XSXlNUzAwTUdNM0xUazRZalV0TURabE5ETm1aV0k0TURFegpNQjRYRFRJMU1EZ3pNVEV6TWprME5Wb1hEVE13TURnek1ERXpNekUwTlZvd05ERXlNREFHQTFVRUF4TXBaMjF3CkxXOXdaWEpoZEc5eUxtZHRjQzF6ZVhOMFpXMHVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXd3dnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREJKcDlGRDNnaXAremZvTG5mTXN5SENCd0ViR1V5ellMRQo1U3RYeVlXK3FGMnVIdGlhTjNaaDFHSWlHQlUxdkh6RnVZeFVnYjJIUlRjOW9yZ3B1Y0dTYnVuSjRzODJld0c0CjZnZVV4clBidTFNbk45SjliVks1TEJKTCt0WjYxQkZHY2t1TDhvaWFvSUwvRGtWZ0JDZ2Zsa2JnOUNFVWU4Mm8KcEgvNnNGcnAxMko1aWsrMXZQSXVaSVNPeGs1M3czR1JVaWxna3QyRDdiMTJ1TmduRjJzTzg3RjAxQ2FYcVJPWgpxVGE1ZUVmaFVkNTB6cjdweDhvMXRmelBvcHhIblNYSFF3eGY4NDFGdDFuOFlBSkhJNUVMV1poWGROKzh6NDBwCnpnb2RCcjgzaitySDllMHZEbDdHQTNSL0VHbG9QMThReFlheXRCQnZ3RndNcEpvMjJPWkZBZ01CQUFHamdiQXcKZ2Ewd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjRApBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGR00rdlRmWm9yZVhKWDFqWW5lRWhPUGRJTm5rCk1FMEdBMVVkRVFSR01FU0NER2R0Y0MxdmNHVnlZWFJ2Y29JWFoyMXdMVzl3WlhKaGRHOXlMbWR0Y0MxemVYTjAKWlcyQ0cyZHRjQzF2Y0dWeVlYUnZjaTVuYlhBdGMzbHpkR1Z0TG5OMll6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBWUVBbkp2SWpCczBpaGFKK0g1Yi9FUkhwU21USXBLR1lyVUNVRVpwN09ZSk9wNFVLQlhzMVo2NDZ4ZmliRnJzCmE0aVRJM2Y2OGRTQ3BMK3JmMmE0QlEzYzV5eUhYZ0Q2WjdRdTdkMklIMHVaa0kyK1B5Rm1WKzBGMk0zYXZxL1AKNTBQZC9ZMDlTOWdXZE45TVBRY2dDaWNoTlpoOUhCajV4MHhuNzVySjZVNG5VenlTSFJiUHhvNWYwNEZHblI0eApDWnBvd0NEMkRhUS9NU3JLclJPWEVPQVZwNW1WMkhJd1pONFNjQzg5TmVrTGZLTU45OSs5ZElyOXVWd0FURlRmCmZ4VFIrc0FML3NKT0pNVlRITGJYT3ZkOWx5QXh2bk5HcXkyb3pYRUdTNjZkZkN0M1J6SGViYVlDUFRFSis0ZmkKbHZOQmlqTG5qdUpDQWZLNzlhYjhxd3d2QUlTd1ZrUXZwaHFkZjFwOEllOHVldjdJT2hNeU5XaGluMnZXTStubwpkN1FrU1hlVTZjMlpNVC9WcnU1enZwbmZJeDBuQ0ZBNEd1KzF1RDFYRHo4NjkyQmxMaERsYlRuZjk5Z3lVQ0UrCk5GWVQzSGNDVEMyNmlBOVBLUFdqdkdYa1FqbEZyaC9NcDN4WGRER3Y5MW0rOXlNdHVWMU9sYkFoSU1KQm9TSnEKTzlGMgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          - --tls-key-base64=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd1NhZlJROTRJcWZzMzZDNTN6TE1od2djQkd4bE1zMkN4T1VyVjhtRnZxaGRyaDdZCm1qZDJZZFJpSWhnVk5ieDh4Ym1NVklHOWgwVTNQYUs0S2JuQmttN3B5ZUxQTm5zQnVPb0hsTWF6Mjd0VEp6ZlMKZlcxU3VTd1NTL3JXZXRRUlJuSkxpL0tJbXFDQy93NUZZQVFvSDVaRzRQUWhGSHZOcUtSLytyQmE2ZGRpZVlwUAp0Ynp5TG1TRWpzWk9kOE54a1ZJcFlKTGRnKzI5ZHJqWUp4ZHJEdk94ZE5RbWw2a1RtYWsydVhoSDRWSGVkTTYrCjZjZktOYlg4ejZLY1I1MGx4ME1NWC9PTlJiZFovR0FDUnlPUkMxbVlWM1Rmdk0rTktjNEtIUWEvTjQvcXgvWHQKTHc1ZXhnTjBmeEJwYUQ5ZkVNV0dzclFRYjhCY0RLU2FOdGptUlFJREFRQUJBb0lCQUFTdUh1WFpmaHU0M2ZCOQpRSU84QTJDeVBadU4xTlhxVE9UZ2VMQmozYTNFL3FBZGR6b2xaZVR3OUgvRy9aeVR1S0pCNExpYmZEQXU2U3ZCCktaMDVOd3VKVEhqcjJnR0Q4WUs5aVBsOTV4WEg4RGZmRG1ham80R0JJK0JiYjU4Q1RIamNoQ0FiL0Z0aTBFbkYKMnNCODJVd0twQ1VIUlZYdHVnb0FFbW5NcENkT1dmaDFBZEZiVG95aWx1VlhXck50SWNqc2pPVzZOb1pYWGlXNgpjZ2JBRUVzWkdTaTNaRExySEZ3NW4rUEU5SmEyYjBaQ3RvTnJIcDJkbHdHMXYwV2JuUlNHenNhZjZrZEhwN2dVCklmQVh2UnZlWmZvNFlhYkY0R2IyTXdGN1lEcFFZSE4yZTR1QlR4NWkzUWZyVWFCRyt2MFBRRSs4T1RHYjJCckgKMHpCQ3NRRUNnWUVBNVZhenVWMXN3Y2kzYWlSS2dJNlFISVZKbU1XRUF0c1F0QnpCdU0rVmpiU2FWb0VzRHBUaAo3TGFyV3d5cXBpcE1pSzRGYUw5QUhteE91NmRkNSthRnBpL1NZM2E1bmxqS3A3eFZFMThpTThvKzBuRWMvREJFCk9sbUdweDVPWHFLYnVZV2U4WkhaMzZ1MUhORmxCTFZ0UExNc2FuMzdwQTYwc1dZY1d1L3RGWFVDZ1lFQTE1cngKVGI0RUhRKzZ1R2w1M1BCU0ZzK3Y3YjFndFN0MXlMRHNNeU9WWFNwb0pTTkpKOEpuMVJsN2xTbkQ1c1FUTTN6MAphblVSVm96QmJtaWhaeHBXNTJNNTlnOTdqNTZXY3hsZ1h4SkxVNlVpTnFWNnV3K0ZweWJwa1htQUFEcVVUNWVoClRJc0RFT0tIMDY3bkhTL1NRS3FlREQrWXJUWlJyWE9aL0RORjQ1RUNnWUVBdWdYODNDT2F2d2ozTllKZ2FDeTcKV2xjSEhvTkFGQ3pyUEoyQ3lVeWdDNFJ1R0RMSXNMODFEcFFSSkZaKzZTK3dTc0dWSTZUVjlwZDF1YU1GZWNBegpzbHhoOUVudVFESFhsLzBjcVF6bXFrbW5jWDFNdkliT0lPSlRaYVVnZm9TNWVkK1gwR3kwNUVmY0xaYnZzTVVVCjZVS1FpWVROSkFMRnNJdVovbTFVeXEwQ2dZQXpFankra1pnZjJpMzhxTjk0K21RM2l4SzlXZktpZDV6NjRRM1MKUDBlT1BoRlZXcnBsZEtOcjB4RjNEK0didEM1b0w5MGxxbjFrNXdxYXdLWWE2aDVUeVNsZG8rVTg2Ky92YTc5cwpSY1VhRnkrM2loTThaRHpnajFNY1pvOXZmbkRMT2J1M2llWThCYXp1ODZ0RE9xU3ZOTHNqWTUwaXlvOG1hdys2CnNkcUlRUUtCZ1FDdkxnSnJoaWd4QnZLc0Q0clpNWUJiOTlmOWM5NUNiTnljY3J0c1hDaVpDNEdmSC9keU9XenYKV0NsaEtwL0hFQ2FOZjBtVU0vemxzMFpKa0JmeWgwUkgrTWhYTHl3VTU5bHJUQlFhc2NIK085ellQK25RRkR5UgpmaHV0S2pkZE1aR3FQVFhEOThTdEpPYVpTYThscU4rWThRV2NsVUNMVEpwbmNaM0F2L29nVGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
          - --project-id=gke-hackathon-0831-6943
          - --location=us-central1-a
          - --cluster=gke-turns-10-hackathon
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator:v0.15.4-gke.0@sha256:6208d08a2ee884e7d72669b32f2eb9c24386bfb050e3035b5ef16663fd5e4d1d
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: operator
          ports:
          - containerPort: 10250
            name: web
            protocol: TCP
          - containerPort: 18080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2G
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/tls/private
            name: certs
        dnsPolicy: ClusterFirst
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: operator
        serviceAccountName: operator
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: certs
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:35:57Z"
    generation: 2
    labels:
      app: managed-prometheus-rule-evaluator
      app.kubernetes.io/name: rule-evaluator
      app.kubernetes.io/version: 0.15.4
      pod-template-hash: 6959c996ff
    name: rule-evaluator-6959c996ff
    namespace: gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: rule-evaluator
      uid: f95bb17b-4671-4983-9b49-861653e90978
    resourceVersion: "1756647802876095016"
    uid: 8e27822f-b048-49ed-83a9-945cd2d9ce8e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/name: rule-evaluator
        pod-template-hash: 6959c996ff
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.4-gke.1
        creationTimestamp: null
        labels:
          app: managed-prometheus-rule-evaluator
          app.kubernetes.io/name: rule-evaluator
          app.kubernetes.io/version: 0.15.4
          pod-template-hash: 6959c996ff
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --config-file=/prometheus/config/config.yaml
          - --config-file-output=/prometheus/config_out/config.yaml
          - --config-dir=/etc/rules
          - --config-dir-output=/prometheus/rules_out
          - --watched-dir=/etc/secrets
          - --reload-url=http://127.0.0.1:19092/-/reload
          - --ready-url=http://127.0.0.1:19092/-/ready
          - --listen-address=:19093
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.4-gke.0@sha256:d829f291c33fd8eb83073047903ffcc1afa4fce7dea146ad6ed1f409f788d298
          imagePullPolicy: IfNotPresent
          name: config-reloader
          ports:
          - containerPort: 19093
            name: cfg-rel-metrics
            protocol: TCP
          resources:
            limits:
              memory: 32M
            requests:
              cpu: 1m
              memory: 4M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config
            name: config
            readOnly: true
          - mountPath: /prometheus/config_out
            name: config-out
          - mountPath: /etc/rules
            name: rules
            readOnly: true
          - mountPath: /prometheus/rules_out
            name: rules-out
          - mountPath: /etc/secrets
            name: rules-secret
            readOnly: true
        - args:
          - --config.file=/prometheus/config_out/config.yaml
          - --web.listen-address=:19092
          - --export.user-agent-mode=gke
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/rule-evaluator:v0.15.4-gke.0@sha256:3fd60d642225e3f431ff038583a1ef96c98fc48c425024466d9970f9086052fc
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 19092
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: evaluator
          ports:
          - containerPort: 19092
            name: r-eval-metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 19092
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 1G
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config_out
            name: config-out
            readOnly: true
          - mountPath: /etc/rules
            name: rules-out
            readOnly: true
          - mountPath: /etc/secrets
            name: rules-secret
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/bash
          - -c
          - touch /prometheus/config_out/config.yaml
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
          imagePullPolicy: IfNotPresent
          name: config-init
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config_out
            name: config-out
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: collector
        serviceAccountName: collector
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: rule-evaluator
          name: config
        - emptyDir: {}
          name: config-out
        - configMap:
            defaultMode: 420
            name: rules-generated
          name: rules
        - emptyDir: {}
          name: rules-out
        - name: rules-secret
          secret:
            defaultMode: 420
            secretName: rules
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:35:14Z"
    generation: 1
    labels:
      k8s-app: event-exporter
      pod-template-hash: 746f74dd4c
      version: v0.4.0
    name: event-exporter-gke-746f74dd4c
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: event-exporter-gke
      uid: 8796796a-bb27-4752-99f5-5c8a734b5338
    resourceVersion: "1756654443810655015"
    uid: 4c296f18-5aac-473e-920f-43cd157e9919
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: event-exporter
        pod-template-hash: 746f74dd4c
    template:
      metadata:
        annotations:
          components.gke.io/component-name: event-exporter
          components.gke.io/component-version: 1.33.6-gke.0
        creationTimestamp: null
        labels:
          k8s-app: event-exporter
          pod-template-hash: 746f74dd4c
          version: v0.4.0
      spec:
        containers:
        - command:
          - /event-exporter
          - -sink-opts=-stackdriver-resource-model=new -endpoint=https://logging.googleapis.com
          - -prometheus-endpoint=:8080
          - -enable-pod-owner-label=true
          - -system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/event-exporter:v0.5.2-gke.1@sha256:f0f730bfa9f3a396374100063d5770be28c1283d0a5a100886bd36ac7b6ef474
          imagePullPolicy: IfNotPresent
          name: event-exporter
          resources:
            requests:
              cpu: 3m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /monitor
          - --api-override=https://monitoring.googleapis.com/
          - --source=event_exporter:http://localhost:8080?metricsPrefix=container.googleapis.com/internal/addons&whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
          - --source=event_exporter:http://localhost:8080?metricsPrefix=kubernetes.io/internal/addons&customResourceType=k8s_container&customLabels[project_id]&customLabels[location]&customLabels[cluster_name]&customLabels[namespace_name]=kube-system&customLabels[pod_name]=event-exporter-$NODE_NAME&customLabels[container_name]=event-exporter&whitelisted=stackdriver_sink_records_latency_seconds,podlabel_cache_ops_count,podlabel_get_count,podlabel_nolabel_pod_cache_ops_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          - --node-name=$(NODE_NAME)
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-to-sd:v0.12.1-gke.24@sha256:4e76d5f407e7a072f1f26dd1d8b019950d1c7632ed96fdd19315f664413c9b82
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: event-exporter-sa
        serviceAccountName: event-exporter-sa
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/ssl/certs
            type: Directory
          name: ssl-certs
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      credential-normal-mode: "true"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:35:40Z"
    generation: 7
    labels:
      k8s-app: konnectivity-agent
      pod-template-hash: 67d7687977
    name: konnectivity-agent-67d7687977
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: konnectivity-agent
      uid: 1d897f3e-6d1a-4b8a-b6e1-affb2976b311
    resourceVersion: "1756655162049535014"
    uid: fdd62947-a974-4fa4-9b5d-3bc7f0de4bf4
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: konnectivity-agent
        pod-template-hash: 67d7687977
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: konnectivitynetworkproxy-combined
          components.gke.io/component-version: 1.15.5
        creationTimestamp: null
        labels:
          k8s-app: konnectivity-agent
          pod-template-hash: 67d7687977
      spec:
        containers:
        - args:
          - --logtostderr=true
          - --ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - --proxy-server-host=10.128.0.2
          - --proxy-server-port=8132
          - --health-server-port=8093
          - --admin-server-port=8094
          - --sync-interval=5s
          - --sync-interval-cap=30s
          - --sync-forever=true
          - --probe-interval=5s
          - --keepalive-time=60s
          - --service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token
          - --enable-profiling
          - --count-server-leases
          - --server-count-source=max
          - --v=3
          command:
          - /proxy-agent
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent:v0.31.3-gke.1@sha256:aa89e06b001dd7ef9e9082de3da7ef4b7995c6c857e905d3810eb9901664158f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8093
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: konnectivity-agent
          resources:
            limits:
              memory: 125Mi
            requests:
              cpu: 10m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/secrets/tokens
            name: konnectivity-agent-token
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/konnectivity-agent-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: konnectivity-agent-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
          imagePullPolicy: IfNotPresent
          name: konnectivity-agent-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: konnectivity-agent-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: konnectivity-agent
        serviceAccountName: konnectivity-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: sandbox.gke.io/runtime
          operator: Equal
          value: gvisor
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: konnectivity-agent
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              k8s-app: konnectivity-agent
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - name: konnectivity-agent-token
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: system:konnectivity-server
                expirationSeconds: 3600
                path: konnectivity-agent-token
        - configMap:
            defaultMode: 420
            items:
            - key: konnectivity-agent-metrics-collector-config-data
              path: konnectivity-agent-metrics-collector-config-data.textproto
            name: konnectivity-agent-metrics-collector-config-map
          name: konnectivity-agent-metrics-collector-config-map-vol
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 7
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:35:43Z"
    generation: 1
    labels:
      k8s-app: konnectivity-agent-autoscaler
      pod-template-hash: 77dfdd8f5b
    name: konnectivity-agent-autoscaler-77dfdd8f5b
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: konnectivity-agent-autoscaler
      uid: 0c48c2f1-23c4-4c5f-9a26-5a3e11c93089
    resourceVersion: "1756654422376847015"
    uid: 7f226584-f486-49a2-a5bb-8e9515e32d7b
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: konnectivity-agent-autoscaler
        pod-template-hash: 77dfdd8f5b
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: konnectivitynetworkproxy-combined
          components.gke.io/component-version: 1.15.5
        creationTimestamp: null
        labels:
          k8s-app: konnectivity-agent-autoscaler
          pod-template-hash: 77dfdd8f5b
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=konnectivity-agent-autoscaler-config
          - --target=deployment/konnectivity-agent
          - --logtostderr=true
          - --v=2
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.9.1-gke.12@sha256:7a77e5a8e643a7211f9f93727e2a58cee0b4c90f9571c390add18fbc87eb530e
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 10m
              memory: 10M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: konnectivity-agent-cpha
        serviceAccountName: konnectivity-agent-cpha
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:34:58Z"
    generation: 3
    labels:
      k8s-app: kube-dns
      pod-template-hash: "8574985644"
    name: kube-dns-8574985644
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kube-dns
      uid: 70c53201-e668-4835-9a3e-b2974201f4a8
    resourceVersion: "1756655160472479024"
    uid: 02f29ee6-8642-4dcf-be95-b058bdfb518d
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: "8574985644"
    template:
      metadata:
        annotations:
          components.gke.io/component-name: kubedns
          components.gke.io/component-version: 33.2.3
          prometheus.io/port: "10054"
          prometheus.io/scrape: "true"
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: "8574985644"
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --domain=cluster.local.
          - --dns-port=10053
          - --config-dir=/kube-dns-config
          - --v=2
          env:
          - name: PROMETHEUS_PORT
            value: "10055"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns:1.26.4-gke.1@sha256:eaac37b53169bc558d2d2bf21cf0e07554efd5f05816291839e1701746679465
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/kubedns
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kubedns
          ports:
          - containerPort: 10053
            name: dns-local
            protocol: UDP
          - containerPort: 10053
            name: dns-tcp-local
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 210Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /kube-dns-config
            name: kube-dns-config
        - args:
          - -v=2
          - -logtostderr
          - -configDir=/etc/k8s/dns/dnsmasq-nanny
          - -restartDnsmasq=true
          - --
          - -k
          - --cache-size=1000
          - --no-negcache
          - --dns-forward-max=1500
          - --log-facility=-
          - --server=/cluster.local/127.0.0.1#10053
          - --server=/in-addr.arpa/127.0.0.1#10053
          - --server=/ip6.arpa/127.0.0.1#10053
          - --max-ttl=30
          - --max-cache-ttl=30
          - --max-tcp-connections=200
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny:1.26.4-gke.1@sha256:96384c974ede71f9b6e04428ef4e7e404c27399e665b6efaf99fe4f649e42dfb
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/dnsmasq
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: dnsmasq
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          resources:
            requests:
              cpu: 150m
              memory: 20Mi
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              - SETGID
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/k8s/dns/dnsmasq-nanny
            name: kube-dns-config
        - args:
          - --v=2
          - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV
          - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar:1.26.4-gke.1@sha256:94e9c72300d31fc1745a34e1e8a2dbef6b0cc32512552034de177b320d0390a4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: sidecar
          ports:
          - containerPort: 10054
            name: metrics
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubedns-metrics-collector-config-data.textproto,/conf/sidecar-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "128459335788"
          - name: LOCATION
            value: us-central1-a
          - name: CLUSTER_NAME
            value: gke-turns-10-hackathon
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: kubedns-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250708_2300_RC0@sha256:ec164c7e60389f0cdb257acc313034f20335ab67be10b0d3b55a30094e678389
          imagePullPolicy: IfNotPresent
          name: kubedns-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 45Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: kubedns-metrics-collector-config-map-vol
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: kube-dns
        serviceAccountName: kube-dns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-dns
            optional: true
          name: kube-dns-config
        - configMap:
            defaultMode: 420
            items:
            - key: kubedns-metrics-collector-config-data
              path: kubedns-metrics-collector-config-data.textproto
            - key: sidecar-metrics-collector-config-data
              path: sidecar-metrics-collector-config-data.textproto
            name: kubedns-metrics-collector-config-map
          name: kubedns-metrics-collector-config-map-vol
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:35:45Z"
    generation: 1
    labels:
      k8s-app: kube-dns-autoscaler
      pod-template-hash: 84dc5fd76f
    name: kube-dns-autoscaler-84dc5fd76f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kube-dns-autoscaler
      uid: 9c9c4567-79e3-4d9f-9ecd-6f337dbc7557
    resourceVersion: "1756654420368031012"
    uid: 6ef99159-1982-4fac-8f69-401045eab1c3
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-dns-autoscaler
        pod-template-hash: 84dc5fd76f
    template:
      metadata:
        annotations:
          components.gke.io/component-name: kubedns
          components.gke.io/component-version: 33.2.3
        creationTimestamp: null
        labels:
          k8s-app: kube-dns-autoscaler
          pod-template-hash: 84dc5fd76f
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=kube-dns-autoscaler
          - --target=Deployment/kube-dns
          - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true,"includeUnschedulableNodes":true}}
          - --logtostderr=true
          - --v=2
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.10.2-gke.9@sha256:846387ce49a668562e359340dd8f40b4e6e3d3439bbc77ffe1a1599ecfe8f22a
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 20m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: kube-dns-autoscaler
        serviceAccountName: kube-dns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:35:48Z"
    generation: 1
    labels:
      k8s-app: glbc
      name: glbc
      pod-template-hash: 557469886d
    name: l7-default-backend-557469886d
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: l7-default-backend
      uid: 05bfcd6a-ab98-42f6-983c-6b35fedb783e
    resourceVersion: "1756654415284463021"
    uid: 3bebcb5a-95f9-44e9-9a39-56ef0d43b3cb
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: glbc
        pod-template-hash: 557469886d
    template:
      metadata:
        annotations:
          components.gke.io/component-name: l7-lb-controller-combined
          components.gke.io/component-version: 1.36.2-gke.1
        creationTimestamp: null
        labels:
          k8s-app: glbc
          name: glbc
          pod-template-hash: 557469886d
      spec:
        automountServiceAccountToken: false
        containers:
        - image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/ingress-gce-404-server-with-metrics:v1.36.2@sha256:2e2ff60c96f67592b6fa403ec192ad9e4064ec9a9589e2774e6f78eeb1804497
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: default-http-backend
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-31T13:36:02Z"
    generation: 2
    labels:
      k8s-app: metrics-server
      pod-template-hash: 6975dff579
      version: v1.33.0
    name: metrics-server-v1.33.0-6975dff579
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server-v1.33.0
      uid: fc5fde49-852e-4fc5-aa14-36d16017da50
    resourceVersion: "1756647873379359018"
    uid: fe5561e1-5361-48a5-8705-13466b207288
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 6975dff579
        version: v1.33.0
    template:
      metadata:
        annotations:
          components.gke.io/component-name: metrics-server
          components.gke.io/component-version: 1.33.0-gke.1
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: 6975dff579
          version: v1.33.0
        name: metrics-server
      spec:
        containers:
        - command:
          - /metrics-server
          - --metric-resolution=30s
          - --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP
          - --cert-dir=/tmp
          - --secure-port=10250
          - --kubelet-allow-working-set-bytes-zero=false
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/metrics-server:v0.7.1-gke.42@sha256:69a21e428966f9369b5594aa07a2beceb046269d3c7c5b0a0e66ea757dc3c662
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        volumes:
        - configMap:
            defaultMode: 420
            name: metrics-server-config
          name: metrics-server-config-volume
        - emptyDir: {}
          name: tmp-dir
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-08-31T13:36:07Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      pod-template-hash: 7896ccd9f5
      version: v1.33.0
    name: metrics-server-v1.33.0-7896ccd9f5
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server-v1.33.0
      uid: fc5fde49-852e-4fc5-aa14-36d16017da50
    resourceVersion: "1756654495680671008"
    uid: fa2b2276-1b0d-4e6b-a6f5-2fa28390ea04
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 7896ccd9f5
        version: v1.33.0
    template:
      metadata:
        annotations:
          components.gke.io/component-name: metrics-server
          components.gke.io/component-version: 1.33.0-gke.1
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: 7896ccd9f5
          version: v1.33.0
        name: metrics-server
      spec:
        containers:
        - command:
          - /metrics-server
          - --metric-resolution=30s
          - --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP
          - --cert-dir=/tmp
          - --secure-port=10250
          - --kubelet-allow-working-set-bytes-zero=false
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/metrics-server:v0.7.1-gke.42@sha256:69a21e428966f9369b5594aa07a2beceb046269d3c7c5b0a0e66ea757dc3c662
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 43m
              memory: 55Mi
            requests:
              cpu: 43m
              memory: 55Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        volumes:
        - configMap:
            defaultMode: 420
            name: metrics-server-config
          name: metrics-server-config-volume
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      components.gke.io/layer: addon
    creationTimestamp: "2025-08-31T13:35:57Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: alertmanager
    namespace: gmp-system
    resourceVersion: "1756647803954671014"
    uid: 81ecd674-f84a-42a2-9872-ddedfa062ab4
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: managed-prometheus-alertmanager
        app.kubernetes.io/name: alertmanager
    serviceName: alertmanager
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.4-gke.1
        creationTimestamp: null
        labels:
          app: managed-prometheus-alertmanager
          app.kubernetes.io/name: alertmanager
          app.kubernetes.io/version: 0.15.4
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: false
        containers:
        - args:
          - --config.file=/alertmanager/config_out/config.yaml
          - --storage.path=/alertmanager-data
          - --cluster.listen-address=[$(POD_IP)]:9094
          - --web.listen-address=:9093
          - --log.format=json
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/alertmanager:v0.27.0-gmp.4-gke.0@sha256:86611e3a9f1f734081b706474c1af649804d31c3a06e40515fb6e5d73b9c3e08
          imagePullPolicy: IfNotPresent
          name: alertmanager
          ports:
          - containerPort: 9093
            name: alertmanager
            protocol: TCP
          resources:
            limits:
              memory: 128M
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /alertmanager/config_out
            name: alertmanager-config
            readOnly: true
          - mountPath: /alertmanager-data
            name: alertmanager-data
        - args:
          - --config-file=/alertmanager/config.yaml
          - --config-file-output=/alertmanager/config_out/config.yaml
          - --reload-url=http://127.0.0.1:9093/-/reload
          - --ready-url=http://127.0.0.1:9093/-/ready
          - --listen-address=:19091
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.4-gke.0@sha256:d829f291c33fd8eb83073047903ffcc1afa4fce7dea146ad6ed1f409f788d298
          imagePullPolicy: IfNotPresent
          name: config-reloader
          ports:
          - containerPort: 19091
            name: cfg-rel-metrics
            protocol: TCP
          resources:
            limits:
              memory: 32M
            requests:
              cpu: 1m
              memory: 4M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /alertmanager
            name: config
            readOnly: true
          - mountPath: /alertmanager/config_out
            name: alertmanager-config
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/bash
          - -c
          - 'touch /alertmanager/config_out/config.yaml && echo -e "receivers:\n  -
            name: noop\nroute:\n  receiver: noop" > alertmanager/config_out/config.yaml'
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
          imagePullPolicy: IfNotPresent
          name: config-init
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /alertmanager/config_out
            name: alertmanager-config
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - name: config
          secret:
            defaultMode: 420
            secretName: alertmanager
        - emptyDir: {}
          name: alertmanager-data
        - emptyDir: {}
          name: alertmanager-config
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    availableReplicas: 0
    collisionCount: 0
    currentRevision: alertmanager-7f646fc5b5
    observedGeneration: 2
    replicas: 0
    updateRevision: alertmanager-7f646fc5b5
kind: List
metadata:
  resourceVersion: ""
